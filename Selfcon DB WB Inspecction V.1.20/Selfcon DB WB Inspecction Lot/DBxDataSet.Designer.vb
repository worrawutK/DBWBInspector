'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DBxDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DBxDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableDBData As DBDataDataTable
    
    Private tableWBData As WBDataDataTable
    
    Private tableLotAlarmQty As LotAlarmQtyDataTable
    
    Private tableDBWBINSData As DBWBINSDataDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DBData")) Is Nothing) Then
                MyBase.Tables.Add(New DBDataDataTable(ds.Tables("DBData")))
            End If
            If (Not (ds.Tables("WBData")) Is Nothing) Then
                MyBase.Tables.Add(New WBDataDataTable(ds.Tables("WBData")))
            End If
            If (Not (ds.Tables("LotAlarmQty")) Is Nothing) Then
                MyBase.Tables.Add(New LotAlarmQtyDataTable(ds.Tables("LotAlarmQty")))
            End If
            If (Not (ds.Tables("DBWBINSData")) Is Nothing) Then
                MyBase.Tables.Add(New DBWBINSDataDataTable(ds.Tables("DBWBINSData")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DBData() As DBDataDataTable
        Get
            Return Me.tableDBData
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property WBData() As WBDataDataTable
        Get
            Return Me.tableWBData
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LotAlarmQty() As LotAlarmQtyDataTable
        Get
            Return Me.tableLotAlarmQty
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DBWBINSData() As DBWBINSDataDataTable
        Get
            Return Me.tableDBWBINSData
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DBxDataSet = CType(MyBase.Clone,DBxDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("DBData")) Is Nothing) Then
                MyBase.Tables.Add(New DBDataDataTable(ds.Tables("DBData")))
            End If
            If (Not (ds.Tables("WBData")) Is Nothing) Then
                MyBase.Tables.Add(New WBDataDataTable(ds.Tables("WBData")))
            End If
            If (Not (ds.Tables("LotAlarmQty")) Is Nothing) Then
                MyBase.Tables.Add(New LotAlarmQtyDataTable(ds.Tables("LotAlarmQty")))
            End If
            If (Not (ds.Tables("DBWBINSData")) Is Nothing) Then
                MyBase.Tables.Add(New DBWBINSDataDataTable(ds.Tables("DBWBINSData")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDBData = CType(MyBase.Tables("DBData"),DBDataDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDBData) Is Nothing) Then
                Me.tableDBData.InitVars
            End If
        End If
        Me.tableWBData = CType(MyBase.Tables("WBData"),WBDataDataTable)
        If (initTable = true) Then
            If (Not (Me.tableWBData) Is Nothing) Then
                Me.tableWBData.InitVars
            End If
        End If
        Me.tableLotAlarmQty = CType(MyBase.Tables("LotAlarmQty"),LotAlarmQtyDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLotAlarmQty) Is Nothing) Then
                Me.tableLotAlarmQty.InitVars
            End If
        End If
        Me.tableDBWBINSData = CType(MyBase.Tables("DBWBINSData"),DBWBINSDataDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDBWBINSData) Is Nothing) Then
                Me.tableDBWBINSData.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DBxDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DBxDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDBData = New DBDataDataTable()
        MyBase.Tables.Add(Me.tableDBData)
        Me.tableWBData = New WBDataDataTable()
        MyBase.Tables.Add(Me.tableWBData)
        Me.tableLotAlarmQty = New LotAlarmQtyDataTable()
        MyBase.Tables.Add(Me.tableLotAlarmQty)
        Me.tableDBWBINSData = New DBWBINSDataDataTable()
        MyBase.Tables.Add(Me.tableDBWBINSData)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeDBData() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeWBData() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeLotAlarmQty() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeDBWBINSData() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DBxDataSet = New DBxDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub DBDataRowChangeEventHandler(ByVal sender As Object, ByVal e As DBDataRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub WBDataRowChangeEventHandler(ByVal sender As Object, ByVal e As WBDataRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub LotAlarmQtyRowChangeEventHandler(ByVal sender As Object, ByVal e As LotAlarmQtyRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub DBWBINSDataRowChangeEventHandler(ByVal sender As Object, ByVal e As DBWBINSDataRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DBDataDataTable
        Inherits Global.System.Data.TypedTableBase(Of DBDataRow)
        
        Private columnMCNo As Global.System.Data.DataColumn
        
        Private columnLotNo As Global.System.Data.DataColumn
        
        Private columnLotStartTime As Global.System.Data.DataColumn
        
        Private columnMCType As Global.System.Data.DataColumn
        
        Private columnOPNo As Global.System.Data.DataColumn
        
        Private columnInputQty As Global.System.Data.DataColumn
        
        Private columnTotalGood As Global.System.Data.DataColumn
        
        Private columnTotalNG As Global.System.Data.DataColumn
        
        Private columnOPRate As Global.System.Data.DataColumn
        
        Private columnMaximumRPM As Global.System.Data.DataColumn
        
        Private columnAverageRPM As Global.System.Data.DataColumn
        
        Private columnMTBF As Global.System.Data.DataColumn
        
        Private columnMTTR As Global.System.Data.DataColumn
        
        Private columnAlarmTotal As Global.System.Data.DataColumn
        
        Private columnLotEndTime As Global.System.Data.DataColumn
        
        Private columnRunTime As Global.System.Data.DataColumn
        
        Private columnStopTime As Global.System.Data.DataColumn
        
        Private columnAlarmTime As Global.System.Data.DataColumn
        
        Private columnSelfConVersion As Global.System.Data.DataColumn
        
        Private columnNetVersion As Global.System.Data.DataColumn
        
        Private columnNoChipQTY As Global.System.Data.DataColumn
        
        Private columnBrideNG As Global.System.Data.DataColumn
        
        Private columnPickupNG As Global.System.Data.DataColumn
        
        Private columnColletCount As Global.System.Data.DataColumn
        
        Private columnImpQTY As Global.System.Data.DataColumn
        
        Private columnLotQTY As Global.System.Data.DataColumn
        
        Private columnLotCNT As Global.System.Data.DataColumn
        
        Private columnLotGood As Global.System.Data.DataColumn
        
        Private columnLotNG As Global.System.Data.DataColumn
        
        Private columnLotPFNG As Global.System.Data.DataColumn
        
        Private columnBrideNGMC As Global.System.Data.DataColumn
        
        Private columnCancelPcs As Global.System.Data.DataColumn
        
        Private columnCPDispo As Global.System.Data.DataColumn
        
        Private columnZeroCount As Global.System.Data.DataColumn
        
        Private columnZeroEnd As Global.System.Data.DataColumn
        
        Private columnFrameFirstLot As Global.System.Data.DataColumn
        
        Private columnFrameSecondLot As Global.System.Data.DataColumn
        
        Private columnPreformType As Global.System.Data.DataColumn
        
        Private columnPreformFirstLot As Global.System.Data.DataColumn
        
        Private columnPreformSecondLot As Global.System.Data.DataColumn
        
        Private columnPreformFirstLiftTime As Global.System.Data.DataColumn
        
        Private columnPreformSecondLiftTime As Global.System.Data.DataColumn
        
        Private columnAlarmPickUp As Global.System.Data.DataColumn
        
        Private columnAlarmPreform As Global.System.Data.DataColumn
        
        Private columnAlarmBonder As Global.System.Data.DataColumn
        
        Private columnAlarmFrameOut As Global.System.Data.DataColumn
        
        Private columnAlarmBridgeInsp As Global.System.Data.DataColumn
        
        Private columnAlarmPreformInsp As Global.System.Data.DataColumn
        
        Private columnRubberColletNo As Global.System.Data.DataColumn
        
        Private columnOperateContinue As Global.System.Data.DataColumn
        
        Private columnRubberCheck As Global.System.Data.DataColumn
        
        Private columnChipsize1 As Global.System.Data.DataColumn
        
        Private columnChipsize2 As Global.System.Data.DataColumn
        
        Private columnBoundingContinue As Global.System.Data.DataColumn
        
        Private columnColletCheck As Global.System.Data.DataColumn
        
        Private columnPasteNozzleType As Global.System.Data.DataColumn
        
        Private columnPateNozzleNo As Global.System.Data.DataColumn
        
        Private columnPasteNozzleCond As Global.System.Data.DataColumn
        
        Private columnTsukaigeNeedNo As Global.System.Data.DataColumn
        
        Private columnTsukaigeCheck As Global.System.Data.DataColumn
        
        Private columnSolderThickness1 As Global.System.Data.DataColumn
        
        Private columnSolderThickness2 As Global.System.Data.DataColumn
        
        Private columnSolderThickness3 As Global.System.Data.DataColumn
        
        Private columnSolderThickness4 As Global.System.Data.DataColumn
        
        Private columnSolderThicknessAvg As Global.System.Data.DataColumn
        
        Private columnSolderThicknessR As Global.System.Data.DataColumn
        
        Private columnQCFirstLotMode As Global.System.Data.DataColumn
        
        Private columnQCFirstLotAdjust As Global.System.Data.DataColumn
        
        Private columnQCFinishLotMode As Global.System.Data.DataColumn
        
        Private columnQCFinishLotAdjust As Global.System.Data.DataColumn
        
        Private columnQCMiddleLotAb As Global.System.Data.DataColumn
        
        Private columnQCMiddleLotAdjust As Global.System.Data.DataColumn
        
        Private columnMiddleLotJudgement As Global.System.Data.DataColumn
        
        Private columnQCFirstLotAb As Global.System.Data.DataColumn
        
        Private columnQCFinishLotAb As Global.System.Data.DataColumn
        
        Private columnLotJudgement As Global.System.Data.DataColumn
        
        Private columnOPCheck As Global.System.Data.DataColumn
        
        Private columnRemark As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DBData"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MCNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMCNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotStartTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotStartTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MCTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMCType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OPNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InputQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInputQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalGoodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalGood
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OPRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaximumRPMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaximumRPM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AverageRPMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAverageRPM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MTBFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMTBF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MTTRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMTTR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotEndTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotEndTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RunTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRunTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StopTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStopTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SelfConVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSelfConVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NoChipQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoChipQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BrideNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrideNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PickupNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPickupNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ColletCountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColletCount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ImpQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotCNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotCNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotGoodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotGood
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotPFNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotPFNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BrideNGMCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrideNGMC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CancelPcsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCancelPcs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CPDispoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPDispo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ZeroCountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZeroCount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ZeroEndColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZeroEnd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FrameFirstLotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFrameFirstLot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FrameSecondLotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFrameSecondLot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PreformTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreformType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PreformFirstLotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreformFirstLot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PreformSecondLotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreformSecondLot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PreformFirstLiftTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreformFirstLiftTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PreformSecondLiftTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreformSecondLiftTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmPickUpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmPickUp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmPreformColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmPreform
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmBonderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmBonder
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmFrameOutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmFrameOut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmBridgeInspColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmBridgeInsp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmPreformInspColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmPreformInsp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RubberColletNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRubberColletNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OperateContinueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperateContinue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RubberCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRubberCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Chipsize1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChipsize1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Chipsize2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChipsize2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BoundingContinueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBoundingContinue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ColletCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColletCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PasteNozzleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPasteNozzleType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PateNozzleNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPateNozzleNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PasteNozzleCondColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPasteNozzleCond
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TsukaigeNeedNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTsukaigeNeedNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TsukaigeCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTsukaigeCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SolderThickness1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSolderThickness1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SolderThickness2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSolderThickness2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SolderThickness3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSolderThickness3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SolderThickness4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSolderThickness4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SolderThicknessAvgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSolderThicknessAvg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SolderThicknessRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSolderThicknessR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property QCFirstLotModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCFirstLotMode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property QCFirstLotAdjustColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCFirstLotAdjust
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property QCFinishLotModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCFinishLotMode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property QCFinishLotAdjustColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCFinishLotAdjust
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property QCMiddleLotAbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCMiddleLotAb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property QCMiddleLotAdjustColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCMiddleLotAdjust
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MiddleLotJudgementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMiddleLotJudgement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property QCFirstLotAbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCFirstLotAb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property QCFinishLotAbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCFinishLotAb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotJudgementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotJudgement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OPCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DBDataRow
            Get
                Return CType(Me.Rows(index),DBDataRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event DBDataRowChanging As DBDataRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event DBDataRowChanged As DBDataRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event DBDataRowDeleting As DBDataRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event DBDataRowDeleted As DBDataRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddDBDataRow(ByVal row As DBDataRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddDBDataRow( _
                    ByVal MCNo As String,  _
                    ByVal LotNo As String,  _
                    ByVal LotStartTime As Date,  _
                    ByVal MCType As String,  _
                    ByVal OPNo As String,  _
                    ByVal InputQty As Integer,  _
                    ByVal TotalGood As Integer,  _
                    ByVal TotalNG As Integer,  _
                    ByVal OPRate As Single,  _
                    ByVal MaximumRPM As Single,  _
                    ByVal AverageRPM As Single,  _
                    ByVal MTBF As Single,  _
                    ByVal MTTR As Single,  _
                    ByVal AlarmTotal As Short,  _
                    ByVal LotEndTime As Date,  _
                    ByVal RunTime As Single,  _
                    ByVal StopTime As Single,  _
                    ByVal AlarmTime As Single,  _
                    ByVal SelfConVersion As String,  _
                    ByVal NetVersion As String,  _
                    ByVal NoChipQTY As Short,  _
                    ByVal BrideNG As Short,  _
                    ByVal PickupNG As Short,  _
                    ByVal ColletCount As Integer,  _
                    ByVal ImpQTY As Integer,  _
                    ByVal LotQTY As Integer,  _
                    ByVal LotCNT As Integer,  _
                    ByVal LotGood As Integer,  _
                    ByVal LotNG As Integer,  _
                    ByVal LotPFNG As Integer,  _
                    ByVal BrideNGMC As Short,  _
                    ByVal CancelPcs As Integer,  _
                    ByVal CPDispo As Integer,  _
                    ByVal ZeroCount As Integer,  _
                    ByVal ZeroEnd As Integer,  _
                    ByVal FrameFirstLot As String,  _
                    ByVal FrameSecondLot As String,  _
                    ByVal PreformType As String,  _
                    ByVal PreformFirstLot As String,  _
                    ByVal PreformSecondLot As String,  _
                    ByVal PreformFirstLiftTime As Date,  _
                    ByVal PreformSecondLiftTime As Date,  _
                    ByVal AlarmPickUp As Short,  _
                    ByVal AlarmPreform As Short,  _
                    ByVal AlarmBonder As Short,  _
                    ByVal AlarmFrameOut As Short,  _
                    ByVal AlarmBridgeInsp As Short,  _
                    ByVal AlarmPreformInsp As Short,  _
                    ByVal RubberColletNo As Short,  _
                    ByVal OperateContinue As Short,  _
                    ByVal RubberCheck As Boolean,  _
                    ByVal Chipsize1 As Single,  _
                    ByVal Chipsize2 As Single,  _
                    ByVal BoundingContinue As Short,  _
                    ByVal ColletCheck As Boolean,  _
                    ByVal PasteNozzleType As String,  _
                    ByVal PateNozzleNo As String,  _
                    ByVal PasteNozzleCond As String,  _
                    ByVal TsukaigeNeedNo As Short,  _
                    ByVal TsukaigeCheck As String,  _
                    ByVal SolderThickness1 As Short,  _
                    ByVal SolderThickness2 As Short,  _
                    ByVal SolderThickness3 As Short,  _
                    ByVal SolderThickness4 As Short,  _
                    ByVal SolderThicknessAvg As Short,  _
                    ByVal SolderThicknessR As Short,  _
                    ByVal QCFirstLotMode As String,  _
                    ByVal QCFirstLotAdjust As String,  _
                    ByVal QCFinishLotMode As String,  _
                    ByVal QCFinishLotAdjust As String,  _
                    ByVal QCMiddleLotAb As String,  _
                    ByVal QCMiddleLotAdjust As String,  _
                    ByVal MiddleLotJudgement As String,  _
                    ByVal QCFirstLotAb As String,  _
                    ByVal QCFinishLotAb As String,  _
                    ByVal LotJudgement As String,  _
                    ByVal OPCheck As String,  _
                    ByVal Remark As String) As DBDataRow
            Dim rowDBDataRow As DBDataRow = CType(Me.NewRow,DBDataRow)
            Dim columnValuesArray() As Object = New Object() {MCNo, LotNo, LotStartTime, MCType, OPNo, InputQty, TotalGood, TotalNG, OPRate, MaximumRPM, AverageRPM, MTBF, MTTR, AlarmTotal, LotEndTime, RunTime, StopTime, AlarmTime, SelfConVersion, NetVersion, NoChipQTY, BrideNG, PickupNG, ColletCount, ImpQTY, LotQTY, LotCNT, LotGood, LotNG, LotPFNG, BrideNGMC, CancelPcs, CPDispo, ZeroCount, ZeroEnd, FrameFirstLot, FrameSecondLot, PreformType, PreformFirstLot, PreformSecondLot, PreformFirstLiftTime, PreformSecondLiftTime, AlarmPickUp, AlarmPreform, AlarmBonder, AlarmFrameOut, AlarmBridgeInsp, AlarmPreformInsp, RubberColletNo, OperateContinue, RubberCheck, Chipsize1, Chipsize2, BoundingContinue, ColletCheck, PasteNozzleType, PateNozzleNo, PasteNozzleCond, TsukaigeNeedNo, TsukaigeCheck, SolderThickness1, SolderThickness2, SolderThickness3, SolderThickness4, SolderThicknessAvg, SolderThicknessR, QCFirstLotMode, QCFirstLotAdjust, QCFinishLotMode, QCFinishLotAdjust, QCMiddleLotAb, QCMiddleLotAdjust, MiddleLotJudgement, QCFirstLotAb, QCFinishLotAb, LotJudgement, OPCheck, Remark}
            rowDBDataRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDBDataRow)
            Return rowDBDataRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByMCNoLotNoLotStartTime(ByVal MCNo As String, ByVal LotNo As String, ByVal LotStartTime As Date) As DBDataRow
            Return CType(Me.Rows.Find(New Object() {MCNo, LotNo, LotStartTime}),DBDataRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DBDataDataTable = CType(MyBase.Clone,DBDataDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DBDataDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMCNo = MyBase.Columns("MCNo")
            Me.columnLotNo = MyBase.Columns("LotNo")
            Me.columnLotStartTime = MyBase.Columns("LotStartTime")
            Me.columnMCType = MyBase.Columns("MCType")
            Me.columnOPNo = MyBase.Columns("OPNo")
            Me.columnInputQty = MyBase.Columns("InputQty")
            Me.columnTotalGood = MyBase.Columns("TotalGood")
            Me.columnTotalNG = MyBase.Columns("TotalNG")
            Me.columnOPRate = MyBase.Columns("OPRate")
            Me.columnMaximumRPM = MyBase.Columns("MaximumRPM")
            Me.columnAverageRPM = MyBase.Columns("AverageRPM")
            Me.columnMTBF = MyBase.Columns("MTBF")
            Me.columnMTTR = MyBase.Columns("MTTR")
            Me.columnAlarmTotal = MyBase.Columns("AlarmTotal")
            Me.columnLotEndTime = MyBase.Columns("LotEndTime")
            Me.columnRunTime = MyBase.Columns("RunTime")
            Me.columnStopTime = MyBase.Columns("StopTime")
            Me.columnAlarmTime = MyBase.Columns("AlarmTime")
            Me.columnSelfConVersion = MyBase.Columns("SelfConVersion")
            Me.columnNetVersion = MyBase.Columns("NetVersion")
            Me.columnNoChipQTY = MyBase.Columns("NoChipQTY")
            Me.columnBrideNG = MyBase.Columns("BrideNG")
            Me.columnPickupNG = MyBase.Columns("PickupNG")
            Me.columnColletCount = MyBase.Columns("ColletCount")
            Me.columnImpQTY = MyBase.Columns("ImpQTY")
            Me.columnLotQTY = MyBase.Columns("LotQTY")
            Me.columnLotCNT = MyBase.Columns("LotCNT")
            Me.columnLotGood = MyBase.Columns("LotGood")
            Me.columnLotNG = MyBase.Columns("LotNG")
            Me.columnLotPFNG = MyBase.Columns("LotPFNG")
            Me.columnBrideNGMC = MyBase.Columns("BrideNGMC")
            Me.columnCancelPcs = MyBase.Columns("CancelPcs")
            Me.columnCPDispo = MyBase.Columns("CPDispo")
            Me.columnZeroCount = MyBase.Columns("ZeroCount")
            Me.columnZeroEnd = MyBase.Columns("ZeroEnd")
            Me.columnFrameFirstLot = MyBase.Columns("FrameFirstLot")
            Me.columnFrameSecondLot = MyBase.Columns("FrameSecondLot")
            Me.columnPreformType = MyBase.Columns("PreformType")
            Me.columnPreformFirstLot = MyBase.Columns("PreformFirstLot")
            Me.columnPreformSecondLot = MyBase.Columns("PreformSecondLot")
            Me.columnPreformFirstLiftTime = MyBase.Columns("PreformFirstLiftTime")
            Me.columnPreformSecondLiftTime = MyBase.Columns("PreformSecondLiftTime")
            Me.columnAlarmPickUp = MyBase.Columns("AlarmPickUp")
            Me.columnAlarmPreform = MyBase.Columns("AlarmPreform")
            Me.columnAlarmBonder = MyBase.Columns("AlarmBonder")
            Me.columnAlarmFrameOut = MyBase.Columns("AlarmFrameOut")
            Me.columnAlarmBridgeInsp = MyBase.Columns("AlarmBridgeInsp")
            Me.columnAlarmPreformInsp = MyBase.Columns("AlarmPreformInsp")
            Me.columnRubberColletNo = MyBase.Columns("RubberColletNo")
            Me.columnOperateContinue = MyBase.Columns("OperateContinue")
            Me.columnRubberCheck = MyBase.Columns("RubberCheck")
            Me.columnChipsize1 = MyBase.Columns("Chipsize1")
            Me.columnChipsize2 = MyBase.Columns("Chipsize2")
            Me.columnBoundingContinue = MyBase.Columns("BoundingContinue")
            Me.columnColletCheck = MyBase.Columns("ColletCheck")
            Me.columnPasteNozzleType = MyBase.Columns("PasteNozzleType")
            Me.columnPateNozzleNo = MyBase.Columns("PateNozzleNo")
            Me.columnPasteNozzleCond = MyBase.Columns("PasteNozzleCond")
            Me.columnTsukaigeNeedNo = MyBase.Columns("TsukaigeNeedNo")
            Me.columnTsukaigeCheck = MyBase.Columns("TsukaigeCheck")
            Me.columnSolderThickness1 = MyBase.Columns("SolderThickness1")
            Me.columnSolderThickness2 = MyBase.Columns("SolderThickness2")
            Me.columnSolderThickness3 = MyBase.Columns("SolderThickness3")
            Me.columnSolderThickness4 = MyBase.Columns("SolderThickness4")
            Me.columnSolderThicknessAvg = MyBase.Columns("SolderThicknessAvg")
            Me.columnSolderThicknessR = MyBase.Columns("SolderThicknessR")
            Me.columnQCFirstLotMode = MyBase.Columns("QCFirstLotMode")
            Me.columnQCFirstLotAdjust = MyBase.Columns("QCFirstLotAdjust")
            Me.columnQCFinishLotMode = MyBase.Columns("QCFinishLotMode")
            Me.columnQCFinishLotAdjust = MyBase.Columns("QCFinishLotAdjust")
            Me.columnQCMiddleLotAb = MyBase.Columns("QCMiddleLotAb")
            Me.columnQCMiddleLotAdjust = MyBase.Columns("QCMiddleLotAdjust")
            Me.columnMiddleLotJudgement = MyBase.Columns("MiddleLotJudgement")
            Me.columnQCFirstLotAb = MyBase.Columns("QCFirstLotAb")
            Me.columnQCFinishLotAb = MyBase.Columns("QCFinishLotAb")
            Me.columnLotJudgement = MyBase.Columns("LotJudgement")
            Me.columnOPCheck = MyBase.Columns("OPCheck")
            Me.columnRemark = MyBase.Columns("Remark")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMCNo = New Global.System.Data.DataColumn("MCNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMCNo)
            Me.columnLotNo = New Global.System.Data.DataColumn("LotNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotNo)
            Me.columnLotStartTime = New Global.System.Data.DataColumn("LotStartTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotStartTime)
            Me.columnMCType = New Global.System.Data.DataColumn("MCType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMCType)
            Me.columnOPNo = New Global.System.Data.DataColumn("OPNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPNo)
            Me.columnInputQty = New Global.System.Data.DataColumn("InputQty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInputQty)
            Me.columnTotalGood = New Global.System.Data.DataColumn("TotalGood", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalGood)
            Me.columnTotalNG = New Global.System.Data.DataColumn("TotalNG", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalNG)
            Me.columnOPRate = New Global.System.Data.DataColumn("OPRate", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPRate)
            Me.columnMaximumRPM = New Global.System.Data.DataColumn("MaximumRPM", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaximumRPM)
            Me.columnAverageRPM = New Global.System.Data.DataColumn("AverageRPM", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAverageRPM)
            Me.columnMTBF = New Global.System.Data.DataColumn("MTBF", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMTBF)
            Me.columnMTTR = New Global.System.Data.DataColumn("MTTR", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMTTR)
            Me.columnAlarmTotal = New Global.System.Data.DataColumn("AlarmTotal", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmTotal)
            Me.columnLotEndTime = New Global.System.Data.DataColumn("LotEndTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotEndTime)
            Me.columnRunTime = New Global.System.Data.DataColumn("RunTime", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRunTime)
            Me.columnStopTime = New Global.System.Data.DataColumn("StopTime", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStopTime)
            Me.columnAlarmTime = New Global.System.Data.DataColumn("AlarmTime", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmTime)
            Me.columnSelfConVersion = New Global.System.Data.DataColumn("SelfConVersion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSelfConVersion)
            Me.columnNetVersion = New Global.System.Data.DataColumn("NetVersion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetVersion)
            Me.columnNoChipQTY = New Global.System.Data.DataColumn("NoChipQTY", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoChipQTY)
            Me.columnBrideNG = New Global.System.Data.DataColumn("BrideNG", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrideNG)
            Me.columnPickupNG = New Global.System.Data.DataColumn("PickupNG", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPickupNG)
            Me.columnColletCount = New Global.System.Data.DataColumn("ColletCount", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColletCount)
            Me.columnImpQTY = New Global.System.Data.DataColumn("ImpQTY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpQTY)
            Me.columnLotQTY = New Global.System.Data.DataColumn("LotQTY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotQTY)
            Me.columnLotCNT = New Global.System.Data.DataColumn("LotCNT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotCNT)
            Me.columnLotGood = New Global.System.Data.DataColumn("LotGood", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotGood)
            Me.columnLotNG = New Global.System.Data.DataColumn("LotNG", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotNG)
            Me.columnLotPFNG = New Global.System.Data.DataColumn("LotPFNG", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotPFNG)
            Me.columnBrideNGMC = New Global.System.Data.DataColumn("BrideNGMC", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrideNGMC)
            Me.columnCancelPcs = New Global.System.Data.DataColumn("CancelPcs", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCancelPcs)
            Me.columnCPDispo = New Global.System.Data.DataColumn("CPDispo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPDispo)
            Me.columnZeroCount = New Global.System.Data.DataColumn("ZeroCount", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZeroCount)
            Me.columnZeroEnd = New Global.System.Data.DataColumn("ZeroEnd", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZeroEnd)
            Me.columnFrameFirstLot = New Global.System.Data.DataColumn("FrameFirstLot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFrameFirstLot)
            Me.columnFrameSecondLot = New Global.System.Data.DataColumn("FrameSecondLot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFrameSecondLot)
            Me.columnPreformType = New Global.System.Data.DataColumn("PreformType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreformType)
            Me.columnPreformFirstLot = New Global.System.Data.DataColumn("PreformFirstLot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreformFirstLot)
            Me.columnPreformSecondLot = New Global.System.Data.DataColumn("PreformSecondLot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreformSecondLot)
            Me.columnPreformFirstLiftTime = New Global.System.Data.DataColumn("PreformFirstLiftTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreformFirstLiftTime)
            Me.columnPreformSecondLiftTime = New Global.System.Data.DataColumn("PreformSecondLiftTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreformSecondLiftTime)
            Me.columnAlarmPickUp = New Global.System.Data.DataColumn("AlarmPickUp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmPickUp)
            Me.columnAlarmPreform = New Global.System.Data.DataColumn("AlarmPreform", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmPreform)
            Me.columnAlarmBonder = New Global.System.Data.DataColumn("AlarmBonder", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmBonder)
            Me.columnAlarmFrameOut = New Global.System.Data.DataColumn("AlarmFrameOut", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmFrameOut)
            Me.columnAlarmBridgeInsp = New Global.System.Data.DataColumn("AlarmBridgeInsp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmBridgeInsp)
            Me.columnAlarmPreformInsp = New Global.System.Data.DataColumn("AlarmPreformInsp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmPreformInsp)
            Me.columnRubberColletNo = New Global.System.Data.DataColumn("RubberColletNo", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRubberColletNo)
            Me.columnOperateContinue = New Global.System.Data.DataColumn("OperateContinue", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperateContinue)
            Me.columnRubberCheck = New Global.System.Data.DataColumn("RubberCheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRubberCheck)
            Me.columnChipsize1 = New Global.System.Data.DataColumn("Chipsize1", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChipsize1)
            Me.columnChipsize2 = New Global.System.Data.DataColumn("Chipsize2", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChipsize2)
            Me.columnBoundingContinue = New Global.System.Data.DataColumn("BoundingContinue", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBoundingContinue)
            Me.columnColletCheck = New Global.System.Data.DataColumn("ColletCheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColletCheck)
            Me.columnPasteNozzleType = New Global.System.Data.DataColumn("PasteNozzleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPasteNozzleType)
            Me.columnPateNozzleNo = New Global.System.Data.DataColumn("PateNozzleNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPateNozzleNo)
            Me.columnPasteNozzleCond = New Global.System.Data.DataColumn("PasteNozzleCond", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPasteNozzleCond)
            Me.columnTsukaigeNeedNo = New Global.System.Data.DataColumn("TsukaigeNeedNo", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTsukaigeNeedNo)
            Me.columnTsukaigeCheck = New Global.System.Data.DataColumn("TsukaigeCheck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTsukaigeCheck)
            Me.columnSolderThickness1 = New Global.System.Data.DataColumn("SolderThickness1", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSolderThickness1)
            Me.columnSolderThickness2 = New Global.System.Data.DataColumn("SolderThickness2", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSolderThickness2)
            Me.columnSolderThickness3 = New Global.System.Data.DataColumn("SolderThickness3", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSolderThickness3)
            Me.columnSolderThickness4 = New Global.System.Data.DataColumn("SolderThickness4", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSolderThickness4)
            Me.columnSolderThicknessAvg = New Global.System.Data.DataColumn("SolderThicknessAvg", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSolderThicknessAvg)
            Me.columnSolderThicknessR = New Global.System.Data.DataColumn("SolderThicknessR", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSolderThicknessR)
            Me.columnQCFirstLotMode = New Global.System.Data.DataColumn("QCFirstLotMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCFirstLotMode)
            Me.columnQCFirstLotAdjust = New Global.System.Data.DataColumn("QCFirstLotAdjust", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCFirstLotAdjust)
            Me.columnQCFinishLotMode = New Global.System.Data.DataColumn("QCFinishLotMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCFinishLotMode)
            Me.columnQCFinishLotAdjust = New Global.System.Data.DataColumn("QCFinishLotAdjust", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCFinishLotAdjust)
            Me.columnQCMiddleLotAb = New Global.System.Data.DataColumn("QCMiddleLotAb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCMiddleLotAb)
            Me.columnQCMiddleLotAdjust = New Global.System.Data.DataColumn("QCMiddleLotAdjust", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCMiddleLotAdjust)
            Me.columnMiddleLotJudgement = New Global.System.Data.DataColumn("MiddleLotJudgement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMiddleLotJudgement)
            Me.columnQCFirstLotAb = New Global.System.Data.DataColumn("QCFirstLotAb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCFirstLotAb)
            Me.columnQCFinishLotAb = New Global.System.Data.DataColumn("QCFinishLotAb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCFinishLotAb)
            Me.columnLotJudgement = New Global.System.Data.DataColumn("LotJudgement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotJudgement)
            Me.columnOPCheck = New Global.System.Data.DataColumn("OPCheck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPCheck)
            Me.columnRemark = New Global.System.Data.DataColumn("Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemark)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMCNo, Me.columnLotNo, Me.columnLotStartTime}, true))
            Me.columnMCNo.AllowDBNull = false
            Me.columnMCNo.MaxLength = 10
            Me.columnLotNo.AllowDBNull = false
            Me.columnLotNo.MaxLength = 10
            Me.columnLotStartTime.AllowDBNull = false
            Me.columnMCType.MaxLength = 10
            Me.columnOPNo.MaxLength = 8
            Me.columnSelfConVersion.MaxLength = 50
            Me.columnNetVersion.MaxLength = 50
            Me.columnFrameFirstLot.MaxLength = 20
            Me.columnFrameSecondLot.MaxLength = 20
            Me.columnPreformType.MaxLength = 10
            Me.columnPreformFirstLot.MaxLength = 20
            Me.columnPreformSecondLot.MaxLength = 20
            Me.columnPasteNozzleType.MaxLength = 50
            Me.columnPateNozzleNo.MaxLength = 10
            Me.columnPasteNozzleCond.MaxLength = 1
            Me.columnTsukaigeCheck.MaxLength = 1
            Me.columnQCFirstLotMode.MaxLength = 1
            Me.columnQCFirstLotAdjust.MaxLength = 1
            Me.columnQCFinishLotMode.MaxLength = 1
            Me.columnQCFinishLotAdjust.MaxLength = 1
            Me.columnQCMiddleLotAb.MaxLength = 50
            Me.columnQCMiddleLotAdjust.MaxLength = 1
            Me.columnMiddleLotJudgement.MaxLength = 2
            Me.columnQCFirstLotAb.MaxLength = 50
            Me.columnQCFinishLotAb.MaxLength = 50
            Me.columnLotJudgement.MaxLength = 2
            Me.columnOPCheck.MaxLength = 6
            Me.columnRemark.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewDBDataRow() As DBDataRow
            Return CType(Me.NewRow,DBDataRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DBDataRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DBDataRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DBDataRowChangedEvent) Is Nothing) Then
                RaiseEvent DBDataRowChanged(Me, New DBDataRowChangeEvent(CType(e.Row,DBDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DBDataRowChangingEvent) Is Nothing) Then
                RaiseEvent DBDataRowChanging(Me, New DBDataRowChangeEvent(CType(e.Row,DBDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DBDataRowDeletedEvent) Is Nothing) Then
                RaiseEvent DBDataRowDeleted(Me, New DBDataRowChangeEvent(CType(e.Row,DBDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DBDataRowDeletingEvent) Is Nothing) Then
                RaiseEvent DBDataRowDeleting(Me, New DBDataRowChangeEvent(CType(e.Row,DBDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveDBDataRow(ByVal row As DBDataRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DBxDataSet = New DBxDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DBDataDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class WBDataDataTable
        Inherits Global.System.Data.TypedTableBase(Of WBDataRow)
        
        Private columnMCNo As Global.System.Data.DataColumn
        
        Private columnLotNo As Global.System.Data.DataColumn
        
        Private columnLotStartTime As Global.System.Data.DataColumn
        
        Private columnMCType As Global.System.Data.DataColumn
        
        Private columnOPNo As Global.System.Data.DataColumn
        
        Private columnInputQty As Global.System.Data.DataColumn
        
        Private columnTotalGood As Global.System.Data.DataColumn
        
        Private columnTotalNG As Global.System.Data.DataColumn
        
        Private columnOPRate As Global.System.Data.DataColumn
        
        Private columnMaximumRPM As Global.System.Data.DataColumn
        
        Private columnAverageRPM As Global.System.Data.DataColumn
        
        Private columnMTBF As Global.System.Data.DataColumn
        
        Private columnMTTR As Global.System.Data.DataColumn
        
        Private columnAlarmTotal As Global.System.Data.DataColumn
        
        Private columnLotEndTime As Global.System.Data.DataColumn
        
        Private columnRunTime As Global.System.Data.DataColumn
        
        Private columnStopTime As Global.System.Data.DataColumn
        
        Private columnAlarmTime As Global.System.Data.DataColumn
        
        Private columnSelfConVersion As Global.System.Data.DataColumn
        
        Private columnNetVersion As Global.System.Data.DataColumn
        
        Private columnGoodWire As Global.System.Data.DataColumn
        
        Private columnAu As Global.System.Data.DataColumn
        
        Private columnTotalGoodChip As Global.System.Data.DataColumn
        
        Private columnTotalNGChip As Global.System.Data.DataColumn
        
        Private columnNoChip As Global.System.Data.DataColumn
        
        Private columnAlarm As Global.System.Data.DataColumn
        
        Private columnAuUnnecessary As Global.System.Data.DataColumn
        
        Private columnAuNormal As Global.System.Data.DataColumn
        
        Private columnAuAbnormal As Global.System.Data.DataColumn
        
        Private columnChipZure0to50 As Global.System.Data.DataColumn
        
        Private columnChipZure51to100 As Global.System.Data.DataColumn
        
        Private columnChipZure101to150 As Global.System.Data.DataColumn
        
        Private columnChipZure151to200 As Global.System.Data.DataColumn
        
        Private columnChipZure201to250 As Global.System.Data.DataColumn
        
        Private columnChipZure251toOver As Global.System.Data.DataColumn
        
        Private columnNinshikiRetry As Global.System.Data.DataColumn
        
        Private columnSpanRetry As Global.System.Data.DataColumn
        
        Private columnNinshikiAlarmQTY As Global.System.Data.DataColumn
        
        Private columnSpanCounter As Global.System.Data.DataColumn
        
        Private columnNinshikiGood As Global.System.Data.DataColumn
        
        Private columnNinshikiNG As Global.System.Data.DataColumn
        
        Private columnPNashi As Global.System.Data.DataColumn
        
        Private columnCapillaryLife As Global.System.Data.DataColumn
        
        Private columnComName As Global.System.Data.DataColumn
        
        Private columnHajikiBe As Global.System.Data.DataColumn
        
        Private columnHajikiAf As Global.System.Data.DataColumn
        
        Private columnHajikiPn As Global.System.Data.DataColumn
        
        Private columnPeelBe As Global.System.Data.DataColumn
        
        Private columnPeelAf As Global.System.Data.DataColumn
        
        Private columnPeelPn As Global.System.Data.DataColumn
        
        Private columnDbBdBe As Global.System.Data.DataColumn
        
        Private columnDbBdAf As Global.System.Data.DataColumn
        
        Private columnDbBdPn As Global.System.Data.DataColumn
        
        Private columnFirstJudgBe As Global.System.Data.DataColumn
        
        Private columnFirstJudgAf As Global.System.Data.DataColumn
        
        Private columnFirstJudgPn As Global.System.Data.DataColumn
        
        Private columnFinJudgBe As Global.System.Data.DataColumn
        
        Private columnFinJudgAf As Global.System.Data.DataColumn
        
        Private columnFinJudgPn As Global.System.Data.DataColumn
        
        Private columnLotJudg As Global.System.Data.DataColumn
        
        Private columnLotJudg_Detail As Global.System.Data.DataColumn
        
        Private columnOPJudgement As Global.System.Data.DataColumn
        
        Private columnHBTemp As Global.System.Data.DataColumn
        
        Private columnRemark As Global.System.Data.DataColumn
        
        Private columnAlarmEFO As Global.System.Data.DataColumn
        
        Private columnAlarmDieEyeFail As Global.System.Data.DataColumn
        
        Private columnAlarmLeadEyeFail As Global.System.Data.DataColumn
        
        Private columnAlarmSmallBall As Global.System.Data.DataColumn
        
        Private columnAlarmNSOL As Global.System.Data.DataColumn
        
        Private columnAlarmNSOP As Global.System.Data.DataColumn
        
        Private columnAlarmOther As Global.System.Data.DataColumn
        
        Private columnTPMake As Global.System.Data.DataColumn
        
        Private columnCAPChange As Global.System.Data.DataColumn
        
        Private columnHP_PPChange As Global.System.Data.DataColumn
        
        Private columnWireSizeChange As Global.System.Data.DataColumn
        
        Private columnBMBefore As Global.System.Data.DataColumn
        
        Private columnNGScrap As Global.System.Data.DataColumn
        
        Private columnTPMakeStart As Global.System.Data.DataColumn
        
        Private columnTPMakeFinish As Global.System.Data.DataColumn
        
        Private columnBMMode As Global.System.Data.DataColumn
        
        Private columnBMStart As Global.System.Data.DataColumn
        
        Private columnBMFinish As Global.System.Data.DataColumn
        
        Private columnBMRequest As Global.System.Data.DataColumn
        
        Private columnBMIncharge As Global.System.Data.DataColumn
        
        Private columnTPMakeIncharge As Global.System.Data.DataColumn
        
        Private columnInputQtyAdjust As Global.System.Data.DataColumn
        
        Private columnTotalGoodAdjust As Global.System.Data.DataColumn
        
        Private columnTotalNGAdjust As Global.System.Data.DataColumn
        
        Private columnGoldWireID1 As Global.System.Data.DataColumn
        
        Private columnGoldWireID2 As Global.System.Data.DataColumn
        
        Private columnCAPID1 As Global.System.Data.DataColumn
        
        Private columnCAPID2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "WBData"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MCNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMCNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotStartTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotStartTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MCTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMCType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OPNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InputQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInputQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalGoodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalGood
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OPRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaximumRPMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaximumRPM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AverageRPMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAverageRPM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MTBFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMTBF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MTTRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMTTR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotEndTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotEndTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RunTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRunTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StopTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStopTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SelfConVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSelfConVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GoodWireColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoodWire
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalGoodChipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalGoodChip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalNGChipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalNGChip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NoChipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoChip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AuUnnecessaryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAuUnnecessary
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AuNormalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAuNormal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AuAbnormalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAuAbnormal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChipZure0to50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChipZure0to50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChipZure51to100Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChipZure51to100
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChipZure101to150Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChipZure101to150
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChipZure151to200Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChipZure151to200
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChipZure201to250Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChipZure201to250
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChipZure251toOverColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChipZure251toOver
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NinshikiRetryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNinshikiRetry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpanRetryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpanRetry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NinshikiAlarmQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNinshikiAlarmQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpanCounterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpanCounter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NinshikiGoodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNinshikiGood
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NinshikiNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNinshikiNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PNashiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNashi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CapillaryLifeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCapillaryLife
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ComNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HajikiBeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHajikiBe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HajikiAfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHajikiAf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HajikiPnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHajikiPn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PeelBeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeelBe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PeelAfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeelAf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PeelPnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeelPn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DbBdBeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDbBdBe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DbBdAfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDbBdAf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DbBdPnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDbBdPn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FirstJudgBeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstJudgBe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FirstJudgAfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstJudgAf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FirstJudgPnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstJudgPn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FinJudgBeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinJudgBe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FinJudgAfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinJudgAf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FinJudgPnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinJudgPn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotJudgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotJudg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotJudg_DetailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotJudg_Detail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OPJudgementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPJudgement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HBTempColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHBTemp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmEFOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmEFO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmDieEyeFailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmDieEyeFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmLeadEyeFailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmLeadEyeFail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmSmallBallColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmSmallBall
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmNSOLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmNSOL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmNSOPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmNSOP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmOtherColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmOther
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TPMakeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTPMake
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAPChangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPChange
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HP_PPChangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHP_PPChange
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WireSizeChangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWireSizeChange
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BMBeforeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBMBefore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NGScrapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNGScrap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TPMakeStartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTPMakeStart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TPMakeFinishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTPMakeFinish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BMModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBMMode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BMStartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBMStart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BMFinishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBMFinish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BMRequestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBMRequest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BMInchargeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBMIncharge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TPMakeInchargeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTPMakeIncharge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InputQtyAdjustColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInputQtyAdjust
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalGoodAdjustColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalGoodAdjust
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalNGAdjustColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalNGAdjust
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GoldWireID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoldWireID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GoldWireID2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoldWireID2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAPID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAPID2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPID2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As WBDataRow
            Get
                Return CType(Me.Rows(index),WBDataRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event WBDataRowChanging As WBDataRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event WBDataRowChanged As WBDataRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event WBDataRowDeleting As WBDataRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event WBDataRowDeleted As WBDataRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddWBDataRow(ByVal row As WBDataRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddWBDataRow( _
                    ByVal MCNo As String,  _
                    ByVal LotNo As String,  _
                    ByVal LotStartTime As Date,  _
                    ByVal MCType As String,  _
                    ByVal OPNo As String,  _
                    ByVal InputQty As Integer,  _
                    ByVal TotalGood As Integer,  _
                    ByVal TotalNG As Integer,  _
                    ByVal OPRate As Single,  _
                    ByVal MaximumRPM As Single,  _
                    ByVal AverageRPM As Single,  _
                    ByVal MTBF As Single,  _
                    ByVal MTTR As Single,  _
                    ByVal AlarmTotal As Short,  _
                    ByVal LotEndTime As Date,  _
                    ByVal RunTime As Single,  _
                    ByVal StopTime As Single,  _
                    ByVal AlarmTime As Single,  _
                    ByVal SelfConVersion As String,  _
                    ByVal NetVersion As String,  _
                    ByVal GoodWire As Integer,  _
                    ByVal Au As Integer,  _
                    ByVal TotalGoodChip As Short,  _
                    ByVal TotalNGChip As Short,  _
                    ByVal NoChip As Short,  _
                    ByVal Alarm As Single,  _
                    ByVal AuUnnecessary As Short,  _
                    ByVal AuNormal As Short,  _
                    ByVal AuAbnormal As Short,  _
                    ByVal ChipZure0to50 As Short,  _
                    ByVal ChipZure51to100 As Short,  _
                    ByVal ChipZure101to150 As Short,  _
                    ByVal ChipZure151to200 As Short,  _
                    ByVal ChipZure201to250 As Short,  _
                    ByVal ChipZure251toOver As Short,  _
                    ByVal NinshikiRetry As Short,  _
                    ByVal SpanRetry As Short,  _
                    ByVal NinshikiAlarmQTY As Short,  _
                    ByVal SpanCounter As Short,  _
                    ByVal NinshikiGood As Short,  _
                    ByVal NinshikiNG As Short,  _
                    ByVal PNashi As Short,  _
                    ByVal CapillaryLife As Single,  _
                    ByVal ComName As String,  _
                    ByVal HajikiBe As String,  _
                    ByVal HajikiAf As String,  _
                    ByVal HajikiPn As Short,  _
                    ByVal PeelBe As String,  _
                    ByVal PeelAf As String,  _
                    ByVal PeelPn As Short,  _
                    ByVal DbBdBe As String,  _
                    ByVal DbBdAf As String,  _
                    ByVal DbBdPn As Short,  _
                    ByVal FirstJudgBe As String,  _
                    ByVal FirstJudgAf As String,  _
                    ByVal FirstJudgPn As Short,  _
                    ByVal FinJudgBe As String,  _
                    ByVal FinJudgAf As String,  _
                    ByVal FinJudgPn As Short,  _
                    ByVal LotJudg As String,  _
                    ByVal LotJudg_Detail As Short,  _
                    ByVal OPJudgement As String,  _
                    ByVal HBTemp As Short,  _
                    ByVal Remark As String,  _
                    ByVal AlarmEFO As Short,  _
                    ByVal AlarmDieEyeFail As Short,  _
                    ByVal AlarmLeadEyeFail As Short,  _
                    ByVal AlarmSmallBall As Short,  _
                    ByVal AlarmNSOL As Short,  _
                    ByVal AlarmNSOP As Short,  _
                    ByVal AlarmOther As Short,  _
                    ByVal TPMake As Boolean,  _
                    ByVal CAPChange As Boolean,  _
                    ByVal HP_PPChange As Boolean,  _
                    ByVal WireSizeChange As Boolean,  _
                    ByVal BMBefore As Boolean,  _
                    ByVal NGScrap As Short,  _
                    ByVal TPMakeStart As Date,  _
                    ByVal TPMakeFinish As Date,  _
                    ByVal BMMode As String,  _
                    ByVal BMStart As Date,  _
                    ByVal BMFinish As Date,  _
                    ByVal BMRequest As Boolean,  _
                    ByVal BMIncharge As String,  _
                    ByVal TPMakeIncharge As String,  _
                    ByVal InputQtyAdjust As Integer,  _
                    ByVal TotalGoodAdjust As Integer,  _
                    ByVal TotalNGAdjust As Integer,  _
                    ByVal GoldWireID1 As Integer,  _
                    ByVal GoldWireID2 As Integer,  _
                    ByVal CAPID1 As Integer,  _
                    ByVal CAPID2 As Integer) As WBDataRow
            Dim rowWBDataRow As WBDataRow = CType(Me.NewRow,WBDataRow)
            Dim columnValuesArray() As Object = New Object() {MCNo, LotNo, LotStartTime, MCType, OPNo, InputQty, TotalGood, TotalNG, OPRate, MaximumRPM, AverageRPM, MTBF, MTTR, AlarmTotal, LotEndTime, RunTime, StopTime, AlarmTime, SelfConVersion, NetVersion, GoodWire, Au, TotalGoodChip, TotalNGChip, NoChip, Alarm, AuUnnecessary, AuNormal, AuAbnormal, ChipZure0to50, ChipZure51to100, ChipZure101to150, ChipZure151to200, ChipZure201to250, ChipZure251toOver, NinshikiRetry, SpanRetry, NinshikiAlarmQTY, SpanCounter, NinshikiGood, NinshikiNG, PNashi, CapillaryLife, ComName, HajikiBe, HajikiAf, HajikiPn, PeelBe, PeelAf, PeelPn, DbBdBe, DbBdAf, DbBdPn, FirstJudgBe, FirstJudgAf, FirstJudgPn, FinJudgBe, FinJudgAf, FinJudgPn, LotJudg, LotJudg_Detail, OPJudgement, HBTemp, Remark, AlarmEFO, AlarmDieEyeFail, AlarmLeadEyeFail, AlarmSmallBall, AlarmNSOL, AlarmNSOP, AlarmOther, TPMake, CAPChange, HP_PPChange, WireSizeChange, BMBefore, NGScrap, TPMakeStart, TPMakeFinish, BMMode, BMStart, BMFinish, BMRequest, BMIncharge, TPMakeIncharge, InputQtyAdjust, TotalGoodAdjust, TotalNGAdjust, GoldWireID1, GoldWireID2, CAPID1, CAPID2}
            rowWBDataRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowWBDataRow)
            Return rowWBDataRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByMCNoLotNoLotStartTime(ByVal MCNo As String, ByVal LotNo As String, ByVal LotStartTime As Date) As WBDataRow
            Return CType(Me.Rows.Find(New Object() {MCNo, LotNo, LotStartTime}),WBDataRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As WBDataDataTable = CType(MyBase.Clone,WBDataDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New WBDataDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMCNo = MyBase.Columns("MCNo")
            Me.columnLotNo = MyBase.Columns("LotNo")
            Me.columnLotStartTime = MyBase.Columns("LotStartTime")
            Me.columnMCType = MyBase.Columns("MCType")
            Me.columnOPNo = MyBase.Columns("OPNo")
            Me.columnInputQty = MyBase.Columns("InputQty")
            Me.columnTotalGood = MyBase.Columns("TotalGood")
            Me.columnTotalNG = MyBase.Columns("TotalNG")
            Me.columnOPRate = MyBase.Columns("OPRate")
            Me.columnMaximumRPM = MyBase.Columns("MaximumRPM")
            Me.columnAverageRPM = MyBase.Columns("AverageRPM")
            Me.columnMTBF = MyBase.Columns("MTBF")
            Me.columnMTTR = MyBase.Columns("MTTR")
            Me.columnAlarmTotal = MyBase.Columns("AlarmTotal")
            Me.columnLotEndTime = MyBase.Columns("LotEndTime")
            Me.columnRunTime = MyBase.Columns("RunTime")
            Me.columnStopTime = MyBase.Columns("StopTime")
            Me.columnAlarmTime = MyBase.Columns("AlarmTime")
            Me.columnSelfConVersion = MyBase.Columns("SelfConVersion")
            Me.columnNetVersion = MyBase.Columns("NetVersion")
            Me.columnGoodWire = MyBase.Columns("GoodWire")
            Me.columnAu = MyBase.Columns("Au")
            Me.columnTotalGoodChip = MyBase.Columns("TotalGoodChip")
            Me.columnTotalNGChip = MyBase.Columns("TotalNGChip")
            Me.columnNoChip = MyBase.Columns("NoChip")
            Me.columnAlarm = MyBase.Columns("Alarm")
            Me.columnAuUnnecessary = MyBase.Columns("AuUnnecessary")
            Me.columnAuNormal = MyBase.Columns("AuNormal")
            Me.columnAuAbnormal = MyBase.Columns("AuAbnormal")
            Me.columnChipZure0to50 = MyBase.Columns("ChipZure0to50")
            Me.columnChipZure51to100 = MyBase.Columns("ChipZure51to100")
            Me.columnChipZure101to150 = MyBase.Columns("ChipZure101to150")
            Me.columnChipZure151to200 = MyBase.Columns("ChipZure151to200")
            Me.columnChipZure201to250 = MyBase.Columns("ChipZure201to250")
            Me.columnChipZure251toOver = MyBase.Columns("ChipZure251toOver")
            Me.columnNinshikiRetry = MyBase.Columns("NinshikiRetry")
            Me.columnSpanRetry = MyBase.Columns("SpanRetry")
            Me.columnNinshikiAlarmQTY = MyBase.Columns("NinshikiAlarmQTY")
            Me.columnSpanCounter = MyBase.Columns("SpanCounter")
            Me.columnNinshikiGood = MyBase.Columns("NinshikiGood")
            Me.columnNinshikiNG = MyBase.Columns("NinshikiNG")
            Me.columnPNashi = MyBase.Columns("PNashi")
            Me.columnCapillaryLife = MyBase.Columns("CapillaryLife")
            Me.columnComName = MyBase.Columns("ComName")
            Me.columnHajikiBe = MyBase.Columns("HajikiBe")
            Me.columnHajikiAf = MyBase.Columns("HajikiAf")
            Me.columnHajikiPn = MyBase.Columns("HajikiPn")
            Me.columnPeelBe = MyBase.Columns("PeelBe")
            Me.columnPeelAf = MyBase.Columns("PeelAf")
            Me.columnPeelPn = MyBase.Columns("PeelPn")
            Me.columnDbBdBe = MyBase.Columns("DbBdBe")
            Me.columnDbBdAf = MyBase.Columns("DbBdAf")
            Me.columnDbBdPn = MyBase.Columns("DbBdPn")
            Me.columnFirstJudgBe = MyBase.Columns("FirstJudgBe")
            Me.columnFirstJudgAf = MyBase.Columns("FirstJudgAf")
            Me.columnFirstJudgPn = MyBase.Columns("FirstJudgPn")
            Me.columnFinJudgBe = MyBase.Columns("FinJudgBe")
            Me.columnFinJudgAf = MyBase.Columns("FinJudgAf")
            Me.columnFinJudgPn = MyBase.Columns("FinJudgPn")
            Me.columnLotJudg = MyBase.Columns("LotJudg")
            Me.columnLotJudg_Detail = MyBase.Columns("LotJudg_Detail")
            Me.columnOPJudgement = MyBase.Columns("OPJudgement")
            Me.columnHBTemp = MyBase.Columns("HBTemp")
            Me.columnRemark = MyBase.Columns("Remark")
            Me.columnAlarmEFO = MyBase.Columns("AlarmEFO")
            Me.columnAlarmDieEyeFail = MyBase.Columns("AlarmDieEyeFail")
            Me.columnAlarmLeadEyeFail = MyBase.Columns("AlarmLeadEyeFail")
            Me.columnAlarmSmallBall = MyBase.Columns("AlarmSmallBall")
            Me.columnAlarmNSOL = MyBase.Columns("AlarmNSOL")
            Me.columnAlarmNSOP = MyBase.Columns("AlarmNSOP")
            Me.columnAlarmOther = MyBase.Columns("AlarmOther")
            Me.columnTPMake = MyBase.Columns("TPMake")
            Me.columnCAPChange = MyBase.Columns("CAPChange")
            Me.columnHP_PPChange = MyBase.Columns("HP_PPChange")
            Me.columnWireSizeChange = MyBase.Columns("WireSizeChange")
            Me.columnBMBefore = MyBase.Columns("BMBefore")
            Me.columnNGScrap = MyBase.Columns("NGScrap")
            Me.columnTPMakeStart = MyBase.Columns("TPMakeStart")
            Me.columnTPMakeFinish = MyBase.Columns("TPMakeFinish")
            Me.columnBMMode = MyBase.Columns("BMMode")
            Me.columnBMStart = MyBase.Columns("BMStart")
            Me.columnBMFinish = MyBase.Columns("BMFinish")
            Me.columnBMRequest = MyBase.Columns("BMRequest")
            Me.columnBMIncharge = MyBase.Columns("BMIncharge")
            Me.columnTPMakeIncharge = MyBase.Columns("TPMakeIncharge")
            Me.columnInputQtyAdjust = MyBase.Columns("InputQtyAdjust")
            Me.columnTotalGoodAdjust = MyBase.Columns("TotalGoodAdjust")
            Me.columnTotalNGAdjust = MyBase.Columns("TotalNGAdjust")
            Me.columnGoldWireID1 = MyBase.Columns("GoldWireID1")
            Me.columnGoldWireID2 = MyBase.Columns("GoldWireID2")
            Me.columnCAPID1 = MyBase.Columns("CAPID1")
            Me.columnCAPID2 = MyBase.Columns("CAPID2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMCNo = New Global.System.Data.DataColumn("MCNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMCNo)
            Me.columnLotNo = New Global.System.Data.DataColumn("LotNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotNo)
            Me.columnLotStartTime = New Global.System.Data.DataColumn("LotStartTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotStartTime)
            Me.columnMCType = New Global.System.Data.DataColumn("MCType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMCType)
            Me.columnOPNo = New Global.System.Data.DataColumn("OPNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPNo)
            Me.columnInputQty = New Global.System.Data.DataColumn("InputQty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInputQty)
            Me.columnTotalGood = New Global.System.Data.DataColumn("TotalGood", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalGood)
            Me.columnTotalNG = New Global.System.Data.DataColumn("TotalNG", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalNG)
            Me.columnOPRate = New Global.System.Data.DataColumn("OPRate", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPRate)
            Me.columnMaximumRPM = New Global.System.Data.DataColumn("MaximumRPM", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaximumRPM)
            Me.columnAverageRPM = New Global.System.Data.DataColumn("AverageRPM", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAverageRPM)
            Me.columnMTBF = New Global.System.Data.DataColumn("MTBF", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMTBF)
            Me.columnMTTR = New Global.System.Data.DataColumn("MTTR", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMTTR)
            Me.columnAlarmTotal = New Global.System.Data.DataColumn("AlarmTotal", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmTotal)
            Me.columnLotEndTime = New Global.System.Data.DataColumn("LotEndTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotEndTime)
            Me.columnRunTime = New Global.System.Data.DataColumn("RunTime", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRunTime)
            Me.columnStopTime = New Global.System.Data.DataColumn("StopTime", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStopTime)
            Me.columnAlarmTime = New Global.System.Data.DataColumn("AlarmTime", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmTime)
            Me.columnSelfConVersion = New Global.System.Data.DataColumn("SelfConVersion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSelfConVersion)
            Me.columnNetVersion = New Global.System.Data.DataColumn("NetVersion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetVersion)
            Me.columnGoodWire = New Global.System.Data.DataColumn("GoodWire", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoodWire)
            Me.columnAu = New Global.System.Data.DataColumn("Au", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAu)
            Me.columnTotalGoodChip = New Global.System.Data.DataColumn("TotalGoodChip", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalGoodChip)
            Me.columnTotalNGChip = New Global.System.Data.DataColumn("TotalNGChip", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalNGChip)
            Me.columnNoChip = New Global.System.Data.DataColumn("NoChip", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoChip)
            Me.columnAlarm = New Global.System.Data.DataColumn("Alarm", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarm)
            Me.columnAuUnnecessary = New Global.System.Data.DataColumn("AuUnnecessary", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAuUnnecessary)
            Me.columnAuNormal = New Global.System.Data.DataColumn("AuNormal", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAuNormal)
            Me.columnAuAbnormal = New Global.System.Data.DataColumn("AuAbnormal", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAuAbnormal)
            Me.columnChipZure0to50 = New Global.System.Data.DataColumn("ChipZure0to50", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChipZure0to50)
            Me.columnChipZure51to100 = New Global.System.Data.DataColumn("ChipZure51to100", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChipZure51to100)
            Me.columnChipZure101to150 = New Global.System.Data.DataColumn("ChipZure101to150", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChipZure101to150)
            Me.columnChipZure151to200 = New Global.System.Data.DataColumn("ChipZure151to200", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChipZure151to200)
            Me.columnChipZure201to250 = New Global.System.Data.DataColumn("ChipZure201to250", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChipZure201to250)
            Me.columnChipZure251toOver = New Global.System.Data.DataColumn("ChipZure251toOver", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChipZure251toOver)
            Me.columnNinshikiRetry = New Global.System.Data.DataColumn("NinshikiRetry", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNinshikiRetry)
            Me.columnSpanRetry = New Global.System.Data.DataColumn("SpanRetry", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpanRetry)
            Me.columnNinshikiAlarmQTY = New Global.System.Data.DataColumn("NinshikiAlarmQTY", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNinshikiAlarmQTY)
            Me.columnSpanCounter = New Global.System.Data.DataColumn("SpanCounter", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpanCounter)
            Me.columnNinshikiGood = New Global.System.Data.DataColumn("NinshikiGood", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNinshikiGood)
            Me.columnNinshikiNG = New Global.System.Data.DataColumn("NinshikiNG", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNinshikiNG)
            Me.columnPNashi = New Global.System.Data.DataColumn("PNashi", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNashi)
            Me.columnCapillaryLife = New Global.System.Data.DataColumn("CapillaryLife", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCapillaryLife)
            Me.columnComName = New Global.System.Data.DataColumn("ComName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComName)
            Me.columnHajikiBe = New Global.System.Data.DataColumn("HajikiBe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHajikiBe)
            Me.columnHajikiAf = New Global.System.Data.DataColumn("HajikiAf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHajikiAf)
            Me.columnHajikiPn = New Global.System.Data.DataColumn("HajikiPn", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHajikiPn)
            Me.columnPeelBe = New Global.System.Data.DataColumn("PeelBe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeelBe)
            Me.columnPeelAf = New Global.System.Data.DataColumn("PeelAf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeelAf)
            Me.columnPeelPn = New Global.System.Data.DataColumn("PeelPn", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeelPn)
            Me.columnDbBdBe = New Global.System.Data.DataColumn("DbBdBe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDbBdBe)
            Me.columnDbBdAf = New Global.System.Data.DataColumn("DbBdAf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDbBdAf)
            Me.columnDbBdPn = New Global.System.Data.DataColumn("DbBdPn", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDbBdPn)
            Me.columnFirstJudgBe = New Global.System.Data.DataColumn("FirstJudgBe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstJudgBe)
            Me.columnFirstJudgAf = New Global.System.Data.DataColumn("FirstJudgAf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstJudgAf)
            Me.columnFirstJudgPn = New Global.System.Data.DataColumn("FirstJudgPn", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstJudgPn)
            Me.columnFinJudgBe = New Global.System.Data.DataColumn("FinJudgBe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinJudgBe)
            Me.columnFinJudgAf = New Global.System.Data.DataColumn("FinJudgAf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinJudgAf)
            Me.columnFinJudgPn = New Global.System.Data.DataColumn("FinJudgPn", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinJudgPn)
            Me.columnLotJudg = New Global.System.Data.DataColumn("LotJudg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotJudg)
            Me.columnLotJudg_Detail = New Global.System.Data.DataColumn("LotJudg_Detail", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotJudg_Detail)
            Me.columnOPJudgement = New Global.System.Data.DataColumn("OPJudgement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPJudgement)
            Me.columnHBTemp = New Global.System.Data.DataColumn("HBTemp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHBTemp)
            Me.columnRemark = New Global.System.Data.DataColumn("Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemark)
            Me.columnAlarmEFO = New Global.System.Data.DataColumn("AlarmEFO", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmEFO)
            Me.columnAlarmDieEyeFail = New Global.System.Data.DataColumn("AlarmDieEyeFail", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmDieEyeFail)
            Me.columnAlarmLeadEyeFail = New Global.System.Data.DataColumn("AlarmLeadEyeFail", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmLeadEyeFail)
            Me.columnAlarmSmallBall = New Global.System.Data.DataColumn("AlarmSmallBall", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmSmallBall)
            Me.columnAlarmNSOL = New Global.System.Data.DataColumn("AlarmNSOL", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmNSOL)
            Me.columnAlarmNSOP = New Global.System.Data.DataColumn("AlarmNSOP", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmNSOP)
            Me.columnAlarmOther = New Global.System.Data.DataColumn("AlarmOther", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmOther)
            Me.columnTPMake = New Global.System.Data.DataColumn("TPMake", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTPMake)
            Me.columnCAPChange = New Global.System.Data.DataColumn("CAPChange", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPChange)
            Me.columnHP_PPChange = New Global.System.Data.DataColumn("HP_PPChange", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHP_PPChange)
            Me.columnWireSizeChange = New Global.System.Data.DataColumn("WireSizeChange", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWireSizeChange)
            Me.columnBMBefore = New Global.System.Data.DataColumn("BMBefore", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBMBefore)
            Me.columnNGScrap = New Global.System.Data.DataColumn("NGScrap", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNGScrap)
            Me.columnTPMakeStart = New Global.System.Data.DataColumn("TPMakeStart", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTPMakeStart)
            Me.columnTPMakeFinish = New Global.System.Data.DataColumn("TPMakeFinish", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTPMakeFinish)
            Me.columnBMMode = New Global.System.Data.DataColumn("BMMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBMMode)
            Me.columnBMStart = New Global.System.Data.DataColumn("BMStart", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBMStart)
            Me.columnBMFinish = New Global.System.Data.DataColumn("BMFinish", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBMFinish)
            Me.columnBMRequest = New Global.System.Data.DataColumn("BMRequest", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBMRequest)
            Me.columnBMIncharge = New Global.System.Data.DataColumn("BMIncharge", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBMIncharge)
            Me.columnTPMakeIncharge = New Global.System.Data.DataColumn("TPMakeIncharge", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTPMakeIncharge)
            Me.columnInputQtyAdjust = New Global.System.Data.DataColumn("InputQtyAdjust", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInputQtyAdjust)
            Me.columnTotalGoodAdjust = New Global.System.Data.DataColumn("TotalGoodAdjust", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalGoodAdjust)
            Me.columnTotalNGAdjust = New Global.System.Data.DataColumn("TotalNGAdjust", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalNGAdjust)
            Me.columnGoldWireID1 = New Global.System.Data.DataColumn("GoldWireID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoldWireID1)
            Me.columnGoldWireID2 = New Global.System.Data.DataColumn("GoldWireID2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoldWireID2)
            Me.columnCAPID1 = New Global.System.Data.DataColumn("CAPID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPID1)
            Me.columnCAPID2 = New Global.System.Data.DataColumn("CAPID2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPID2)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMCNo, Me.columnLotNo, Me.columnLotStartTime}, true))
            Me.columnMCNo.AllowDBNull = false
            Me.columnMCNo.MaxLength = 10
            Me.columnLotNo.AllowDBNull = false
            Me.columnLotNo.MaxLength = 10
            Me.columnLotStartTime.AllowDBNull = false
            Me.columnMCType.MaxLength = 10
            Me.columnOPNo.MaxLength = 8
            Me.columnSelfConVersion.MaxLength = 50
            Me.columnNetVersion.MaxLength = 50
            Me.columnComName.MaxLength = 20
            Me.columnHajikiBe.MaxLength = 1
            Me.columnHajikiAf.MaxLength = 1
            Me.columnPeelBe.MaxLength = 1
            Me.columnPeelAf.MaxLength = 1
            Me.columnDbBdBe.MaxLength = 1
            Me.columnDbBdAf.MaxLength = 1
            Me.columnFirstJudgBe.MaxLength = 1
            Me.columnFirstJudgAf.MaxLength = 1
            Me.columnFinJudgBe.MaxLength = 1
            Me.columnFinJudgAf.MaxLength = 1
            Me.columnLotJudg.MaxLength = 2
            Me.columnOPJudgement.MaxLength = 8
            Me.columnRemark.MaxLength = 50
            Me.columnBMMode.MaxLength = 50
            Me.columnBMIncharge.MaxLength = 6
            Me.columnTPMakeIncharge.MaxLength = 6
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewWBDataRow() As WBDataRow
            Return CType(Me.NewRow,WBDataRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New WBDataRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(WBDataRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.WBDataRowChangedEvent) Is Nothing) Then
                RaiseEvent WBDataRowChanged(Me, New WBDataRowChangeEvent(CType(e.Row,WBDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.WBDataRowChangingEvent) Is Nothing) Then
                RaiseEvent WBDataRowChanging(Me, New WBDataRowChangeEvent(CType(e.Row,WBDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.WBDataRowDeletedEvent) Is Nothing) Then
                RaiseEvent WBDataRowDeleted(Me, New WBDataRowChangeEvent(CType(e.Row,WBDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.WBDataRowDeletingEvent) Is Nothing) Then
                RaiseEvent WBDataRowDeleting(Me, New WBDataRowChangeEvent(CType(e.Row,WBDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveWBDataRow(ByVal row As WBDataRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DBxDataSet = New DBxDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "WBDataDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LotAlarmQtyDataTable
        Inherits Global.System.Data.TypedTableBase(Of LotAlarmQtyRow)
        
        Private columnProcess As Global.System.Data.DataColumn
        
        Private columnLotNo As Global.System.Data.DataColumn
        
        Private columnAlarmNo As Global.System.Data.DataColumn
        
        Private columnAlarmMess As Global.System.Data.DataColumn
        
        Private columnQty As Global.System.Data.DataColumn
        
        Private columnRemark As Global.System.Data.DataColumn
        
        Private columnCreateTime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LotAlarmQty"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProcessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AlarmMessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmMess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CreateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LotAlarmQtyRow
            Get
                Return CType(Me.Rows(index),LotAlarmQtyRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event LotAlarmQtyRowChanging As LotAlarmQtyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event LotAlarmQtyRowChanged As LotAlarmQtyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event LotAlarmQtyRowDeleting As LotAlarmQtyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event LotAlarmQtyRowDeleted As LotAlarmQtyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddLotAlarmQtyRow(ByVal row As LotAlarmQtyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddLotAlarmQtyRow(ByVal Process As String, ByVal LotNo As String, ByVal AlarmNo As Integer, ByVal AlarmMess As String, ByVal Qty As String, ByVal Remark As String, ByVal CreateTime As Date) As LotAlarmQtyRow
            Dim rowLotAlarmQtyRow As LotAlarmQtyRow = CType(Me.NewRow,LotAlarmQtyRow)
            Dim columnValuesArray() As Object = New Object() {Process, LotNo, AlarmNo, AlarmMess, Qty, Remark, CreateTime}
            rowLotAlarmQtyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLotAlarmQtyRow)
            Return rowLotAlarmQtyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByProcessLotNoAlarmMess(ByVal Process As String, ByVal LotNo As String, ByVal AlarmMess As String) As LotAlarmQtyRow
            Return CType(Me.Rows.Find(New Object() {Process, LotNo, AlarmMess}),LotAlarmQtyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LotAlarmQtyDataTable = CType(MyBase.Clone,LotAlarmQtyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LotAlarmQtyDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnProcess = MyBase.Columns("Process")
            Me.columnLotNo = MyBase.Columns("LotNo")
            Me.columnAlarmNo = MyBase.Columns("AlarmNo")
            Me.columnAlarmMess = MyBase.Columns("AlarmMess")
            Me.columnQty = MyBase.Columns("Qty")
            Me.columnRemark = MyBase.Columns("Remark")
            Me.columnCreateTime = MyBase.Columns("CreateTime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnProcess = New Global.System.Data.DataColumn("Process", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcess)
            Me.columnLotNo = New Global.System.Data.DataColumn("LotNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotNo)
            Me.columnAlarmNo = New Global.System.Data.DataColumn("AlarmNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmNo)
            Me.columnAlarmMess = New Global.System.Data.DataColumn("AlarmMess", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmMess)
            Me.columnQty = New Global.System.Data.DataColumn("Qty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty)
            Me.columnRemark = New Global.System.Data.DataColumn("Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemark)
            Me.columnCreateTime = New Global.System.Data.DataColumn("CreateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreateTime)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnProcess, Me.columnLotNo, Me.columnAlarmMess}, true))
            Me.columnProcess.AllowDBNull = false
            Me.columnProcess.MaxLength = 3
            Me.columnLotNo.AllowDBNull = false
            Me.columnLotNo.MaxLength = 10
            Me.columnAlarmMess.AllowDBNull = false
            Me.columnAlarmMess.MaxLength = 256
            Me.columnQty.MaxLength = 5
            Me.columnRemark.MaxLength = 256
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewLotAlarmQtyRow() As LotAlarmQtyRow
            Return CType(Me.NewRow,LotAlarmQtyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LotAlarmQtyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LotAlarmQtyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LotAlarmQtyRowChangedEvent) Is Nothing) Then
                RaiseEvent LotAlarmQtyRowChanged(Me, New LotAlarmQtyRowChangeEvent(CType(e.Row,LotAlarmQtyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LotAlarmQtyRowChangingEvent) Is Nothing) Then
                RaiseEvent LotAlarmQtyRowChanging(Me, New LotAlarmQtyRowChangeEvent(CType(e.Row,LotAlarmQtyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LotAlarmQtyRowDeletedEvent) Is Nothing) Then
                RaiseEvent LotAlarmQtyRowDeleted(Me, New LotAlarmQtyRowChangeEvent(CType(e.Row,LotAlarmQtyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LotAlarmQtyRowDeletingEvent) Is Nothing) Then
                RaiseEvent LotAlarmQtyRowDeleting(Me, New LotAlarmQtyRowChangeEvent(CType(e.Row,LotAlarmQtyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveLotAlarmQtyRow(ByVal row As LotAlarmQtyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DBxDataSet = New DBxDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LotAlarmQtyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DBWBINSDataDataTable
        Inherits Global.System.Data.TypedTableBase(Of DBWBINSDataRow)
        
        Private columnLotNo As Global.System.Data.DataColumn
        
        Private columnStartTime As Global.System.Data.DataColumn
        
        Private columnEndTime As Global.System.Data.DataColumn
        
        Private columnReqDate As Global.System.Data.DataColumn
        
        Private columnRequestMode1 As Global.System.Data.DataColumn
        
        Private columnRequestMode2 As Global.System.Data.DataColumn
        
        Private columnRequestMode3 As Global.System.Data.DataColumn
        
        Private columnRequestMode4 As Global.System.Data.DataColumn
        
        Private columnRequestMode5 As Global.System.Data.DataColumn
        
        Private columnOPNo As Global.System.Data.DataColumn
        
        Private columnInspMagQty As Global.System.Data.DataColumn
        
        Private columnResultMode1 As Global.System.Data.DataColumn
        
        Private columnResultQtyMode1 As Global.System.Data.DataColumn
        
        Private columnResultMode2 As Global.System.Data.DataColumn
        
        Private columnResultQtyMode2 As Global.System.Data.DataColumn
        
        Private columnResultMode3 As Global.System.Data.DataColumn
        
        Private columnResultQtyMode3 As Global.System.Data.DataColumn
        
        Private columnResultMode4 As Global.System.Data.DataColumn
        
        Private columnResultQtyMode4 As Global.System.Data.DataColumn
        
        Private columnResultMode5 As Global.System.Data.DataColumn
        
        Private columnResultQtyMode5 As Global.System.Data.DataColumn
        
        Private columnGoodQty As Global.System.Data.DataColumn
        
        Private columnNGQty As Global.System.Data.DataColumn
        
        Private columnTotalQty As Global.System.Data.DataColumn
        
        Private columnFinalYield As Global.System.Data.DataColumn
        
        Private columnTotalTime As Global.System.Data.DataColumn
        
        Private columnInspJudg As Global.System.Data.DataColumn
        
        Private columnLotJudg As Global.System.Data.DataColumn
        
        Private columnRemark As Global.System.Data.DataColumn
        
        Private columnGLCheck As Global.System.Data.DataColumn
        
        Private columnSelfConVersion As Global.System.Data.DataColumn
        
        Private columnNetVersion As Global.System.Data.DataColumn
        
        Private columnRequestModeName1 As Global.System.Data.DataColumn
        
        Private columnRequestModeName2 As Global.System.Data.DataColumn
        
        Private columnRequestModeName3 As Global.System.Data.DataColumn
        
        Private columnRequestModeName4 As Global.System.Data.DataColumn
        
        Private columnRequestModeName5 As Global.System.Data.DataColumn
        
        Private columnRequestModeRemark1 As Global.System.Data.DataColumn
        
        Private columnRequestModeRemark2 As Global.System.Data.DataColumn
        
        Private columnRequestModeRemark3 As Global.System.Data.DataColumn
        
        Private columnRequestModeRemark4 As Global.System.Data.DataColumn
        
        Private columnRequestModeRemark5 As Global.System.Data.DataColumn
        
        Private columnObjectIns As Global.System.Data.DataColumn
        
        Private columnPackage As Global.System.Data.DataColumn
        
        Private columnProcess As Global.System.Data.DataColumn
        
        Private columnJudgeReason As Global.System.Data.DataColumn
        
        Private columnResultModeName1 As Global.System.Data.DataColumn
        
        Private columnResultModeName2 As Global.System.Data.DataColumn
        
        Private columnResultModeName3 As Global.System.Data.DataColumn
        
        Private columnResultModeName4 As Global.System.Data.DataColumn
        
        Private columnResultModeName5 As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnStopTime As Global.System.Data.DataColumn
        
        Private columnInspNGQty As Global.System.Data.DataColumn
        
        Private columnMCNo As Global.System.Data.DataColumn
        
        Private columnComName As Global.System.Data.DataColumn
        
        Private columnInspectorNo As Global.System.Data.DataColumn
        
        Private columnInsName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DBWBINSData"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StartTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStartTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EndTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEndTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReqDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReqDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestMode1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestMode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestMode2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestMode2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestMode3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestMode3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestMode4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestMode4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestMode5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestMode5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OPNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InspMagQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInspMagQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultMode1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultMode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultQtyMode1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultQtyMode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultMode2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultMode2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultQtyMode2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultQtyMode2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultMode3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultMode3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultQtyMode3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultQtyMode3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultMode4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultMode4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultQtyMode4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultQtyMode4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultMode5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultMode5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultQtyMode5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultQtyMode5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GoodQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGoodQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NGQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNGQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FinalYieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinalYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InspJudgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInspJudg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LotJudgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotJudg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GLCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SelfConVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSelfConVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestModeName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestModeName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestModeName2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestModeName2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestModeName3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestModeName3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestModeName4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestModeName4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestModeName5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestModeName5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestModeRemark1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestModeRemark1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestModeRemark2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestModeRemark2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestModeRemark3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestModeRemark3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestModeRemark4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestModeRemark4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestModeRemark5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestModeRemark5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ObjectInsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObjectIns
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PackageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProcessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property JudgeReasonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJudgeReason
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultModeName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultModeName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultModeName2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultModeName2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultModeName3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultModeName3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultModeName4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultModeName4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ResultModeName5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultModeName5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StopTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStopTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InspNGQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInspNGQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MCNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMCNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ComNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InspectorNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInspectorNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InsNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DBWBINSDataRow
            Get
                Return CType(Me.Rows(index),DBWBINSDataRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event DBWBINSDataRowChanging As DBWBINSDataRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event DBWBINSDataRowChanged As DBWBINSDataRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event DBWBINSDataRowDeleting As DBWBINSDataRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event DBWBINSDataRowDeleted As DBWBINSDataRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddDBWBINSDataRow(ByVal row As DBWBINSDataRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddDBWBINSDataRow( _
                    ByVal LotNo As String,  _
                    ByVal StartTime As Date,  _
                    ByVal EndTime As Date,  _
                    ByVal ReqDate As Date,  _
                    ByVal RequestMode1 As String,  _
                    ByVal RequestMode2 As String,  _
                    ByVal RequestMode3 As String,  _
                    ByVal RequestMode4 As String,  _
                    ByVal RequestMode5 As String,  _
                    ByVal OPNo As String,  _
                    ByVal InspMagQty As String,  _
                    ByVal ResultMode1 As String,  _
                    ByVal ResultQtyMode1 As Short,  _
                    ByVal ResultMode2 As String,  _
                    ByVal ResultQtyMode2 As Short,  _
                    ByVal ResultMode3 As String,  _
                    ByVal ResultQtyMode3 As Short,  _
                    ByVal ResultMode4 As String,  _
                    ByVal ResultQtyMode4 As Short,  _
                    ByVal ResultMode5 As String,  _
                    ByVal ResultQtyMode5 As Short,  _
                    ByVal GoodQty As Integer,  _
                    ByVal NGQty As Integer,  _
                    ByVal TotalQty As Integer,  _
                    ByVal FinalYield As Single,  _
                    ByVal TotalTime As Short,  _
                    ByVal InspJudg As String,  _
                    ByVal LotJudg As String,  _
                    ByVal Remark As String,  _
                    ByVal GLCheck As String,  _
                    ByVal SelfConVersion As String,  _
                    ByVal NetVersion As String,  _
                    ByVal RequestModeName1 As String,  _
                    ByVal RequestModeName2 As String,  _
                    ByVal RequestModeName3 As String,  _
                    ByVal RequestModeName4 As String,  _
                    ByVal RequestModeName5 As String,  _
                    ByVal RequestModeRemark1 As String,  _
                    ByVal RequestModeRemark2 As String,  _
                    ByVal RequestModeRemark3 As String,  _
                    ByVal RequestModeRemark4 As String,  _
                    ByVal RequestModeRemark5 As String,  _
                    ByVal ObjectIns As String,  _
                    ByVal Package As String,  _
                    ByVal Process As String,  _
                    ByVal JudgeReason As String,  _
                    ByVal ResultModeName1 As String,  _
                    ByVal ResultModeName2 As String,  _
                    ByVal ResultModeName3 As String,  _
                    ByVal ResultModeName4 As String,  _
                    ByVal ResultModeName5 As String,  _
                    ByVal Status As String,  _
                    ByVal StopTime As Short,  _
                    ByVal InspNGQty As Integer,  _
                    ByVal MCNo As String,  _
                    ByVal ComName As String,  _
                    ByVal InspectorNo As String,  _
                    ByVal InsName As String) As DBWBINSDataRow
            Dim rowDBWBINSDataRow As DBWBINSDataRow = CType(Me.NewRow,DBWBINSDataRow)
            Dim columnValuesArray() As Object = New Object() {LotNo, StartTime, EndTime, ReqDate, RequestMode1, RequestMode2, RequestMode3, RequestMode4, RequestMode5, OPNo, InspMagQty, ResultMode1, ResultQtyMode1, ResultMode2, ResultQtyMode2, ResultMode3, ResultQtyMode3, ResultMode4, ResultQtyMode4, ResultMode5, ResultQtyMode5, GoodQty, NGQty, TotalQty, FinalYield, TotalTime, InspJudg, LotJudg, Remark, GLCheck, SelfConVersion, NetVersion, RequestModeName1, RequestModeName2, RequestModeName3, RequestModeName4, RequestModeName5, RequestModeRemark1, RequestModeRemark2, RequestModeRemark3, RequestModeRemark4, RequestModeRemark5, ObjectIns, Package, Process, JudgeReason, ResultModeName1, ResultModeName2, ResultModeName3, ResultModeName4, ResultModeName5, Status, StopTime, InspNGQty, MCNo, ComName, InspectorNo, InsName}
            rowDBWBINSDataRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDBWBINSDataRow)
            Return rowDBWBINSDataRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByLotNoReqDate(ByVal LotNo As String, ByVal ReqDate As Date) As DBWBINSDataRow
            Return CType(Me.Rows.Find(New Object() {LotNo, ReqDate}),DBWBINSDataRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DBWBINSDataDataTable = CType(MyBase.Clone,DBWBINSDataDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DBWBINSDataDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLotNo = MyBase.Columns("LotNo")
            Me.columnStartTime = MyBase.Columns("StartTime")
            Me.columnEndTime = MyBase.Columns("EndTime")
            Me.columnReqDate = MyBase.Columns("ReqDate")
            Me.columnRequestMode1 = MyBase.Columns("RequestMode1")
            Me.columnRequestMode2 = MyBase.Columns("RequestMode2")
            Me.columnRequestMode3 = MyBase.Columns("RequestMode3")
            Me.columnRequestMode4 = MyBase.Columns("RequestMode4")
            Me.columnRequestMode5 = MyBase.Columns("RequestMode5")
            Me.columnOPNo = MyBase.Columns("OPNo")
            Me.columnInspMagQty = MyBase.Columns("InspMagQty")
            Me.columnResultMode1 = MyBase.Columns("ResultMode1")
            Me.columnResultQtyMode1 = MyBase.Columns("ResultQtyMode1")
            Me.columnResultMode2 = MyBase.Columns("ResultMode2")
            Me.columnResultQtyMode2 = MyBase.Columns("ResultQtyMode2")
            Me.columnResultMode3 = MyBase.Columns("ResultMode3")
            Me.columnResultQtyMode3 = MyBase.Columns("ResultQtyMode3")
            Me.columnResultMode4 = MyBase.Columns("ResultMode4")
            Me.columnResultQtyMode4 = MyBase.Columns("ResultQtyMode4")
            Me.columnResultMode5 = MyBase.Columns("ResultMode5")
            Me.columnResultQtyMode5 = MyBase.Columns("ResultQtyMode5")
            Me.columnGoodQty = MyBase.Columns("GoodQty")
            Me.columnNGQty = MyBase.Columns("NGQty")
            Me.columnTotalQty = MyBase.Columns("TotalQty")
            Me.columnFinalYield = MyBase.Columns("FinalYield")
            Me.columnTotalTime = MyBase.Columns("TotalTime")
            Me.columnInspJudg = MyBase.Columns("InspJudg")
            Me.columnLotJudg = MyBase.Columns("LotJudg")
            Me.columnRemark = MyBase.Columns("Remark")
            Me.columnGLCheck = MyBase.Columns("GLCheck")
            Me.columnSelfConVersion = MyBase.Columns("SelfConVersion")
            Me.columnNetVersion = MyBase.Columns("NetVersion")
            Me.columnRequestModeName1 = MyBase.Columns("RequestModeName1")
            Me.columnRequestModeName2 = MyBase.Columns("RequestModeName2")
            Me.columnRequestModeName3 = MyBase.Columns("RequestModeName3")
            Me.columnRequestModeName4 = MyBase.Columns("RequestModeName4")
            Me.columnRequestModeName5 = MyBase.Columns("RequestModeName5")
            Me.columnRequestModeRemark1 = MyBase.Columns("RequestModeRemark1")
            Me.columnRequestModeRemark2 = MyBase.Columns("RequestModeRemark2")
            Me.columnRequestModeRemark3 = MyBase.Columns("RequestModeRemark3")
            Me.columnRequestModeRemark4 = MyBase.Columns("RequestModeRemark4")
            Me.columnRequestModeRemark5 = MyBase.Columns("RequestModeRemark5")
            Me.columnObjectIns = MyBase.Columns("ObjectIns")
            Me.columnPackage = MyBase.Columns("Package")
            Me.columnProcess = MyBase.Columns("Process")
            Me.columnJudgeReason = MyBase.Columns("JudgeReason")
            Me.columnResultModeName1 = MyBase.Columns("ResultModeName1")
            Me.columnResultModeName2 = MyBase.Columns("ResultModeName2")
            Me.columnResultModeName3 = MyBase.Columns("ResultModeName3")
            Me.columnResultModeName4 = MyBase.Columns("ResultModeName4")
            Me.columnResultModeName5 = MyBase.Columns("ResultModeName5")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnStopTime = MyBase.Columns("StopTime")
            Me.columnInspNGQty = MyBase.Columns("InspNGQty")
            Me.columnMCNo = MyBase.Columns("MCNo")
            Me.columnComName = MyBase.Columns("ComName")
            Me.columnInspectorNo = MyBase.Columns("InspectorNo")
            Me.columnInsName = MyBase.Columns("InsName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLotNo = New Global.System.Data.DataColumn("LotNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotNo)
            Me.columnStartTime = New Global.System.Data.DataColumn("StartTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStartTime)
            Me.columnEndTime = New Global.System.Data.DataColumn("EndTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEndTime)
            Me.columnReqDate = New Global.System.Data.DataColumn("ReqDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReqDate)
            Me.columnRequestMode1 = New Global.System.Data.DataColumn("RequestMode1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestMode1)
            Me.columnRequestMode2 = New Global.System.Data.DataColumn("RequestMode2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestMode2)
            Me.columnRequestMode3 = New Global.System.Data.DataColumn("RequestMode3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestMode3)
            Me.columnRequestMode4 = New Global.System.Data.DataColumn("RequestMode4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestMode4)
            Me.columnRequestMode5 = New Global.System.Data.DataColumn("RequestMode5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestMode5)
            Me.columnOPNo = New Global.System.Data.DataColumn("OPNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPNo)
            Me.columnInspMagQty = New Global.System.Data.DataColumn("InspMagQty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInspMagQty)
            Me.columnResultMode1 = New Global.System.Data.DataColumn("ResultMode1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultMode1)
            Me.columnResultQtyMode1 = New Global.System.Data.DataColumn("ResultQtyMode1", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultQtyMode1)
            Me.columnResultMode2 = New Global.System.Data.DataColumn("ResultMode2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultMode2)
            Me.columnResultQtyMode2 = New Global.System.Data.DataColumn("ResultQtyMode2", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultQtyMode2)
            Me.columnResultMode3 = New Global.System.Data.DataColumn("ResultMode3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultMode3)
            Me.columnResultQtyMode3 = New Global.System.Data.DataColumn("ResultQtyMode3", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultQtyMode3)
            Me.columnResultMode4 = New Global.System.Data.DataColumn("ResultMode4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultMode4)
            Me.columnResultQtyMode4 = New Global.System.Data.DataColumn("ResultQtyMode4", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultQtyMode4)
            Me.columnResultMode5 = New Global.System.Data.DataColumn("ResultMode5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultMode5)
            Me.columnResultQtyMode5 = New Global.System.Data.DataColumn("ResultQtyMode5", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultQtyMode5)
            Me.columnGoodQty = New Global.System.Data.DataColumn("GoodQty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGoodQty)
            Me.columnNGQty = New Global.System.Data.DataColumn("NGQty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNGQty)
            Me.columnTotalQty = New Global.System.Data.DataColumn("TotalQty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalQty)
            Me.columnFinalYield = New Global.System.Data.DataColumn("FinalYield", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinalYield)
            Me.columnTotalTime = New Global.System.Data.DataColumn("TotalTime", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalTime)
            Me.columnInspJudg = New Global.System.Data.DataColumn("InspJudg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInspJudg)
            Me.columnLotJudg = New Global.System.Data.DataColumn("LotJudg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotJudg)
            Me.columnRemark = New Global.System.Data.DataColumn("Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemark)
            Me.columnGLCheck = New Global.System.Data.DataColumn("GLCheck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLCheck)
            Me.columnSelfConVersion = New Global.System.Data.DataColumn("SelfConVersion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSelfConVersion)
            Me.columnNetVersion = New Global.System.Data.DataColumn("NetVersion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetVersion)
            Me.columnRequestModeName1 = New Global.System.Data.DataColumn("RequestModeName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestModeName1)
            Me.columnRequestModeName2 = New Global.System.Data.DataColumn("RequestModeName2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestModeName2)
            Me.columnRequestModeName3 = New Global.System.Data.DataColumn("RequestModeName3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestModeName3)
            Me.columnRequestModeName4 = New Global.System.Data.DataColumn("RequestModeName4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestModeName4)
            Me.columnRequestModeName5 = New Global.System.Data.DataColumn("RequestModeName5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestModeName5)
            Me.columnRequestModeRemark1 = New Global.System.Data.DataColumn("RequestModeRemark1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestModeRemark1)
            Me.columnRequestModeRemark2 = New Global.System.Data.DataColumn("RequestModeRemark2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestModeRemark2)
            Me.columnRequestModeRemark3 = New Global.System.Data.DataColumn("RequestModeRemark3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestModeRemark3)
            Me.columnRequestModeRemark4 = New Global.System.Data.DataColumn("RequestModeRemark4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestModeRemark4)
            Me.columnRequestModeRemark5 = New Global.System.Data.DataColumn("RequestModeRemark5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestModeRemark5)
            Me.columnObjectIns = New Global.System.Data.DataColumn("ObjectIns", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObjectIns)
            Me.columnPackage = New Global.System.Data.DataColumn("Package", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage)
            Me.columnProcess = New Global.System.Data.DataColumn("Process", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcess)
            Me.columnJudgeReason = New Global.System.Data.DataColumn("JudgeReason", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJudgeReason)
            Me.columnResultModeName1 = New Global.System.Data.DataColumn("ResultModeName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultModeName1)
            Me.columnResultModeName2 = New Global.System.Data.DataColumn("ResultModeName2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultModeName2)
            Me.columnResultModeName3 = New Global.System.Data.DataColumn("ResultModeName3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultModeName3)
            Me.columnResultModeName4 = New Global.System.Data.DataColumn("ResultModeName4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultModeName4)
            Me.columnResultModeName5 = New Global.System.Data.DataColumn("ResultModeName5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultModeName5)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnStopTime = New Global.System.Data.DataColumn("StopTime", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStopTime)
            Me.columnInspNGQty = New Global.System.Data.DataColumn("InspNGQty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInspNGQty)
            Me.columnMCNo = New Global.System.Data.DataColumn("MCNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMCNo)
            Me.columnComName = New Global.System.Data.DataColumn("ComName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComName)
            Me.columnInspectorNo = New Global.System.Data.DataColumn("InspectorNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInspectorNo)
            Me.columnInsName = New Global.System.Data.DataColumn("InsName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLotNo, Me.columnReqDate}, true))
            Me.columnLotNo.AllowDBNull = false
            Me.columnLotNo.MaxLength = 10
            Me.columnReqDate.AllowDBNull = false
            Me.columnRequestMode1.MaxLength = 5
            Me.columnRequestMode2.MaxLength = 5
            Me.columnRequestMode3.MaxLength = 5
            Me.columnRequestMode4.MaxLength = 5
            Me.columnRequestMode5.MaxLength = 5
            Me.columnOPNo.MaxLength = 10
            Me.columnInspMagQty.MaxLength = 20
            Me.columnResultMode1.MaxLength = 5
            Me.columnResultMode2.MaxLength = 5
            Me.columnResultMode3.MaxLength = 5
            Me.columnResultMode4.MaxLength = 5
            Me.columnResultMode5.MaxLength = 5
            Me.columnInspJudg.MaxLength = 2
            Me.columnLotJudg.MaxLength = 2
            Me.columnRemark.MaxLength = 50
            Me.columnGLCheck.MaxLength = 10
            Me.columnSelfConVersion.MaxLength = 50
            Me.columnNetVersion.MaxLength = 50
            Me.columnRequestModeName1.MaxLength = 70
            Me.columnRequestModeName2.MaxLength = 70
            Me.columnRequestModeName3.MaxLength = 70
            Me.columnRequestModeName4.MaxLength = 70
            Me.columnRequestModeName5.MaxLength = 70
            Me.columnRequestModeRemark1.MaxLength = 256
            Me.columnRequestModeRemark2.MaxLength = 256
            Me.columnRequestModeRemark3.MaxLength = 256
            Me.columnRequestModeRemark4.MaxLength = 256
            Me.columnRequestModeRemark5.MaxLength = 256
            Me.columnObjectIns.MaxLength = 256
            Me.columnPackage.MaxLength = 15
            Me.columnProcess.MaxLength = 3
            Me.columnJudgeReason.MaxLength = 256
            Me.columnResultModeName1.MaxLength = 50
            Me.columnResultModeName2.MaxLength = 50
            Me.columnResultModeName3.MaxLength = 50
            Me.columnResultModeName4.MaxLength = 50
            Me.columnResultModeName5.MaxLength = 50
            Me.columnStatus.MaxLength = 50
            Me.columnMCNo.MaxLength = 15
            Me.columnComName.MaxLength = 15
            Me.columnInspectorNo.MaxLength = 10
            Me.columnInsName.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewDBWBINSDataRow() As DBWBINSDataRow
            Return CType(Me.NewRow,DBWBINSDataRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DBWBINSDataRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DBWBINSDataRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DBWBINSDataRowChangedEvent) Is Nothing) Then
                RaiseEvent DBWBINSDataRowChanged(Me, New DBWBINSDataRowChangeEvent(CType(e.Row,DBWBINSDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DBWBINSDataRowChangingEvent) Is Nothing) Then
                RaiseEvent DBWBINSDataRowChanging(Me, New DBWBINSDataRowChangeEvent(CType(e.Row,DBWBINSDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DBWBINSDataRowDeletedEvent) Is Nothing) Then
                RaiseEvent DBWBINSDataRowDeleted(Me, New DBWBINSDataRowChangeEvent(CType(e.Row,DBWBINSDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DBWBINSDataRowDeletingEvent) Is Nothing) Then
                RaiseEvent DBWBINSDataRowDeleting(Me, New DBWBINSDataRowChangeEvent(CType(e.Row,DBWBINSDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveDBWBINSDataRow(ByVal row As DBWBINSDataRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DBxDataSet = New DBxDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DBWBINSDataDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DBDataRow
        Inherits Global.System.Data.DataRow
        
        Private tableDBData As DBDataDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDBData = CType(Me.Table,DBDataDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MCNo() As String
            Get
                Return CType(Me(Me.tableDBData.MCNoColumn),String)
            End Get
            Set
                Me(Me.tableDBData.MCNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotNo() As String
            Get
                Return CType(Me(Me.tableDBData.LotNoColumn),String)
            End Get
            Set
                Me(Me.tableDBData.LotNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotStartTime() As Date
            Get
                Return CType(Me(Me.tableDBData.LotStartTimeColumn),Date)
            End Get
            Set
                Me(Me.tableDBData.LotStartTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MCType() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.MCTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MCType' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.MCTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OPNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.OPNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPNo' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.OPNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InputQty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.InputQtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InputQty' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.InputQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalGood() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.TotalGoodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalGood' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.TotalGoodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalNG() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.TotalNGColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalNG' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.TotalNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OPRate() As Single
            Get
                Try 
                    Return CType(Me(Me.tableDBData.OPRateColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPRate' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.OPRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaximumRPM() As Single
            Get
                Try 
                    Return CType(Me(Me.tableDBData.MaximumRPMColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaximumRPM' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.MaximumRPMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AverageRPM() As Single
            Get
                Try 
                    Return CType(Me(Me.tableDBData.AverageRPMColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AverageRPM' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.AverageRPMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MTBF() As Single
            Get
                Try 
                    Return CType(Me(Me.tableDBData.MTBFColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MTBF' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.MTBFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MTTR() As Single
            Get
                Try 
                    Return CType(Me(Me.tableDBData.MTTRColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MTTR' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.MTTRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmTotal() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.AlarmTotalColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmTotal' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.AlarmTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotEndTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDBData.LotEndTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LotEndTime' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.LotEndTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RunTime() As Single
            Get
                Try 
                    Return CType(Me(Me.tableDBData.RunTimeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RunTime' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.RunTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StopTime() As Single
            Get
                Try 
                    Return CType(Me(Me.tableDBData.StopTimeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StopTime' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.StopTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmTime() As Single
            Get
                Try 
                    Return CType(Me(Me.tableDBData.AlarmTimeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmTime' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.AlarmTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SelfConVersion() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.SelfConVersionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SelfConVersion' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.SelfConVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetVersion() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.NetVersionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetVersion' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.NetVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NoChipQTY() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.NoChipQTYColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoChipQTY' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.NoChipQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BrideNG() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.BrideNGColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BrideNG' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.BrideNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PickupNG() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.PickupNGColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PickupNG' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.PickupNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ColletCount() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.ColletCountColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColletCount' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.ColletCountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ImpQTY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.ImpQTYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImpQTY' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.ImpQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotQTY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.LotQTYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LotQTY' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.LotQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotCNT() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.LotCNTColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LotCNT' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.LotCNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotGood() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.LotGoodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LotGood' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.LotGoodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotNG() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.LotNGColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LotNG' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.LotNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotPFNG() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.LotPFNGColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LotPFNG' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.LotPFNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BrideNGMC() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.BrideNGMCColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BrideNGMC' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.BrideNGMCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CancelPcs() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.CancelPcsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CancelPcs' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.CancelPcsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CPDispo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.CPDispoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPDispo' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.CPDispoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ZeroCount() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.ZeroCountColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZeroCount' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.ZeroCountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ZeroEnd() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBData.ZeroEndColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZeroEnd' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.ZeroEndColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FrameFirstLot() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.FrameFirstLotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FrameFirstLot' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.FrameFirstLotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FrameSecondLot() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.FrameSecondLotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FrameSecondLot' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.FrameSecondLotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PreformType() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.PreformTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreformType' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.PreformTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PreformFirstLot() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.PreformFirstLotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreformFirstLot' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.PreformFirstLotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PreformSecondLot() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.PreformSecondLotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreformSecondLot' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.PreformSecondLotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PreformFirstLiftTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDBData.PreformFirstLiftTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreformFirstLiftTime' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.PreformFirstLiftTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PreformSecondLiftTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDBData.PreformSecondLiftTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreformSecondLiftTime' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.PreformSecondLiftTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmPickUp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.AlarmPickUpColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmPickUp' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.AlarmPickUpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmPreform() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.AlarmPreformColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmPreform' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.AlarmPreformColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmBonder() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.AlarmBonderColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmBonder' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.AlarmBonderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmFrameOut() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.AlarmFrameOutColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmFrameOut' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.AlarmFrameOutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmBridgeInsp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.AlarmBridgeInspColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmBridgeInsp' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.AlarmBridgeInspColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmPreformInsp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.AlarmPreformInspColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmPreformInsp' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.AlarmPreformInspColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RubberColletNo() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.RubberColletNoColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RubberColletNo' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.RubberColletNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OperateContinue() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.OperateContinueColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OperateContinue' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.OperateContinueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RubberCheck() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableDBData.RubberCheckColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RubberCheck' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.RubberCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Chipsize1() As Single
            Get
                Try 
                    Return CType(Me(Me.tableDBData.Chipsize1Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chipsize1' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.Chipsize1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Chipsize2() As Single
            Get
                Try 
                    Return CType(Me(Me.tableDBData.Chipsize2Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chipsize2' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.Chipsize2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BoundingContinue() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.BoundingContinueColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BoundingContinue' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.BoundingContinueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ColletCheck() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableDBData.ColletCheckColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColletCheck' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.ColletCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PasteNozzleType() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.PasteNozzleTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PasteNozzleType' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.PasteNozzleTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PateNozzleNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.PateNozzleNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PateNozzleNo' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.PateNozzleNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PasteNozzleCond() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.PasteNozzleCondColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PasteNozzleCond' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.PasteNozzleCondColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TsukaigeNeedNo() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.TsukaigeNeedNoColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TsukaigeNeedNo' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.TsukaigeNeedNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TsukaigeCheck() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.TsukaigeCheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TsukaigeCheck' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.TsukaigeCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SolderThickness1() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.SolderThickness1Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SolderThickness1' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.SolderThickness1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SolderThickness2() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.SolderThickness2Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SolderThickness2' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.SolderThickness2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SolderThickness3() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.SolderThickness3Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SolderThickness3' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.SolderThickness3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SolderThickness4() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.SolderThickness4Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SolderThickness4' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.SolderThickness4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SolderThicknessAvg() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.SolderThicknessAvgColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SolderThicknessAvg' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.SolderThicknessAvgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SolderThicknessR() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBData.SolderThicknessRColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SolderThicknessR' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.SolderThicknessRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property QCFirstLotMode() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.QCFirstLotModeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCFirstLotMode' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.QCFirstLotModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property QCFirstLotAdjust() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.QCFirstLotAdjustColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCFirstLotAdjust' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.QCFirstLotAdjustColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property QCFinishLotMode() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.QCFinishLotModeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCFinishLotMode' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.QCFinishLotModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property QCFinishLotAdjust() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.QCFinishLotAdjustColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCFinishLotAdjust' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.QCFinishLotAdjustColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property QCMiddleLotAb() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.QCMiddleLotAbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCMiddleLotAb' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.QCMiddleLotAbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property QCMiddleLotAdjust() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.QCMiddleLotAdjustColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCMiddleLotAdjust' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.QCMiddleLotAdjustColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MiddleLotJudgement() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.MiddleLotJudgementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MiddleLotJudgement' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.MiddleLotJudgementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property QCFirstLotAb() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.QCFirstLotAbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCFirstLotAb' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.QCFirstLotAbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property QCFinishLotAb() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.QCFinishLotAbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCFinishLotAb' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.QCFinishLotAbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotJudgement() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.LotJudgementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LotJudgement' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.LotJudgementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OPCheck() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.OPCheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPCheck' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.OPCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Remark() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBData.RemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remark' in table 'DBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBData.RemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMCTypeNull() As Boolean
            Return Me.IsNull(Me.tableDBData.MCTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMCTypeNull()
            Me(Me.tableDBData.MCTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOPNoNull() As Boolean
            Return Me.IsNull(Me.tableDBData.OPNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOPNoNull()
            Me(Me.tableDBData.OPNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInputQtyNull() As Boolean
            Return Me.IsNull(Me.tableDBData.InputQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInputQtyNull()
            Me(Me.tableDBData.InputQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalGoodNull() As Boolean
            Return Me.IsNull(Me.tableDBData.TotalGoodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalGoodNull()
            Me(Me.tableDBData.TotalGoodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalNGNull() As Boolean
            Return Me.IsNull(Me.tableDBData.TotalNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalNGNull()
            Me(Me.tableDBData.TotalNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOPRateNull() As Boolean
            Return Me.IsNull(Me.tableDBData.OPRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOPRateNull()
            Me(Me.tableDBData.OPRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaximumRPMNull() As Boolean
            Return Me.IsNull(Me.tableDBData.MaximumRPMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaximumRPMNull()
            Me(Me.tableDBData.MaximumRPMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAverageRPMNull() As Boolean
            Return Me.IsNull(Me.tableDBData.AverageRPMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAverageRPMNull()
            Me(Me.tableDBData.AverageRPMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMTBFNull() As Boolean
            Return Me.IsNull(Me.tableDBData.MTBFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMTBFNull()
            Me(Me.tableDBData.MTBFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMTTRNull() As Boolean
            Return Me.IsNull(Me.tableDBData.MTTRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMTTRNull()
            Me(Me.tableDBData.MTTRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmTotalNull() As Boolean
            Return Me.IsNull(Me.tableDBData.AlarmTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmTotalNull()
            Me(Me.tableDBData.AlarmTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLotEndTimeNull() As Boolean
            Return Me.IsNull(Me.tableDBData.LotEndTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLotEndTimeNull()
            Me(Me.tableDBData.LotEndTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRunTimeNull() As Boolean
            Return Me.IsNull(Me.tableDBData.RunTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRunTimeNull()
            Me(Me.tableDBData.RunTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStopTimeNull() As Boolean
            Return Me.IsNull(Me.tableDBData.StopTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStopTimeNull()
            Me(Me.tableDBData.StopTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmTimeNull() As Boolean
            Return Me.IsNull(Me.tableDBData.AlarmTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmTimeNull()
            Me(Me.tableDBData.AlarmTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSelfConVersionNull() As Boolean
            Return Me.IsNull(Me.tableDBData.SelfConVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSelfConVersionNull()
            Me(Me.tableDBData.SelfConVersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetVersionNull() As Boolean
            Return Me.IsNull(Me.tableDBData.NetVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetVersionNull()
            Me(Me.tableDBData.NetVersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNoChipQTYNull() As Boolean
            Return Me.IsNull(Me.tableDBData.NoChipQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNoChipQTYNull()
            Me(Me.tableDBData.NoChipQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBrideNGNull() As Boolean
            Return Me.IsNull(Me.tableDBData.BrideNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBrideNGNull()
            Me(Me.tableDBData.BrideNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPickupNGNull() As Boolean
            Return Me.IsNull(Me.tableDBData.PickupNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPickupNGNull()
            Me(Me.tableDBData.PickupNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsColletCountNull() As Boolean
            Return Me.IsNull(Me.tableDBData.ColletCountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetColletCountNull()
            Me(Me.tableDBData.ColletCountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsImpQTYNull() As Boolean
            Return Me.IsNull(Me.tableDBData.ImpQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetImpQTYNull()
            Me(Me.tableDBData.ImpQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLotQTYNull() As Boolean
            Return Me.IsNull(Me.tableDBData.LotQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLotQTYNull()
            Me(Me.tableDBData.LotQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLotCNTNull() As Boolean
            Return Me.IsNull(Me.tableDBData.LotCNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLotCNTNull()
            Me(Me.tableDBData.LotCNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLotGoodNull() As Boolean
            Return Me.IsNull(Me.tableDBData.LotGoodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLotGoodNull()
            Me(Me.tableDBData.LotGoodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLotNGNull() As Boolean
            Return Me.IsNull(Me.tableDBData.LotNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLotNGNull()
            Me(Me.tableDBData.LotNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLotPFNGNull() As Boolean
            Return Me.IsNull(Me.tableDBData.LotPFNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLotPFNGNull()
            Me(Me.tableDBData.LotPFNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBrideNGMCNull() As Boolean
            Return Me.IsNull(Me.tableDBData.BrideNGMCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBrideNGMCNull()
            Me(Me.tableDBData.BrideNGMCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCancelPcsNull() As Boolean
            Return Me.IsNull(Me.tableDBData.CancelPcsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCancelPcsNull()
            Me(Me.tableDBData.CancelPcsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCPDispoNull() As Boolean
            Return Me.IsNull(Me.tableDBData.CPDispoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCPDispoNull()
            Me(Me.tableDBData.CPDispoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsZeroCountNull() As Boolean
            Return Me.IsNull(Me.tableDBData.ZeroCountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetZeroCountNull()
            Me(Me.tableDBData.ZeroCountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsZeroEndNull() As Boolean
            Return Me.IsNull(Me.tableDBData.ZeroEndColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetZeroEndNull()
            Me(Me.tableDBData.ZeroEndColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFrameFirstLotNull() As Boolean
            Return Me.IsNull(Me.tableDBData.FrameFirstLotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFrameFirstLotNull()
            Me(Me.tableDBData.FrameFirstLotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFrameSecondLotNull() As Boolean
            Return Me.IsNull(Me.tableDBData.FrameSecondLotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFrameSecondLotNull()
            Me(Me.tableDBData.FrameSecondLotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPreformTypeNull() As Boolean
            Return Me.IsNull(Me.tableDBData.PreformTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPreformTypeNull()
            Me(Me.tableDBData.PreformTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPreformFirstLotNull() As Boolean
            Return Me.IsNull(Me.tableDBData.PreformFirstLotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPreformFirstLotNull()
            Me(Me.tableDBData.PreformFirstLotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPreformSecondLotNull() As Boolean
            Return Me.IsNull(Me.tableDBData.PreformSecondLotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPreformSecondLotNull()
            Me(Me.tableDBData.PreformSecondLotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPreformFirstLiftTimeNull() As Boolean
            Return Me.IsNull(Me.tableDBData.PreformFirstLiftTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPreformFirstLiftTimeNull()
            Me(Me.tableDBData.PreformFirstLiftTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPreformSecondLiftTimeNull() As Boolean
            Return Me.IsNull(Me.tableDBData.PreformSecondLiftTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPreformSecondLiftTimeNull()
            Me(Me.tableDBData.PreformSecondLiftTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmPickUpNull() As Boolean
            Return Me.IsNull(Me.tableDBData.AlarmPickUpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmPickUpNull()
            Me(Me.tableDBData.AlarmPickUpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmPreformNull() As Boolean
            Return Me.IsNull(Me.tableDBData.AlarmPreformColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmPreformNull()
            Me(Me.tableDBData.AlarmPreformColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmBonderNull() As Boolean
            Return Me.IsNull(Me.tableDBData.AlarmBonderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmBonderNull()
            Me(Me.tableDBData.AlarmBonderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmFrameOutNull() As Boolean
            Return Me.IsNull(Me.tableDBData.AlarmFrameOutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmFrameOutNull()
            Me(Me.tableDBData.AlarmFrameOutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmBridgeInspNull() As Boolean
            Return Me.IsNull(Me.tableDBData.AlarmBridgeInspColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmBridgeInspNull()
            Me(Me.tableDBData.AlarmBridgeInspColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmPreformInspNull() As Boolean
            Return Me.IsNull(Me.tableDBData.AlarmPreformInspColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmPreformInspNull()
            Me(Me.tableDBData.AlarmPreformInspColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRubberColletNoNull() As Boolean
            Return Me.IsNull(Me.tableDBData.RubberColletNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRubberColletNoNull()
            Me(Me.tableDBData.RubberColletNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOperateContinueNull() As Boolean
            Return Me.IsNull(Me.tableDBData.OperateContinueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOperateContinueNull()
            Me(Me.tableDBData.OperateContinueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRubberCheckNull() As Boolean
            Return Me.IsNull(Me.tableDBData.RubberCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRubberCheckNull()
            Me(Me.tableDBData.RubberCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChipsize1Null() As Boolean
            Return Me.IsNull(Me.tableDBData.Chipsize1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChipsize1Null()
            Me(Me.tableDBData.Chipsize1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChipsize2Null() As Boolean
            Return Me.IsNull(Me.tableDBData.Chipsize2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChipsize2Null()
            Me(Me.tableDBData.Chipsize2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBoundingContinueNull() As Boolean
            Return Me.IsNull(Me.tableDBData.BoundingContinueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBoundingContinueNull()
            Me(Me.tableDBData.BoundingContinueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsColletCheckNull() As Boolean
            Return Me.IsNull(Me.tableDBData.ColletCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetColletCheckNull()
            Me(Me.tableDBData.ColletCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPasteNozzleTypeNull() As Boolean
            Return Me.IsNull(Me.tableDBData.PasteNozzleTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPasteNozzleTypeNull()
            Me(Me.tableDBData.PasteNozzleTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPateNozzleNoNull() As Boolean
            Return Me.IsNull(Me.tableDBData.PateNozzleNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPateNozzleNoNull()
            Me(Me.tableDBData.PateNozzleNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPasteNozzleCondNull() As Boolean
            Return Me.IsNull(Me.tableDBData.PasteNozzleCondColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPasteNozzleCondNull()
            Me(Me.tableDBData.PasteNozzleCondColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTsukaigeNeedNoNull() As Boolean
            Return Me.IsNull(Me.tableDBData.TsukaigeNeedNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTsukaigeNeedNoNull()
            Me(Me.tableDBData.TsukaigeNeedNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTsukaigeCheckNull() As Boolean
            Return Me.IsNull(Me.tableDBData.TsukaigeCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTsukaigeCheckNull()
            Me(Me.tableDBData.TsukaigeCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSolderThickness1Null() As Boolean
            Return Me.IsNull(Me.tableDBData.SolderThickness1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSolderThickness1Null()
            Me(Me.tableDBData.SolderThickness1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSolderThickness2Null() As Boolean
            Return Me.IsNull(Me.tableDBData.SolderThickness2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSolderThickness2Null()
            Me(Me.tableDBData.SolderThickness2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSolderThickness3Null() As Boolean
            Return Me.IsNull(Me.tableDBData.SolderThickness3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSolderThickness3Null()
            Me(Me.tableDBData.SolderThickness3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSolderThickness4Null() As Boolean
            Return Me.IsNull(Me.tableDBData.SolderThickness4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSolderThickness4Null()
            Me(Me.tableDBData.SolderThickness4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSolderThicknessAvgNull() As Boolean
            Return Me.IsNull(Me.tableDBData.SolderThicknessAvgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSolderThicknessAvgNull()
            Me(Me.tableDBData.SolderThicknessAvgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSolderThicknessRNull() As Boolean
            Return Me.IsNull(Me.tableDBData.SolderThicknessRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSolderThicknessRNull()
            Me(Me.tableDBData.SolderThicknessRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsQCFirstLotModeNull() As Boolean
            Return Me.IsNull(Me.tableDBData.QCFirstLotModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetQCFirstLotModeNull()
            Me(Me.tableDBData.QCFirstLotModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsQCFirstLotAdjustNull() As Boolean
            Return Me.IsNull(Me.tableDBData.QCFirstLotAdjustColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetQCFirstLotAdjustNull()
            Me(Me.tableDBData.QCFirstLotAdjustColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsQCFinishLotModeNull() As Boolean
            Return Me.IsNull(Me.tableDBData.QCFinishLotModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetQCFinishLotModeNull()
            Me(Me.tableDBData.QCFinishLotModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsQCFinishLotAdjustNull() As Boolean
            Return Me.IsNull(Me.tableDBData.QCFinishLotAdjustColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetQCFinishLotAdjustNull()
            Me(Me.tableDBData.QCFinishLotAdjustColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsQCMiddleLotAbNull() As Boolean
            Return Me.IsNull(Me.tableDBData.QCMiddleLotAbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetQCMiddleLotAbNull()
            Me(Me.tableDBData.QCMiddleLotAbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsQCMiddleLotAdjustNull() As Boolean
            Return Me.IsNull(Me.tableDBData.QCMiddleLotAdjustColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetQCMiddleLotAdjustNull()
            Me(Me.tableDBData.QCMiddleLotAdjustColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMiddleLotJudgementNull() As Boolean
            Return Me.IsNull(Me.tableDBData.MiddleLotJudgementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMiddleLotJudgementNull()
            Me(Me.tableDBData.MiddleLotJudgementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsQCFirstLotAbNull() As Boolean
            Return Me.IsNull(Me.tableDBData.QCFirstLotAbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetQCFirstLotAbNull()
            Me(Me.tableDBData.QCFirstLotAbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsQCFinishLotAbNull() As Boolean
            Return Me.IsNull(Me.tableDBData.QCFinishLotAbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetQCFinishLotAbNull()
            Me(Me.tableDBData.QCFinishLotAbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLotJudgementNull() As Boolean
            Return Me.IsNull(Me.tableDBData.LotJudgementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLotJudgementNull()
            Me(Me.tableDBData.LotJudgementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOPCheckNull() As Boolean
            Return Me.IsNull(Me.tableDBData.OPCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOPCheckNull()
            Me(Me.tableDBData.OPCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRemarkNull() As Boolean
            Return Me.IsNull(Me.tableDBData.RemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRemarkNull()
            Me(Me.tableDBData.RemarkColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class WBDataRow
        Inherits Global.System.Data.DataRow
        
        Private tableWBData As WBDataDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableWBData = CType(Me.Table,WBDataDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MCNo() As String
            Get
                Return CType(Me(Me.tableWBData.MCNoColumn),String)
            End Get
            Set
                Me(Me.tableWBData.MCNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotNo() As String
            Get
                Return CType(Me(Me.tableWBData.LotNoColumn),String)
            End Get
            Set
                Me(Me.tableWBData.LotNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotStartTime() As Date
            Get
                Return CType(Me(Me.tableWBData.LotStartTimeColumn),Date)
            End Get
            Set
                Me(Me.tableWBData.LotStartTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MCType() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.MCTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MCType' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.MCTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OPNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.OPNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPNo' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.OPNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InputQty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWBData.InputQtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InputQty' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.InputQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalGood() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWBData.TotalGoodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalGood' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.TotalGoodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalNG() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWBData.TotalNGColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalNG' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.TotalNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OPRate() As Single
            Get
                Try 
                    Return CType(Me(Me.tableWBData.OPRateColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPRate' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.OPRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaximumRPM() As Single
            Get
                Try 
                    Return CType(Me(Me.tableWBData.MaximumRPMColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaximumRPM' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.MaximumRPMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AverageRPM() As Single
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AverageRPMColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AverageRPM' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AverageRPMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MTBF() As Single
            Get
                Try 
                    Return CType(Me(Me.tableWBData.MTBFColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MTBF' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.MTBFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MTTR() As Single
            Get
                Try 
                    Return CType(Me(Me.tableWBData.MTTRColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MTTR' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.MTTRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmTotal() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AlarmTotalColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmTotal' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AlarmTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotEndTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableWBData.LotEndTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LotEndTime' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.LotEndTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RunTime() As Single
            Get
                Try 
                    Return CType(Me(Me.tableWBData.RunTimeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RunTime' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.RunTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StopTime() As Single
            Get
                Try 
                    Return CType(Me(Me.tableWBData.StopTimeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StopTime' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.StopTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmTime() As Single
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AlarmTimeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmTime' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AlarmTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SelfConVersion() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.SelfConVersionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SelfConVersion' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.SelfConVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetVersion() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.NetVersionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetVersion' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.NetVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GoodWire() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWBData.GoodWireColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoodWire' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.GoodWireColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Au() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AuColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Au' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalGoodChip() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.TotalGoodChipColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalGoodChip' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.TotalGoodChipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalNGChip() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.TotalNGChipColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalNGChip' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.TotalNGChipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NoChip() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.NoChipColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoChip' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.NoChipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Alarm() As Single
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AlarmColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Alarm' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AlarmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AuUnnecessary() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AuUnnecessaryColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AuUnnecessary' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AuUnnecessaryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AuNormal() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AuNormalColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AuNormal' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AuNormalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AuAbnormal() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AuAbnormalColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AuAbnormal' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AuAbnormalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChipZure0to50() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.ChipZure0to50Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChipZure0to50' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.ChipZure0to50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChipZure51to100() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.ChipZure51to100Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChipZure51to100' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.ChipZure51to100Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChipZure101to150() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.ChipZure101to150Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChipZure101to150' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.ChipZure101to150Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChipZure151to200() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.ChipZure151to200Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChipZure151to200' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.ChipZure151to200Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChipZure201to250() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.ChipZure201to250Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChipZure201to250' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.ChipZure201to250Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChipZure251toOver() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.ChipZure251toOverColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChipZure251toOver' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.ChipZure251toOverColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NinshikiRetry() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.NinshikiRetryColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NinshikiRetry' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.NinshikiRetryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpanRetry() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.SpanRetryColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpanRetry' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.SpanRetryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NinshikiAlarmQTY() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.NinshikiAlarmQTYColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NinshikiAlarmQTY' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.NinshikiAlarmQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpanCounter() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.SpanCounterColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpanCounter' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.SpanCounterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NinshikiGood() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.NinshikiGoodColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NinshikiGood' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.NinshikiGoodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NinshikiNG() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.NinshikiNGColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NinshikiNG' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.NinshikiNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PNashi() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.PNashiColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNashi' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.PNashiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CapillaryLife() As Single
            Get
                Try 
                    Return CType(Me(Me.tableWBData.CapillaryLifeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CapillaryLife' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.CapillaryLifeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ComName() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.ComNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ComName' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.ComNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HajikiBe() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.HajikiBeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HajikiBe' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.HajikiBeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HajikiAf() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.HajikiAfColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HajikiAf' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.HajikiAfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HajikiPn() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.HajikiPnColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HajikiPn' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.HajikiPnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PeelBe() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.PeelBeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PeelBe' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.PeelBeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PeelAf() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.PeelAfColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PeelAf' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.PeelAfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PeelPn() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.PeelPnColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PeelPn' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.PeelPnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DbBdBe() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.DbBdBeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DbBdBe' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.DbBdBeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DbBdAf() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.DbBdAfColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DbBdAf' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.DbBdAfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DbBdPn() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.DbBdPnColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DbBdPn' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.DbBdPnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FirstJudgBe() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.FirstJudgBeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstJudgBe' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.FirstJudgBeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FirstJudgAf() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.FirstJudgAfColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstJudgAf' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.FirstJudgAfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FirstJudgPn() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.FirstJudgPnColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstJudgPn' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.FirstJudgPnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FinJudgBe() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.FinJudgBeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinJudgBe' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.FinJudgBeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FinJudgAf() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.FinJudgAfColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinJudgAf' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.FinJudgAfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FinJudgPn() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.FinJudgPnColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinJudgPn' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.FinJudgPnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotJudg() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.LotJudgColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LotJudg' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.LotJudgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotJudg_Detail() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.LotJudg_DetailColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LotJudg_Detail' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.LotJudg_DetailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OPJudgement() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.OPJudgementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPJudgement' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.OPJudgementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HBTemp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.HBTempColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HBTemp' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.HBTempColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Remark() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.RemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remark' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.RemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmEFO() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AlarmEFOColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmEFO' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AlarmEFOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmDieEyeFail() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AlarmDieEyeFailColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmDieEyeFail' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AlarmDieEyeFailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmLeadEyeFail() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AlarmLeadEyeFailColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmLeadEyeFail' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AlarmLeadEyeFailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmSmallBall() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AlarmSmallBallColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmSmallBall' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AlarmSmallBallColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmNSOL() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AlarmNSOLColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmNSOL' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AlarmNSOLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmNSOP() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AlarmNSOPColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmNSOP' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AlarmNSOPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmOther() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.AlarmOtherColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmOther' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.AlarmOtherColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TPMake() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableWBData.TPMakeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TPMake' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.TPMakeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAPChange() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableWBData.CAPChangeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAPChange' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.CAPChangeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HP_PPChange() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableWBData.HP_PPChangeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HP_PPChange' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.HP_PPChangeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property WireSizeChange() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableWBData.WireSizeChangeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WireSizeChange' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.WireSizeChangeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BMBefore() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableWBData.BMBeforeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BMBefore' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.BMBeforeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NGScrap() As Short
            Get
                Try 
                    Return CType(Me(Me.tableWBData.NGScrapColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NGScrap' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.NGScrapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TPMakeStart() As Date
            Get
                Try 
                    Return CType(Me(Me.tableWBData.TPMakeStartColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TPMakeStart' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.TPMakeStartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TPMakeFinish() As Date
            Get
                Try 
                    Return CType(Me(Me.tableWBData.TPMakeFinishColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TPMakeFinish' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.TPMakeFinishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BMMode() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.BMModeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BMMode' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.BMModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BMStart() As Date
            Get
                Try 
                    Return CType(Me(Me.tableWBData.BMStartColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BMStart' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.BMStartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BMFinish() As Date
            Get
                Try 
                    Return CType(Me(Me.tableWBData.BMFinishColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BMFinish' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.BMFinishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BMRequest() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableWBData.BMRequestColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BMRequest' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.BMRequestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BMIncharge() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.BMInchargeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BMIncharge' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.BMInchargeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TPMakeIncharge() As String
            Get
                Try 
                    Return CType(Me(Me.tableWBData.TPMakeInchargeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TPMakeIncharge' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.TPMakeInchargeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InputQtyAdjust() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWBData.InputQtyAdjustColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InputQtyAdjust' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.InputQtyAdjustColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalGoodAdjust() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWBData.TotalGoodAdjustColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalGoodAdjust' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.TotalGoodAdjustColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalNGAdjust() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWBData.TotalNGAdjustColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalNGAdjust' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.TotalNGAdjustColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GoldWireID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWBData.GoldWireID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoldWireID1' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.GoldWireID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GoldWireID2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWBData.GoldWireID2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoldWireID2' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.GoldWireID2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAPID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWBData.CAPID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAPID1' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.CAPID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAPID2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWBData.CAPID2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAPID2' in table 'WBData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWBData.CAPID2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMCTypeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.MCTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMCTypeNull()
            Me(Me.tableWBData.MCTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOPNoNull() As Boolean
            Return Me.IsNull(Me.tableWBData.OPNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOPNoNull()
            Me(Me.tableWBData.OPNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInputQtyNull() As Boolean
            Return Me.IsNull(Me.tableWBData.InputQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInputQtyNull()
            Me(Me.tableWBData.InputQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalGoodNull() As Boolean
            Return Me.IsNull(Me.tableWBData.TotalGoodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalGoodNull()
            Me(Me.tableWBData.TotalGoodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalNGNull() As Boolean
            Return Me.IsNull(Me.tableWBData.TotalNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalNGNull()
            Me(Me.tableWBData.TotalNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOPRateNull() As Boolean
            Return Me.IsNull(Me.tableWBData.OPRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOPRateNull()
            Me(Me.tableWBData.OPRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaximumRPMNull() As Boolean
            Return Me.IsNull(Me.tableWBData.MaximumRPMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaximumRPMNull()
            Me(Me.tableWBData.MaximumRPMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAverageRPMNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AverageRPMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAverageRPMNull()
            Me(Me.tableWBData.AverageRPMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMTBFNull() As Boolean
            Return Me.IsNull(Me.tableWBData.MTBFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMTBFNull()
            Me(Me.tableWBData.MTBFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMTTRNull() As Boolean
            Return Me.IsNull(Me.tableWBData.MTTRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMTTRNull()
            Me(Me.tableWBData.MTTRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmTotalNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AlarmTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmTotalNull()
            Me(Me.tableWBData.AlarmTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLotEndTimeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.LotEndTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLotEndTimeNull()
            Me(Me.tableWBData.LotEndTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRunTimeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.RunTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRunTimeNull()
            Me(Me.tableWBData.RunTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStopTimeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.StopTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStopTimeNull()
            Me(Me.tableWBData.StopTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmTimeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AlarmTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmTimeNull()
            Me(Me.tableWBData.AlarmTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSelfConVersionNull() As Boolean
            Return Me.IsNull(Me.tableWBData.SelfConVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSelfConVersionNull()
            Me(Me.tableWBData.SelfConVersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetVersionNull() As Boolean
            Return Me.IsNull(Me.tableWBData.NetVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetVersionNull()
            Me(Me.tableWBData.NetVersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGoodWireNull() As Boolean
            Return Me.IsNull(Me.tableWBData.GoodWireColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGoodWireNull()
            Me(Me.tableWBData.GoodWireColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAuNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAuNull()
            Me(Me.tableWBData.AuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalGoodChipNull() As Boolean
            Return Me.IsNull(Me.tableWBData.TotalGoodChipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalGoodChipNull()
            Me(Me.tableWBData.TotalGoodChipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalNGChipNull() As Boolean
            Return Me.IsNull(Me.tableWBData.TotalNGChipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalNGChipNull()
            Me(Me.tableWBData.TotalNGChipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNoChipNull() As Boolean
            Return Me.IsNull(Me.tableWBData.NoChipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNoChipNull()
            Me(Me.tableWBData.NoChipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AlarmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmNull()
            Me(Me.tableWBData.AlarmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAuUnnecessaryNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AuUnnecessaryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAuUnnecessaryNull()
            Me(Me.tableWBData.AuUnnecessaryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAuNormalNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AuNormalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAuNormalNull()
            Me(Me.tableWBData.AuNormalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAuAbnormalNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AuAbnormalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAuAbnormalNull()
            Me(Me.tableWBData.AuAbnormalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChipZure0to50Null() As Boolean
            Return Me.IsNull(Me.tableWBData.ChipZure0to50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChipZure0to50Null()
            Me(Me.tableWBData.ChipZure0to50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChipZure51to100Null() As Boolean
            Return Me.IsNull(Me.tableWBData.ChipZure51to100Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChipZure51to100Null()
            Me(Me.tableWBData.ChipZure51to100Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChipZure101to150Null() As Boolean
            Return Me.IsNull(Me.tableWBData.ChipZure101to150Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChipZure101to150Null()
            Me(Me.tableWBData.ChipZure101to150Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChipZure151to200Null() As Boolean
            Return Me.IsNull(Me.tableWBData.ChipZure151to200Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChipZure151to200Null()
            Me(Me.tableWBData.ChipZure151to200Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChipZure201to250Null() As Boolean
            Return Me.IsNull(Me.tableWBData.ChipZure201to250Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChipZure201to250Null()
            Me(Me.tableWBData.ChipZure201to250Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChipZure251toOverNull() As Boolean
            Return Me.IsNull(Me.tableWBData.ChipZure251toOverColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChipZure251toOverNull()
            Me(Me.tableWBData.ChipZure251toOverColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNinshikiRetryNull() As Boolean
            Return Me.IsNull(Me.tableWBData.NinshikiRetryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNinshikiRetryNull()
            Me(Me.tableWBData.NinshikiRetryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpanRetryNull() As Boolean
            Return Me.IsNull(Me.tableWBData.SpanRetryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpanRetryNull()
            Me(Me.tableWBData.SpanRetryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNinshikiAlarmQTYNull() As Boolean
            Return Me.IsNull(Me.tableWBData.NinshikiAlarmQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNinshikiAlarmQTYNull()
            Me(Me.tableWBData.NinshikiAlarmQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpanCounterNull() As Boolean
            Return Me.IsNull(Me.tableWBData.SpanCounterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpanCounterNull()
            Me(Me.tableWBData.SpanCounterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNinshikiGoodNull() As Boolean
            Return Me.IsNull(Me.tableWBData.NinshikiGoodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNinshikiGoodNull()
            Me(Me.tableWBData.NinshikiGoodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNinshikiNGNull() As Boolean
            Return Me.IsNull(Me.tableWBData.NinshikiNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNinshikiNGNull()
            Me(Me.tableWBData.NinshikiNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPNashiNull() As Boolean
            Return Me.IsNull(Me.tableWBData.PNashiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPNashiNull()
            Me(Me.tableWBData.PNashiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCapillaryLifeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.CapillaryLifeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCapillaryLifeNull()
            Me(Me.tableWBData.CapillaryLifeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsComNameNull() As Boolean
            Return Me.IsNull(Me.tableWBData.ComNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetComNameNull()
            Me(Me.tableWBData.ComNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHajikiBeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.HajikiBeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHajikiBeNull()
            Me(Me.tableWBData.HajikiBeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHajikiAfNull() As Boolean
            Return Me.IsNull(Me.tableWBData.HajikiAfColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHajikiAfNull()
            Me(Me.tableWBData.HajikiAfColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHajikiPnNull() As Boolean
            Return Me.IsNull(Me.tableWBData.HajikiPnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHajikiPnNull()
            Me(Me.tableWBData.HajikiPnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPeelBeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.PeelBeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPeelBeNull()
            Me(Me.tableWBData.PeelBeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPeelAfNull() As Boolean
            Return Me.IsNull(Me.tableWBData.PeelAfColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPeelAfNull()
            Me(Me.tableWBData.PeelAfColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPeelPnNull() As Boolean
            Return Me.IsNull(Me.tableWBData.PeelPnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPeelPnNull()
            Me(Me.tableWBData.PeelPnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDbBdBeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.DbBdBeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDbBdBeNull()
            Me(Me.tableWBData.DbBdBeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDbBdAfNull() As Boolean
            Return Me.IsNull(Me.tableWBData.DbBdAfColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDbBdAfNull()
            Me(Me.tableWBData.DbBdAfColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDbBdPnNull() As Boolean
            Return Me.IsNull(Me.tableWBData.DbBdPnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDbBdPnNull()
            Me(Me.tableWBData.DbBdPnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFirstJudgBeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.FirstJudgBeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFirstJudgBeNull()
            Me(Me.tableWBData.FirstJudgBeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFirstJudgAfNull() As Boolean
            Return Me.IsNull(Me.tableWBData.FirstJudgAfColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFirstJudgAfNull()
            Me(Me.tableWBData.FirstJudgAfColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFirstJudgPnNull() As Boolean
            Return Me.IsNull(Me.tableWBData.FirstJudgPnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFirstJudgPnNull()
            Me(Me.tableWBData.FirstJudgPnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFinJudgBeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.FinJudgBeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFinJudgBeNull()
            Me(Me.tableWBData.FinJudgBeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFinJudgAfNull() As Boolean
            Return Me.IsNull(Me.tableWBData.FinJudgAfColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFinJudgAfNull()
            Me(Me.tableWBData.FinJudgAfColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFinJudgPnNull() As Boolean
            Return Me.IsNull(Me.tableWBData.FinJudgPnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFinJudgPnNull()
            Me(Me.tableWBData.FinJudgPnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLotJudgNull() As Boolean
            Return Me.IsNull(Me.tableWBData.LotJudgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLotJudgNull()
            Me(Me.tableWBData.LotJudgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLotJudg_DetailNull() As Boolean
            Return Me.IsNull(Me.tableWBData.LotJudg_DetailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLotJudg_DetailNull()
            Me(Me.tableWBData.LotJudg_DetailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOPJudgementNull() As Boolean
            Return Me.IsNull(Me.tableWBData.OPJudgementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOPJudgementNull()
            Me(Me.tableWBData.OPJudgementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHBTempNull() As Boolean
            Return Me.IsNull(Me.tableWBData.HBTempColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHBTempNull()
            Me(Me.tableWBData.HBTempColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRemarkNull() As Boolean
            Return Me.IsNull(Me.tableWBData.RemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRemarkNull()
            Me(Me.tableWBData.RemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmEFONull() As Boolean
            Return Me.IsNull(Me.tableWBData.AlarmEFOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmEFONull()
            Me(Me.tableWBData.AlarmEFOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmDieEyeFailNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AlarmDieEyeFailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmDieEyeFailNull()
            Me(Me.tableWBData.AlarmDieEyeFailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmLeadEyeFailNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AlarmLeadEyeFailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmLeadEyeFailNull()
            Me(Me.tableWBData.AlarmLeadEyeFailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmSmallBallNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AlarmSmallBallColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmSmallBallNull()
            Me(Me.tableWBData.AlarmSmallBallColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmNSOLNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AlarmNSOLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmNSOLNull()
            Me(Me.tableWBData.AlarmNSOLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmNSOPNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AlarmNSOPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmNSOPNull()
            Me(Me.tableWBData.AlarmNSOPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmOtherNull() As Boolean
            Return Me.IsNull(Me.tableWBData.AlarmOtherColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmOtherNull()
            Me(Me.tableWBData.AlarmOtherColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTPMakeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.TPMakeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTPMakeNull()
            Me(Me.tableWBData.TPMakeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCAPChangeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.CAPChangeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCAPChangeNull()
            Me(Me.tableWBData.CAPChangeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHP_PPChangeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.HP_PPChangeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHP_PPChangeNull()
            Me(Me.tableWBData.HP_PPChangeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsWireSizeChangeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.WireSizeChangeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetWireSizeChangeNull()
            Me(Me.tableWBData.WireSizeChangeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBMBeforeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.BMBeforeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBMBeforeNull()
            Me(Me.tableWBData.BMBeforeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNGScrapNull() As Boolean
            Return Me.IsNull(Me.tableWBData.NGScrapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNGScrapNull()
            Me(Me.tableWBData.NGScrapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTPMakeStartNull() As Boolean
            Return Me.IsNull(Me.tableWBData.TPMakeStartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTPMakeStartNull()
            Me(Me.tableWBData.TPMakeStartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTPMakeFinishNull() As Boolean
            Return Me.IsNull(Me.tableWBData.TPMakeFinishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTPMakeFinishNull()
            Me(Me.tableWBData.TPMakeFinishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBMModeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.BMModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBMModeNull()
            Me(Me.tableWBData.BMModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBMStartNull() As Boolean
            Return Me.IsNull(Me.tableWBData.BMStartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBMStartNull()
            Me(Me.tableWBData.BMStartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBMFinishNull() As Boolean
            Return Me.IsNull(Me.tableWBData.BMFinishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBMFinishNull()
            Me(Me.tableWBData.BMFinishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBMRequestNull() As Boolean
            Return Me.IsNull(Me.tableWBData.BMRequestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBMRequestNull()
            Me(Me.tableWBData.BMRequestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBMInchargeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.BMInchargeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBMInchargeNull()
            Me(Me.tableWBData.BMInchargeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTPMakeInchargeNull() As Boolean
            Return Me.IsNull(Me.tableWBData.TPMakeInchargeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTPMakeInchargeNull()
            Me(Me.tableWBData.TPMakeInchargeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInputQtyAdjustNull() As Boolean
            Return Me.IsNull(Me.tableWBData.InputQtyAdjustColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInputQtyAdjustNull()
            Me(Me.tableWBData.InputQtyAdjustColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalGoodAdjustNull() As Boolean
            Return Me.IsNull(Me.tableWBData.TotalGoodAdjustColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalGoodAdjustNull()
            Me(Me.tableWBData.TotalGoodAdjustColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalNGAdjustNull() As Boolean
            Return Me.IsNull(Me.tableWBData.TotalNGAdjustColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalNGAdjustNull()
            Me(Me.tableWBData.TotalNGAdjustColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGoldWireID1Null() As Boolean
            Return Me.IsNull(Me.tableWBData.GoldWireID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGoldWireID1Null()
            Me(Me.tableWBData.GoldWireID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGoldWireID2Null() As Boolean
            Return Me.IsNull(Me.tableWBData.GoldWireID2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGoldWireID2Null()
            Me(Me.tableWBData.GoldWireID2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCAPID1Null() As Boolean
            Return Me.IsNull(Me.tableWBData.CAPID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCAPID1Null()
            Me(Me.tableWBData.CAPID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCAPID2Null() As Boolean
            Return Me.IsNull(Me.tableWBData.CAPID2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCAPID2Null()
            Me(Me.tableWBData.CAPID2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LotAlarmQtyRow
        Inherits Global.System.Data.DataRow
        
        Private tableLotAlarmQty As LotAlarmQtyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLotAlarmQty = CType(Me.Table,LotAlarmQtyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Process() As String
            Get
                Return CType(Me(Me.tableLotAlarmQty.ProcessColumn),String)
            End Get
            Set
                Me(Me.tableLotAlarmQty.ProcessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotNo() As String
            Get
                Return CType(Me(Me.tableLotAlarmQty.LotNoColumn),String)
            End Get
            Set
                Me(Me.tableLotAlarmQty.LotNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableLotAlarmQty.AlarmNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmNo' in table 'LotAlarmQty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLotAlarmQty.AlarmNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AlarmMess() As String
            Get
                Return CType(Me(Me.tableLotAlarmQty.AlarmMessColumn),String)
            End Get
            Set
                Me(Me.tableLotAlarmQty.AlarmMessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Qty() As String
            Get
                Try 
                    Return CType(Me(Me.tableLotAlarmQty.QtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty' in table 'LotAlarmQty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLotAlarmQty.QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Remark() As String
            Get
                Try 
                    Return CType(Me(Me.tableLotAlarmQty.RemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remark' in table 'LotAlarmQty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLotAlarmQty.RemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CreateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLotAlarmQty.CreateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreateTime' in table 'LotAlarmQty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLotAlarmQty.CreateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAlarmNoNull() As Boolean
            Return Me.IsNull(Me.tableLotAlarmQty.AlarmNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAlarmNoNull()
            Me(Me.tableLotAlarmQty.AlarmNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsQtyNull() As Boolean
            Return Me.IsNull(Me.tableLotAlarmQty.QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetQtyNull()
            Me(Me.tableLotAlarmQty.QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRemarkNull() As Boolean
            Return Me.IsNull(Me.tableLotAlarmQty.RemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRemarkNull()
            Me(Me.tableLotAlarmQty.RemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCreateTimeNull() As Boolean
            Return Me.IsNull(Me.tableLotAlarmQty.CreateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCreateTimeNull()
            Me(Me.tableLotAlarmQty.CreateTimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DBWBINSDataRow
        Inherits Global.System.Data.DataRow
        
        Private tableDBWBINSData As DBWBINSDataDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDBWBINSData = CType(Me.Table,DBWBINSDataDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotNo() As String
            Get
                Return CType(Me(Me.tableDBWBINSData.LotNoColumn),String)
            End Get
            Set
                Me(Me.tableDBWBINSData.LotNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StartTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.StartTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StartTime' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.StartTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EndTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.EndTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EndTime' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.EndTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReqDate() As Date
            Get
                Return CType(Me(Me.tableDBWBINSData.ReqDateColumn),Date)
            End Get
            Set
                Me(Me.tableDBWBINSData.ReqDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestMode1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestMode1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestMode1' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestMode1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestMode2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestMode2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestMode2' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestMode2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestMode3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestMode3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestMode3' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestMode3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestMode4() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestMode4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestMode4' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestMode4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestMode5() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestMode5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestMode5' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestMode5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OPNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.OPNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPNo' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.OPNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InspMagQty() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.InspMagQtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InspMagQty' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.InspMagQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultMode1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultMode1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultMode1' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultMode1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultQtyMode1() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultQtyMode1Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultQtyMode1' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultQtyMode1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultMode2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultMode2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultMode2' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultMode2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultQtyMode2() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultQtyMode2Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultQtyMode2' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultQtyMode2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultMode3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultMode3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultMode3' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultMode3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultQtyMode3() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultQtyMode3Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultQtyMode3' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultQtyMode3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultMode4() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultMode4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultMode4' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultMode4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultQtyMode4() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultQtyMode4Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultQtyMode4' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultQtyMode4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultMode5() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultMode5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultMode5' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultMode5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultQtyMode5() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultQtyMode5Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultQtyMode5' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultQtyMode5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GoodQty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.GoodQtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GoodQty' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.GoodQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NGQty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.NGQtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NGQty' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.NGQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalQty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.TotalQtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalQty' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.TotalQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FinalYield() As Single
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.FinalYieldColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinalYield' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.FinalYieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalTime() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.TotalTimeColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalTime' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.TotalTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InspJudg() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.InspJudgColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InspJudg' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.InspJudgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LotJudg() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.LotJudgColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LotJudg' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.LotJudgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Remark() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remark' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GLCheck() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.GLCheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GLCheck' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.GLCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SelfConVersion() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.SelfConVersionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SelfConVersion' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.SelfConVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetVersion() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.NetVersionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetVersion' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.NetVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestModeName1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestModeName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestModeName1' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestModeName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestModeName2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestModeName2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestModeName2' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestModeName2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestModeName3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestModeName3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestModeName3' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestModeName3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestModeName4() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestModeName4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestModeName4' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestModeName4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestModeName5() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestModeName5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestModeName5' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestModeName5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestModeRemark1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestModeRemark1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestModeRemark1' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestModeRemark1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestModeRemark2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestModeRemark2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestModeRemark2' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestModeRemark2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestModeRemark3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestModeRemark3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestModeRemark3' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestModeRemark3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestModeRemark4() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestModeRemark4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestModeRemark4' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestModeRemark4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestModeRemark5() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.RequestModeRemark5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestModeRemark5' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.RequestModeRemark5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ObjectIns() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ObjectInsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ObjectIns' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ObjectInsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Package() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.PackageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Package' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.PackageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Process() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ProcessColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Process' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ProcessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property JudgeReason() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.JudgeReasonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JudgeReason' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.JudgeReasonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultModeName1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultModeName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultModeName1' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultModeName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultModeName2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultModeName2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultModeName2' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultModeName2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultModeName3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultModeName3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultModeName3' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultModeName3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultModeName4() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultModeName4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultModeName4' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultModeName4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ResultModeName5() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ResultModeName5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultModeName5' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ResultModeName5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StopTime() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.StopTimeColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StopTime' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.StopTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InspNGQty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.InspNGQtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InspNGQty' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.InspNGQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MCNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.MCNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MCNo' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.MCNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ComName() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.ComNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ComName' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.ComNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InspectorNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.InspectorNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InspectorNo' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.InspectorNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InsName() As String
            Get
                Try 
                    Return CType(Me(Me.tableDBWBINSData.InsNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsName' in table 'DBWBINSData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDBWBINSData.InsNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStartTimeNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.StartTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStartTimeNull()
            Me(Me.tableDBWBINSData.StartTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEndTimeNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.EndTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEndTimeNull()
            Me(Me.tableDBWBINSData.EndTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestMode1Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestMode1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestMode1Null()
            Me(Me.tableDBWBINSData.RequestMode1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestMode2Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestMode2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestMode2Null()
            Me(Me.tableDBWBINSData.RequestMode2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestMode3Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestMode3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestMode3Null()
            Me(Me.tableDBWBINSData.RequestMode3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestMode4Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestMode4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestMode4Null()
            Me(Me.tableDBWBINSData.RequestMode4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestMode5Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestMode5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestMode5Null()
            Me(Me.tableDBWBINSData.RequestMode5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOPNoNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.OPNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOPNoNull()
            Me(Me.tableDBWBINSData.OPNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInspMagQtyNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.InspMagQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInspMagQtyNull()
            Me(Me.tableDBWBINSData.InspMagQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultMode1Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultMode1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultMode1Null()
            Me(Me.tableDBWBINSData.ResultMode1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultQtyMode1Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultQtyMode1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultQtyMode1Null()
            Me(Me.tableDBWBINSData.ResultQtyMode1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultMode2Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultMode2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultMode2Null()
            Me(Me.tableDBWBINSData.ResultMode2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultQtyMode2Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultQtyMode2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultQtyMode2Null()
            Me(Me.tableDBWBINSData.ResultQtyMode2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultMode3Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultMode3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultMode3Null()
            Me(Me.tableDBWBINSData.ResultMode3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultQtyMode3Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultQtyMode3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultQtyMode3Null()
            Me(Me.tableDBWBINSData.ResultQtyMode3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultMode4Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultMode4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultMode4Null()
            Me(Me.tableDBWBINSData.ResultMode4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultQtyMode4Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultQtyMode4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultQtyMode4Null()
            Me(Me.tableDBWBINSData.ResultQtyMode4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultMode5Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultMode5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultMode5Null()
            Me(Me.tableDBWBINSData.ResultMode5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultQtyMode5Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultQtyMode5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultQtyMode5Null()
            Me(Me.tableDBWBINSData.ResultQtyMode5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGoodQtyNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.GoodQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGoodQtyNull()
            Me(Me.tableDBWBINSData.GoodQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNGQtyNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.NGQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNGQtyNull()
            Me(Me.tableDBWBINSData.NGQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalQtyNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.TotalQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalQtyNull()
            Me(Me.tableDBWBINSData.TotalQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFinalYieldNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.FinalYieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFinalYieldNull()
            Me(Me.tableDBWBINSData.FinalYieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalTimeNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.TotalTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalTimeNull()
            Me(Me.tableDBWBINSData.TotalTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInspJudgNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.InspJudgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInspJudgNull()
            Me(Me.tableDBWBINSData.InspJudgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLotJudgNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.LotJudgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLotJudgNull()
            Me(Me.tableDBWBINSData.LotJudgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRemarkNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRemarkNull()
            Me(Me.tableDBWBINSData.RemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGLCheckNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.GLCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGLCheckNull()
            Me(Me.tableDBWBINSData.GLCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSelfConVersionNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.SelfConVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSelfConVersionNull()
            Me(Me.tableDBWBINSData.SelfConVersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetVersionNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.NetVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetVersionNull()
            Me(Me.tableDBWBINSData.NetVersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestModeName1Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestModeName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestModeName1Null()
            Me(Me.tableDBWBINSData.RequestModeName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestModeName2Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestModeName2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestModeName2Null()
            Me(Me.tableDBWBINSData.RequestModeName2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestModeName3Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestModeName3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestModeName3Null()
            Me(Me.tableDBWBINSData.RequestModeName3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestModeName4Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestModeName4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestModeName4Null()
            Me(Me.tableDBWBINSData.RequestModeName4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestModeName5Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestModeName5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestModeName5Null()
            Me(Me.tableDBWBINSData.RequestModeName5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestModeRemark1Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestModeRemark1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestModeRemark1Null()
            Me(Me.tableDBWBINSData.RequestModeRemark1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestModeRemark2Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestModeRemark2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestModeRemark2Null()
            Me(Me.tableDBWBINSData.RequestModeRemark2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestModeRemark3Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestModeRemark3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestModeRemark3Null()
            Me(Me.tableDBWBINSData.RequestModeRemark3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestModeRemark4Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestModeRemark4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestModeRemark4Null()
            Me(Me.tableDBWBINSData.RequestModeRemark4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestModeRemark5Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.RequestModeRemark5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestModeRemark5Null()
            Me(Me.tableDBWBINSData.RequestModeRemark5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsObjectInsNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ObjectInsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetObjectInsNull()
            Me(Me.tableDBWBINSData.ObjectInsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPackageNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.PackageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPackageNull()
            Me(Me.tableDBWBINSData.PackageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProcessNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ProcessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProcessNull()
            Me(Me.tableDBWBINSData.ProcessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsJudgeReasonNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.JudgeReasonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetJudgeReasonNull()
            Me(Me.tableDBWBINSData.JudgeReasonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultModeName1Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultModeName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultModeName1Null()
            Me(Me.tableDBWBINSData.ResultModeName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultModeName2Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultModeName2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultModeName2Null()
            Me(Me.tableDBWBINSData.ResultModeName2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultModeName3Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultModeName3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultModeName3Null()
            Me(Me.tableDBWBINSData.ResultModeName3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultModeName4Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultModeName4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultModeName4Null()
            Me(Me.tableDBWBINSData.ResultModeName4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsResultModeName5Null() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ResultModeName5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetResultModeName5Null()
            Me(Me.tableDBWBINSData.ResultModeName5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tableDBWBINSData.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStopTimeNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.StopTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStopTimeNull()
            Me(Me.tableDBWBINSData.StopTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInspNGQtyNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.InspNGQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInspNGQtyNull()
            Me(Me.tableDBWBINSData.InspNGQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMCNoNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.MCNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMCNoNull()
            Me(Me.tableDBWBINSData.MCNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsComNameNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.ComNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetComNameNull()
            Me(Me.tableDBWBINSData.ComNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInspectorNoNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.InspectorNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInspectorNoNull()
            Me(Me.tableDBWBINSData.InspectorNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInsNameNull() As Boolean
            Return Me.IsNull(Me.tableDBWBINSData.InsNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInsNameNull()
            Me(Me.tableDBWBINSData.InsNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class DBDataRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DBDataRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As DBDataRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As DBDataRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class WBDataRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As WBDataRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As WBDataRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As WBDataRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class LotAlarmQtyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LotAlarmQtyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As LotAlarmQtyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As LotAlarmQtyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class DBWBINSDataRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DBWBINSDataRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As DBWBINSDataRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As DBWBINSDataRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DBxDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DBDataTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DBData"
            tableMapping.ColumnMappings.Add("MCNo", "MCNo")
            tableMapping.ColumnMappings.Add("LotNo", "LotNo")
            tableMapping.ColumnMappings.Add("LotStartTime", "LotStartTime")
            tableMapping.ColumnMappings.Add("MCType", "MCType")
            tableMapping.ColumnMappings.Add("OPNo", "OPNo")
            tableMapping.ColumnMappings.Add("InputQty", "InputQty")
            tableMapping.ColumnMappings.Add("TotalGood", "TotalGood")
            tableMapping.ColumnMappings.Add("TotalNG", "TotalNG")
            tableMapping.ColumnMappings.Add("OPRate", "OPRate")
            tableMapping.ColumnMappings.Add("MaximumRPM", "MaximumRPM")
            tableMapping.ColumnMappings.Add("AverageRPM", "AverageRPM")
            tableMapping.ColumnMappings.Add("MTBF", "MTBF")
            tableMapping.ColumnMappings.Add("MTTR", "MTTR")
            tableMapping.ColumnMappings.Add("AlarmTotal", "AlarmTotal")
            tableMapping.ColumnMappings.Add("LotEndTime", "LotEndTime")
            tableMapping.ColumnMappings.Add("RunTime", "RunTime")
            tableMapping.ColumnMappings.Add("StopTime", "StopTime")
            tableMapping.ColumnMappings.Add("AlarmTime", "AlarmTime")
            tableMapping.ColumnMappings.Add("SelfConVersion", "SelfConVersion")
            tableMapping.ColumnMappings.Add("NetVersion", "NetVersion")
            tableMapping.ColumnMappings.Add("NoChipQTY", "NoChipQTY")
            tableMapping.ColumnMappings.Add("BrideNG", "BrideNG")
            tableMapping.ColumnMappings.Add("PickupNG", "PickupNG")
            tableMapping.ColumnMappings.Add("ColletCount", "ColletCount")
            tableMapping.ColumnMappings.Add("ImpQTY", "ImpQTY")
            tableMapping.ColumnMappings.Add("LotQTY", "LotQTY")
            tableMapping.ColumnMappings.Add("LotCNT", "LotCNT")
            tableMapping.ColumnMappings.Add("LotGood", "LotGood")
            tableMapping.ColumnMappings.Add("LotNG", "LotNG")
            tableMapping.ColumnMappings.Add("LotPFNG", "LotPFNG")
            tableMapping.ColumnMappings.Add("BrideNGMC", "BrideNGMC")
            tableMapping.ColumnMappings.Add("CancelPcs", "CancelPcs")
            tableMapping.ColumnMappings.Add("CPDispo", "CPDispo")
            tableMapping.ColumnMappings.Add("ZeroCount", "ZeroCount")
            tableMapping.ColumnMappings.Add("ZeroEnd", "ZeroEnd")
            tableMapping.ColumnMappings.Add("FrameFirstLot", "FrameFirstLot")
            tableMapping.ColumnMappings.Add("FrameSecondLot", "FrameSecondLot")
            tableMapping.ColumnMappings.Add("PreformType", "PreformType")
            tableMapping.ColumnMappings.Add("PreformFirstLot", "PreformFirstLot")
            tableMapping.ColumnMappings.Add("PreformSecondLot", "PreformSecondLot")
            tableMapping.ColumnMappings.Add("PreformFirstLiftTime", "PreformFirstLiftTime")
            tableMapping.ColumnMappings.Add("PreformSecondLiftTime", "PreformSecondLiftTime")
            tableMapping.ColumnMappings.Add("AlarmPickUp", "AlarmPickUp")
            tableMapping.ColumnMappings.Add("AlarmPreform", "AlarmPreform")
            tableMapping.ColumnMappings.Add("AlarmBonder", "AlarmBonder")
            tableMapping.ColumnMappings.Add("AlarmFrameOut", "AlarmFrameOut")
            tableMapping.ColumnMappings.Add("AlarmBridgeInsp", "AlarmBridgeInsp")
            tableMapping.ColumnMappings.Add("AlarmPreformInsp", "AlarmPreformInsp")
            tableMapping.ColumnMappings.Add("RubberColletNo", "RubberColletNo")
            tableMapping.ColumnMappings.Add("OperateContinue", "OperateContinue")
            tableMapping.ColumnMappings.Add("RubberCheck", "RubberCheck")
            tableMapping.ColumnMappings.Add("Chipsize1", "Chipsize1")
            tableMapping.ColumnMappings.Add("Chipsize2", "Chipsize2")
            tableMapping.ColumnMappings.Add("BoundingContinue", "BoundingContinue")
            tableMapping.ColumnMappings.Add("ColletCheck", "ColletCheck")
            tableMapping.ColumnMappings.Add("PasteNozzleType", "PasteNozzleType")
            tableMapping.ColumnMappings.Add("PateNozzleNo", "PateNozzleNo")
            tableMapping.ColumnMappings.Add("PasteNozzleCond", "PasteNozzleCond")
            tableMapping.ColumnMappings.Add("TsukaigeNeedNo", "TsukaigeNeedNo")
            tableMapping.ColumnMappings.Add("TsukaigeCheck", "TsukaigeCheck")
            tableMapping.ColumnMappings.Add("SolderThickness1", "SolderThickness1")
            tableMapping.ColumnMappings.Add("SolderThickness2", "SolderThickness2")
            tableMapping.ColumnMappings.Add("SolderThickness3", "SolderThickness3")
            tableMapping.ColumnMappings.Add("SolderThickness4", "SolderThickness4")
            tableMapping.ColumnMappings.Add("SolderThicknessAvg", "SolderThicknessAvg")
            tableMapping.ColumnMappings.Add("SolderThicknessR", "SolderThicknessR")
            tableMapping.ColumnMappings.Add("QCFirstLotMode", "QCFirstLotMode")
            tableMapping.ColumnMappings.Add("QCFirstLotAdjust", "QCFirstLotAdjust")
            tableMapping.ColumnMappings.Add("QCFinishLotMode", "QCFinishLotMode")
            tableMapping.ColumnMappings.Add("QCFinishLotAdjust", "QCFinishLotAdjust")
            tableMapping.ColumnMappings.Add("QCMiddleLotAb", "QCMiddleLotAb")
            tableMapping.ColumnMappings.Add("QCMiddleLotAdjust", "QCMiddleLotAdjust")
            tableMapping.ColumnMappings.Add("MiddleLotJudgement", "MiddleLotJudgement")
            tableMapping.ColumnMappings.Add("QCFirstLotAb", "QCFirstLotAb")
            tableMapping.ColumnMappings.Add("QCFinishLotAb", "QCFinishLotAb")
            tableMapping.ColumnMappings.Add("LotJudgement", "LotJudgement")
            tableMapping.ColumnMappings.Add("OPCheck", "OPCheck")
            tableMapping.ColumnMappings.Add("Remark", "Remark")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[DBData] WHERE (([MCNo] = @Original_MCNo) AND ([LotNo] = @Origi"& _ 
                "nal_LotNo) AND ([LotStartTime] = @Original_LotStartTime) AND ((@IsNull_MCType = "& _ 
                "1 AND [MCType] IS NULL) OR ([MCType] = @Original_MCType)) AND ((@IsNull_OPNo = 1"& _ 
                " AND [OPNo] IS NULL) OR ([OPNo] = @Original_OPNo)) AND ((@IsNull_InputQty = 1 AN"& _ 
                "D [InputQty] IS NULL) OR ([InputQty] = @Original_InputQty)) AND ((@IsNull_TotalG"& _ 
                "ood = 1 AND [TotalGood] IS NULL) OR ([TotalGood] = @Original_TotalGood)) AND ((@"& _ 
                "IsNull_TotalNG = 1 AND [TotalNG] IS NULL) OR ([TotalNG] = @Original_TotalNG)) AN"& _ 
                "D ((@IsNull_OPRate = 1 AND [OPRate] IS NULL) OR ([OPRate] = @Original_OPRate)) A"& _ 
                "ND ((@IsNull_MaximumRPM = 1 AND [MaximumRPM] IS NULL) OR ([MaximumRPM] = @Origin"& _ 
                "al_MaximumRPM)) AND ((@IsNull_AverageRPM = 1 AND [AverageRPM] IS NULL) OR ([Aver"& _ 
                "ageRPM] = @Original_AverageRPM)) AND ((@IsNull_MTBF = 1 AND [MTBF] IS NULL) OR ("& _ 
                "[MTBF] = @Original_MTBF)) AND ((@IsNull_MTTR = 1 AND [MTTR] IS NULL) OR ([MTTR] "& _ 
                "= @Original_MTTR)) AND ((@IsNull_AlarmTotal = 1 AND [AlarmTotal] IS NULL) OR ([A"& _ 
                "larmTotal] = @Original_AlarmTotal)) AND ((@IsNull_LotEndTime = 1 AND [LotEndTime"& _ 
                "] IS NULL) OR ([LotEndTime] = @Original_LotEndTime)) AND ((@IsNull_RunTime = 1 A"& _ 
                "ND [RunTime] IS NULL) OR ([RunTime] = @Original_RunTime)) AND ((@IsNull_StopTime"& _ 
                " = 1 AND [StopTime] IS NULL) OR ([StopTime] = @Original_StopTime)) AND ((@IsNull"& _ 
                "_AlarmTime = 1 AND [AlarmTime] IS NULL) OR ([AlarmTime] = @Original_AlarmTime)) "& _ 
                "AND ((@IsNull_SelfConVersion = 1 AND [SelfConVersion] IS NULL) OR ([SelfConVersi"& _ 
                "on] = @Original_SelfConVersion)) AND ((@IsNull_NetVersion = 1 AND [NetVersion] I"& _ 
                "S NULL) OR ([NetVersion] = @Original_NetVersion)) AND ((@IsNull_NoChipQTY = 1 AN"& _ 
                "D [NoChipQTY] IS NULL) OR ([NoChipQTY] = @Original_NoChipQTY)) AND ((@IsNull_Bri"& _ 
                "deNG = 1 AND [BrideNG] IS NULL) OR ([BrideNG] = @Original_BrideNG)) AND ((@IsNul"& _ 
                "l_PickupNG = 1 AND [PickupNG] IS NULL) OR ([PickupNG] = @Original_PickupNG)) AND"& _ 
                " ((@IsNull_ColletCount = 1 AND [ColletCount] IS NULL) OR ([ColletCount] = @Origi"& _ 
                "nal_ColletCount)) AND ((@IsNull_ImpQTY = 1 AND [ImpQTY] IS NULL) OR ([ImpQTY] = "& _ 
                "@Original_ImpQTY)) AND ((@IsNull_LotQTY = 1 AND [LotQTY] IS NULL) OR ([LotQTY] ="& _ 
                " @Original_LotQTY)) AND ((@IsNull_LotCNT = 1 AND [LotCNT] IS NULL) OR ([LotCNT] "& _ 
                "= @Original_LotCNT)) AND ((@IsNull_LotGood = 1 AND [LotGood] IS NULL) OR ([LotGo"& _ 
                "od] = @Original_LotGood)) AND ((@IsNull_LotNG = 1 AND [LotNG] IS NULL) OR ([LotN"& _ 
                "G] = @Original_LotNG)) AND ((@IsNull_LotPFNG = 1 AND [LotPFNG] IS NULL) OR ([Lot"& _ 
                "PFNG] = @Original_LotPFNG)) AND ((@IsNull_BrideNGMC = 1 AND [BrideNGMC] IS NULL)"& _ 
                " OR ([BrideNGMC] = @Original_BrideNGMC)) AND ((@IsNull_CancelPcs = 1 AND [Cancel"& _ 
                "Pcs] IS NULL) OR ([CancelPcs] = @Original_CancelPcs)) AND ((@IsNull_CPDispo = 1 "& _ 
                "AND [CPDispo] IS NULL) OR ([CPDispo] = @Original_CPDispo)) AND ((@IsNull_ZeroCou"& _ 
                "nt = 1 AND [ZeroCount] IS NULL) OR ([ZeroCount] = @Original_ZeroCount)) AND ((@I"& _ 
                "sNull_ZeroEnd = 1 AND [ZeroEnd] IS NULL) OR ([ZeroEnd] = @Original_ZeroEnd)) AND"& _ 
                " ((@IsNull_FrameFirstLot = 1 AND [FrameFirstLot] IS NULL) OR ([FrameFirstLot] = "& _ 
                "@Original_FrameFirstLot)) AND ((@IsNull_FrameSecondLot = 1 AND [FrameSecondLot] "& _ 
                "IS NULL) OR ([FrameSecondLot] = @Original_FrameSecondLot)) AND ((@IsNull_Preform"& _ 
                "Type = 1 AND [PreformType] IS NULL) OR ([PreformType] = @Original_PreformType)) "& _ 
                "AND ((@IsNull_PreformFirstLot = 1 AND [PreformFirstLot] IS NULL) OR ([PreformFir"& _ 
                "stLot] = @Original_PreformFirstLot)) AND ((@IsNull_PreformSecondLot = 1 AND [Pre"& _ 
                "formSecondLot] IS NULL) OR ([PreformSecondLot] = @Original_PreformSecondLot)) AN"& _ 
                "D ((@IsNull_PreformFirstLiftTime = 1 AND [PreformFirstLiftTime] IS NULL) OR ([Pr"& _ 
                "eformFirstLiftTime] = @Original_PreformFirstLiftTime)) AND ((@IsNull_PreformSeco"& _ 
                "ndLiftTime = 1 AND [PreformSecondLiftTime] IS NULL) OR ([PreformSecondLiftTime] "& _ 
                "= @Original_PreformSecondLiftTime)) AND ((@IsNull_AlarmPickUp = 1 AND [AlarmPick"& _ 
                "Up] IS NULL) OR ([AlarmPickUp] = @Original_AlarmPickUp)) AND ((@IsNull_AlarmPref"& _ 
                "orm = 1 AND [AlarmPreform] IS NULL) OR ([AlarmPreform] = @Original_AlarmPreform)"& _ 
                ") AND ((@IsNull_AlarmBonder = 1 AND [AlarmBonder] IS NULL) OR ([AlarmBonder] = @"& _ 
                "Original_AlarmBonder)) AND ((@IsNull_AlarmFrameOut = 1 AND [AlarmFrameOut] IS NU"& _ 
                "LL) OR ([AlarmFrameOut] = @Original_AlarmFrameOut)) AND ((@IsNull_AlarmBridgeIns"& _ 
                "p = 1 AND [AlarmBridgeInsp] IS NULL) OR ([AlarmBridgeInsp] = @Original_AlarmBrid"& _ 
                "geInsp)) AND ((@IsNull_AlarmPreformInsp = 1 AND [AlarmPreformInsp] IS NULL) OR ("& _ 
                "[AlarmPreformInsp] = @Original_AlarmPreformInsp)) AND ((@IsNull_RubberColletNo ="& _ 
                " 1 AND [RubberColletNo] IS NULL) OR ([RubberColletNo] = @Original_RubberColletNo"& _ 
                ")) AND ((@IsNull_OperateContinue = 1 AND [OperateContinue] IS NULL) OR ([Operate"& _ 
                "Continue] = @Original_OperateContinue)) AND ((@IsNull_RubberCheck = 1 AND [Rubbe"& _ 
                "rCheck] IS NULL) OR ([RubberCheck] = @Original_RubberCheck)) AND ((@IsNull_Chips"& _ 
                "ize1 = 1 AND [Chipsize1] IS NULL) OR ([Chipsize1] = @Original_Chipsize1)) AND (("& _ 
                "@IsNull_Chipsize2 = 1 AND [Chipsize2] IS NULL) OR ([Chipsize2] = @Original_Chips"& _ 
                "ize2)) AND ((@IsNull_BoundingContinue = 1 AND [BoundingContinue] IS NULL) OR ([B"& _ 
                "oundingContinue] = @Original_BoundingContinue)) AND ((@IsNull_ColletCheck = 1 AN"& _ 
                "D [ColletCheck] IS NULL) OR ([ColletCheck] = @Original_ColletCheck)) AND ((@IsNu"& _ 
                "ll_PasteNozzleType = 1 AND [PasteNozzleType] IS NULL) OR ([PasteNozzleType] = @O"& _ 
                "riginal_PasteNozzleType)) AND ((@IsNull_PateNozzleNo = 1 AND [PateNozzleNo] IS N"& _ 
                "ULL) OR ([PateNozzleNo] = @Original_PateNozzleNo)) AND ((@IsNull_PasteNozzleCond"& _ 
                " = 1 AND [PasteNozzleCond] IS NULL) OR ([PasteNozzleCond] = @Original_PasteNozzl"& _ 
                "eCond)) AND ((@IsNull_TsukaigeNeedNo = 1 AND [TsukaigeNeedNo] IS NULL) OR ([Tsuk"& _ 
                "aigeNeedNo] = @Original_TsukaigeNeedNo)) AND ((@IsNull_TsukaigeCheck = 1 AND [Ts"& _ 
                "ukaigeCheck] IS NULL) OR ([TsukaigeCheck] = @Original_TsukaigeCheck)) AND ((@IsN"& _ 
                "ull_SolderThickness1 = 1 AND [SolderThickness1] IS NULL) OR ([SolderThickness1] "& _ 
                "= @Original_SolderThickness1)) AND ((@IsNull_SolderThickness2 = 1 AND [SolderThi"& _ 
                "ckness2] IS NULL) OR ([SolderThickness2] = @Original_SolderThickness2)) AND ((@I"& _ 
                "sNull_SolderThickness3 = 1 AND [SolderThickness3] IS NULL) OR ([SolderThickness3"& _ 
                "] = @Original_SolderThickness3)) AND ((@IsNull_SolderThickness4 = 1 AND [SolderT"& _ 
                "hickness4] IS NULL) OR ([SolderThickness4] = @Original_SolderThickness4)) AND (("& _ 
                "@IsNull_SolderThicknessAvg = 1 AND [SolderThicknessAvg] IS NULL) OR ([SolderThic"& _ 
                "knessAvg] = @Original_SolderThicknessAvg)) AND ((@IsNull_SolderThicknessR = 1 AN"& _ 
                "D [SolderThicknessR] IS NULL) OR ([SolderThicknessR] = @Original_SolderThickness"& _ 
                "R)) AND ((@IsNull_QCFirstLotMode = 1 AND [QCFirstLotMode] IS NULL) OR ([QCFirstL"& _ 
                "otMode] = @Original_QCFirstLotMode)) AND ((@IsNull_QCFirstLotAdjust = 1 AND [QCF"& _ 
                "irstLotAdjust] IS NULL) OR ([QCFirstLotAdjust] = @Original_QCFirstLotAdjust)) AN"& _ 
                "D ((@IsNull_QCFinishLotMode = 1 AND [QCFinishLotMode] IS NULL) OR ([QCFinishLotM"& _ 
                "ode] = @Original_QCFinishLotMode)) AND ((@IsNull_QCFinishLotAdjust = 1 AND [QCFi"& _ 
                "nishLotAdjust] IS NULL) OR ([QCFinishLotAdjust] = @Original_QCFinishLotAdjust)) "& _ 
                "AND ((@IsNull_QCMiddleLotAb = 1 AND [QCMiddleLotAb] IS NULL) OR ([QCMiddleLotAb]"& _ 
                " = @Original_QCMiddleLotAb)) AND ((@IsNull_QCMiddleLotAdjust = 1 AND [QCMiddleLo"& _ 
                "tAdjust] IS NULL) OR ([QCMiddleLotAdjust] = @Original_QCMiddleLotAdjust)) AND (("& _ 
                "@IsNull_MiddleLotJudgement = 1 AND [MiddleLotJudgement] IS NULL) OR ([MiddleLotJ"& _ 
                "udgement] = @Original_MiddleLotJudgement)) AND ((@IsNull_QCFirstLotAb = 1 AND [Q"& _ 
                "CFirstLotAb] IS NULL) OR ([QCFirstLotAb] = @Original_QCFirstLotAb)) AND ((@IsNul"& _ 
                "l_QCFinishLotAb = 1 AND [QCFinishLotAb] IS NULL) OR ([QCFinishLotAb] = @Original"& _ 
                "_QCFinishLotAb)) AND ((@IsNull_LotJudgement = 1 AND [LotJudgement] IS NULL) OR ("& _ 
                "[LotJudgement] = @Original_LotJudgement)) AND ((@IsNull_OPCheck = 1 AND [OPCheck"& _ 
                "] IS NULL) OR ([OPCheck] = @Original_OPCheck)) AND ((@IsNull_Remark = 1 AND [Rem"& _ 
                "ark] IS NULL) OR ([Remark] = @Original_Remark)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotStartTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotStartTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MCType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MCType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InputQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InputQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGood", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGood", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPRate", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaximumRPM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaximumRPM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaximumRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaximumRPM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AverageRPM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageRPM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AverageRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageRPM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MTBF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTBF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MTBF", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTBF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MTTR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MTTR", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmTotal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTotal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmTotal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTotal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotEndTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotEndTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotEndTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotEndTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RunTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RunTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StopTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StopTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SelfConVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SelfConVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NoChipQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoChipQTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NoChipQTY", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoChipQTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BrideNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrideNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BrideNG", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrideNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PickupNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PickupNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PickupNG", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PickupNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ColletCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ColletCount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ColletCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ColletCount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ImpQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImpQTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ImpQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImpQTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotQTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotQTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotCNT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotCNT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotCNT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotCNT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotGood", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotGood", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotPFNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotPFNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotPFNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotPFNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BrideNGMC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrideNGMC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BrideNGMC", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrideNGMC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CancelPcs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CancelPcs", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CancelPcs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CancelPcs", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CPDispo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CPDispo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CPDispo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CPDispo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ZeroCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZeroCount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ZeroCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZeroCount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ZeroEnd", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZeroEnd", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ZeroEnd", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZeroEnd", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FrameFirstLot", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FrameFirstLot", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FrameFirstLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FrameFirstLot", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FrameSecondLot", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FrameSecondLot", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FrameSecondLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FrameSecondLot", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreformType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreformType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreformFirstLot", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformFirstLot", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreformFirstLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformFirstLot", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreformSecondLot", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformSecondLot", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreformSecondLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformSecondLot", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreformFirstLiftTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformFirstLiftTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreformFirstLiftTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformFirstLiftTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreformSecondLiftTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformSecondLiftTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreformSecondLiftTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformSecondLiftTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmPickUp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPickUp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmPickUp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPickUp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmPreform", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPreform", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmPreform", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPreform", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmBonder", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmBonder", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmBonder", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmBonder", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmFrameOut", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmFrameOut", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmFrameOut", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmFrameOut", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmBridgeInsp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmBridgeInsp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmBridgeInsp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmBridgeInsp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmPreformInsp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPreformInsp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmPreformInsp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPreformInsp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RubberColletNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RubberColletNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RubberColletNo", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RubberColletNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OperateContinue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperateContinue", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OperateContinue", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperateContinue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RubberCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RubberCheck", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RubberCheck", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RubberCheck", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Chipsize1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chipsize1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Chipsize1", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chipsize1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Chipsize2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chipsize2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Chipsize2", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chipsize2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BoundingContinue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BoundingContinue", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BoundingContinue", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BoundingContinue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ColletCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ColletCheck", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ColletCheck", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ColletCheck", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PasteNozzleType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PasteNozzleType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PasteNozzleType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PasteNozzleType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PateNozzleNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PateNozzleNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PateNozzleNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PateNozzleNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PasteNozzleCond", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PasteNozzleCond", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PasteNozzleCond", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PasteNozzleCond", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TsukaigeNeedNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TsukaigeNeedNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TsukaigeNeedNo", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TsukaigeNeedNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TsukaigeCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TsukaigeCheck", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TsukaigeCheck", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TsukaigeCheck", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SolderThickness1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SolderThickness1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SolderThickness2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SolderThickness2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SolderThickness3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SolderThickness3", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SolderThickness4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SolderThickness4", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SolderThicknessAvg", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThicknessAvg", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SolderThicknessAvg", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThicknessAvg", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SolderThicknessR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThicknessR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SolderThicknessR", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThicknessR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCFirstLotMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotMode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCFirstLotMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotMode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCFirstLotAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotAdjust", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCFirstLotAdjust", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotAdjust", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCFinishLotMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotMode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCFinishLotMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotMode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCFinishLotAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotAdjust", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCFinishLotAdjust", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotAdjust", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCMiddleLotAb", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCMiddleLotAb", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCMiddleLotAb", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCMiddleLotAb", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCMiddleLotAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCMiddleLotAdjust", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCMiddleLotAdjust", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCMiddleLotAdjust", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MiddleLotJudgement", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleLotJudgement", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MiddleLotJudgement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleLotJudgement", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCFirstLotAb", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotAb", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCFirstLotAb", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotAb", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCFinishLotAb", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotAb", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCFinishLotAb", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotAb", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotJudgement", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudgement", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotJudgement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudgement", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPCheck", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPCheck", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPCheck", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remark", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[DBData] ([MCNo], [LotNo], [LotStartTime], [MCType], [OPNo], [I"& _ 
                "nputQty], [TotalGood], [TotalNG], [OPRate], [MaximumRPM], [AverageRPM], [MTBF], "& _ 
                "[MTTR], [AlarmTotal], [LotEndTime], [RunTime], [StopTime], [AlarmTime], [SelfCon"& _ 
                "Version], [NetVersion], [NoChipQTY], [BrideNG], [PickupNG], [ColletCount], [ImpQ"& _ 
                "TY], [LotQTY], [LotCNT], [LotGood], [LotNG], [LotPFNG], [BrideNGMC], [CancelPcs]"& _ 
                ", [CPDispo], [ZeroCount], [ZeroEnd], [FrameFirstLot], [FrameSecondLot], [Preform"& _ 
                "Type], [PreformFirstLot], [PreformSecondLot], [PreformFirstLiftTime], [PreformSe"& _ 
                "condLiftTime], [AlarmPickUp], [AlarmPreform], [AlarmBonder], [AlarmFrameOut], [A"& _ 
                "larmBridgeInsp], [AlarmPreformInsp], [RubberColletNo], [OperateContinue], [Rubbe"& _ 
                "rCheck], [Chipsize1], [Chipsize2], [BoundingContinue], [ColletCheck], [PasteNozz"& _ 
                "leType], [PateNozzleNo], [PasteNozzleCond], [TsukaigeNeedNo], [TsukaigeCheck], ["& _ 
                "SolderThickness1], [SolderThickness2], [SolderThickness3], [SolderThickness4], ["& _ 
                "SolderThicknessAvg], [SolderThicknessR], [QCFirstLotMode], [QCFirstLotAdjust], ["& _ 
                "QCFinishLotMode], [QCFinishLotAdjust], [QCMiddleLotAb], [QCMiddleLotAdjust], [Mi"& _ 
                "ddleLotJudgement], [QCFirstLotAb], [QCFinishLotAb], [LotJudgement], [OPCheck], ["& _ 
                "Remark]) VALUES (@MCNo, @LotNo, @LotStartTime, @MCType, @OPNo, @InputQty, @Total"& _ 
                "Good, @TotalNG, @OPRate, @MaximumRPM, @AverageRPM, @MTBF, @MTTR, @AlarmTotal, @L"& _ 
                "otEndTime, @RunTime, @StopTime, @AlarmTime, @SelfConVersion, @NetVersion, @NoChi"& _ 
                "pQTY, @BrideNG, @PickupNG, @ColletCount, @ImpQTY, @LotQTY, @LotCNT, @LotGood, @L"& _ 
                "otNG, @LotPFNG, @BrideNGMC, @CancelPcs, @CPDispo, @ZeroCount, @ZeroEnd, @FrameFi"& _ 
                "rstLot, @FrameSecondLot, @PreformType, @PreformFirstLot, @PreformSecondLot, @Pre"& _ 
                "formFirstLiftTime, @PreformSecondLiftTime, @AlarmPickUp, @AlarmPreform, @AlarmBo"& _ 
                "nder, @AlarmFrameOut, @AlarmBridgeInsp, @AlarmPreformInsp, @RubberColletNo, @Ope"& _ 
                "rateContinue, @RubberCheck, @Chipsize1, @Chipsize2, @BoundingContinue, @ColletCh"& _ 
                "eck, @PasteNozzleType, @PateNozzleNo, @PasteNozzleCond, @TsukaigeNeedNo, @Tsukai"& _ 
                "geCheck, @SolderThickness1, @SolderThickness2, @SolderThickness3, @SolderThickne"& _ 
                "ss4, @SolderThicknessAvg, @SolderThicknessR, @QCFirstLotMode, @QCFirstLotAdjust,"& _ 
                " @QCFinishLotMode, @QCFinishLotAdjust, @QCMiddleLotAb, @QCMiddleLotAdjust, @Midd"& _ 
                "leLotJudgement, @QCFirstLotAb, @QCFinishLotAb, @LotJudgement, @OPCheck, @Remark)"& _ 
                ";"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT MCNo, LotNo, LotStartTime, MCType, OPNo, InputQty, TotalGood, TotalNG,"& _ 
                " OPRate, MaximumRPM, AverageRPM, MTBF, MTTR, AlarmTotal, LotEndTime, RunTime, St"& _ 
                "opTime, AlarmTime, SelfConVersion, NetVersion, NoChipQTY, BrideNG, PickupNG, Col"& _ 
                "letCount, ImpQTY, LotQTY, LotCNT, LotGood, LotNG, LotPFNG, BrideNGMC, CancelPcs,"& _ 
                " CPDispo, ZeroCount, ZeroEnd, FrameFirstLot, FrameSecondLot, PreformType, Prefor"& _ 
                "mFirstLot, PreformSecondLot, PreformFirstLiftTime, PreformSecondLiftTime, AlarmP"& _ 
                "ickUp, AlarmPreform, AlarmBonder, AlarmFrameOut, AlarmBridgeInsp, AlarmPreformIn"& _ 
                "sp, RubberColletNo, OperateContinue, RubberCheck, Chipsize1, Chipsize2, Bounding"& _ 
                "Continue, ColletCheck, PasteNozzleType, PateNozzleNo, PasteNozzleCond, TsukaigeN"& _ 
                "eedNo, TsukaigeCheck, SolderThickness1, SolderThickness2, SolderThickness3, Sold"& _ 
                "erThickness4, SolderThicknessAvg, SolderThicknessR, QCFirstLotMode, QCFirstLotAd"& _ 
                "just, QCFinishLotMode, QCFinishLotAdjust, QCMiddleLotAb, QCMiddleLotAdjust, Midd"& _ 
                "leLotJudgement, QCFirstLotAb, QCFinishLotAb, LotJudgement, OPCheck, Remark FROM "& _ 
                "DBData WHERE (LotNo = @LotNo) AND (LotStartTime = @LotStartTime) AND (MCNo = @MC"& _ 
                "No)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotStartTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotStartTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MCType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InputQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGood", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPRate", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaximumRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaximumRPM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AverageRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageRPM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTBF", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTBF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTTR", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmTotal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotEndTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotEndTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RunTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StopTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SelfConVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoChipQTY", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoChipQTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BrideNG", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrideNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PickupNG", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PickupNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ColletCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ColletCount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ImpQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImpQTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotQTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotCNT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotCNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotGood", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotPFNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotPFNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BrideNGMC", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrideNGMC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CancelPcs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CancelPcs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CPDispo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CPDispo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZeroCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZeroCount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZeroEnd", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZeroEnd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FrameFirstLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FrameFirstLot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FrameSecondLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FrameSecondLot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreformType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreformFirstLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformFirstLot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreformSecondLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformSecondLot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreformFirstLiftTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformFirstLiftTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreformSecondLiftTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformSecondLiftTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmPickUp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPickUp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmPreform", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPreform", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmBonder", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmBonder", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmFrameOut", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmFrameOut", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmBridgeInsp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmBridgeInsp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmPreformInsp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPreformInsp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RubberColletNo", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RubberColletNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperateContinue", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperateContinue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RubberCheck", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RubberCheck", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Chipsize1", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chipsize1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Chipsize2", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chipsize2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BoundingContinue", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BoundingContinue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ColletCheck", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ColletCheck", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PasteNozzleType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PasteNozzleType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PateNozzleNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PateNozzleNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PasteNozzleCond", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PasteNozzleCond", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TsukaigeNeedNo", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TsukaigeNeedNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TsukaigeCheck", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TsukaigeCheck", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SolderThickness1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SolderThickness2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SolderThickness3", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SolderThickness4", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SolderThicknessAvg", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThicknessAvg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SolderThicknessR", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThicknessR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCFirstLotMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotMode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCFirstLotAdjust", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotAdjust", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCFinishLotMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotMode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCFinishLotAdjust", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotAdjust", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCMiddleLotAb", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCMiddleLotAb", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCMiddleLotAdjust", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCMiddleLotAdjust", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MiddleLotJudgement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleLotJudgement", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCFirstLotAb", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotAb", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCFinishLotAb", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotAb", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotJudgement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudgement", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPCheck", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPCheck", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[DBData] SET [MCNo] = @MCNo, [LotNo] = @LotNo, [LotStartTime] = @Lot"& _ 
                "StartTime, [MCType] = @MCType, [OPNo] = @OPNo, [InputQty] = @InputQty, [TotalGoo"& _ 
                "d] = @TotalGood, [TotalNG] = @TotalNG, [OPRate] = @OPRate, [MaximumRPM] = @Maxim"& _ 
                "umRPM, [AverageRPM] = @AverageRPM, [MTBF] = @MTBF, [MTTR] = @MTTR, [AlarmTotal] "& _ 
                "= @AlarmTotal, [LotEndTime] = @LotEndTime, [RunTime] = @RunTime, [StopTime] = @S"& _ 
                "topTime, [AlarmTime] = @AlarmTime, [SelfConVersion] = @SelfConVersion, [NetVersi"& _ 
                "on] = @NetVersion, [NoChipQTY] = @NoChipQTY, [BrideNG] = @BrideNG, [PickupNG] = "& _ 
                "@PickupNG, [ColletCount] = @ColletCount, [ImpQTY] = @ImpQTY, [LotQTY] = @LotQTY,"& _ 
                " [LotCNT] = @LotCNT, [LotGood] = @LotGood, [LotNG] = @LotNG, [LotPFNG] = @LotPFN"& _ 
                "G, [BrideNGMC] = @BrideNGMC, [CancelPcs] = @CancelPcs, [CPDispo] = @CPDispo, [Ze"& _ 
                "roCount] = @ZeroCount, [ZeroEnd] = @ZeroEnd, [FrameFirstLot] = @FrameFirstLot, ["& _ 
                "FrameSecondLot] = @FrameSecondLot, [PreformType] = @PreformType, [PreformFirstLo"& _ 
                "t] = @PreformFirstLot, [PreformSecondLot] = @PreformSecondLot, [PreformFirstLift"& _ 
                "Time] = @PreformFirstLiftTime, [PreformSecondLiftTime] = @PreformSecondLiftTime,"& _ 
                " [AlarmPickUp] = @AlarmPickUp, [AlarmPreform] = @AlarmPreform, [AlarmBonder] = @"& _ 
                "AlarmBonder, [AlarmFrameOut] = @AlarmFrameOut, [AlarmBridgeInsp] = @AlarmBridgeI"& _ 
                "nsp, [AlarmPreformInsp] = @AlarmPreformInsp, [RubberColletNo] = @RubberColletNo,"& _ 
                " [OperateContinue] = @OperateContinue, [RubberCheck] = @RubberCheck, [Chipsize1]"& _ 
                " = @Chipsize1, [Chipsize2] = @Chipsize2, [BoundingContinue] = @BoundingContinue,"& _ 
                " [ColletCheck] = @ColletCheck, [PasteNozzleType] = @PasteNozzleType, [PateNozzle"& _ 
                "No] = @PateNozzleNo, [PasteNozzleCond] = @PasteNozzleCond, [TsukaigeNeedNo] = @T"& _ 
                "sukaigeNeedNo, [TsukaigeCheck] = @TsukaigeCheck, [SolderThickness1] = @SolderThi"& _ 
                "ckness1, [SolderThickness2] = @SolderThickness2, [SolderThickness3] = @SolderThi"& _ 
                "ckness3, [SolderThickness4] = @SolderThickness4, [SolderThicknessAvg] = @SolderT"& _ 
                "hicknessAvg, [SolderThicknessR] = @SolderThicknessR, [QCFirstLotMode] = @QCFirst"& _ 
                "LotMode, [QCFirstLotAdjust] = @QCFirstLotAdjust, [QCFinishLotMode] = @QCFinishLo"& _ 
                "tMode, [QCFinishLotAdjust] = @QCFinishLotAdjust, [QCMiddleLotAb] = @QCMiddleLotA"& _ 
                "b, [QCMiddleLotAdjust] = @QCMiddleLotAdjust, [MiddleLotJudgement] = @MiddleLotJu"& _ 
                "dgement, [QCFirstLotAb] = @QCFirstLotAb, [QCFinishLotAb] = @QCFinishLotAb, [LotJ"& _ 
                "udgement] = @LotJudgement, [OPCheck] = @OPCheck, [Remark] = @Remark WHERE (([MCN"& _ 
                "o] = @Original_MCNo) AND ([LotNo] = @Original_LotNo) AND ([LotStartTime] = @Orig"& _ 
                "inal_LotStartTime) AND ((@IsNull_MCType = 1 AND [MCType] IS NULL) OR ([MCType] ="& _ 
                " @Original_MCType)) AND ((@IsNull_OPNo = 1 AND [OPNo] IS NULL) OR ([OPNo] = @Ori"& _ 
                "ginal_OPNo)) AND ((@IsNull_InputQty = 1 AND [InputQty] IS NULL) OR ([InputQty] ="& _ 
                " @Original_InputQty)) AND ((@IsNull_TotalGood = 1 AND [TotalGood] IS NULL) OR (["& _ 
                "TotalGood] = @Original_TotalGood)) AND ((@IsNull_TotalNG = 1 AND [TotalNG] IS NU"& _ 
                "LL) OR ([TotalNG] = @Original_TotalNG)) AND ((@IsNull_OPRate = 1 AND [OPRate] IS"& _ 
                " NULL) OR ([OPRate] = @Original_OPRate)) AND ((@IsNull_MaximumRPM = 1 AND [Maxim"& _ 
                "umRPM] IS NULL) OR ([MaximumRPM] = @Original_MaximumRPM)) AND ((@IsNull_AverageR"& _ 
                "PM = 1 AND [AverageRPM] IS NULL) OR ([AverageRPM] = @Original_AverageRPM)) AND ("& _ 
                "(@IsNull_MTBF = 1 AND [MTBF] IS NULL) OR ([MTBF] = @Original_MTBF)) AND ((@IsNul"& _ 
                "l_MTTR = 1 AND [MTTR] IS NULL) OR ([MTTR] = @Original_MTTR)) AND ((@IsNull_Alarm"& _ 
                "Total = 1 AND [AlarmTotal] IS NULL) OR ([AlarmTotal] = @Original_AlarmTotal)) AN"& _ 
                "D ((@IsNull_LotEndTime = 1 AND [LotEndTime] IS NULL) OR ([LotEndTime] = @Origina"& _ 
                "l_LotEndTime)) AND ((@IsNull_RunTime = 1 AND [RunTime] IS NULL) OR ([RunTime] = "& _ 
                "@Original_RunTime)) AND ((@IsNull_StopTime = 1 AND [StopTime] IS NULL) OR ([Stop"& _ 
                "Time] = @Original_StopTime)) AND ((@IsNull_AlarmTime = 1 AND [AlarmTime] IS NULL"& _ 
                ") OR ([AlarmTime] = @Original_AlarmTime)) AND ((@IsNull_SelfConVersion = 1 AND ["& _ 
                "SelfConVersion] IS NULL) OR ([SelfConVersion] = @Original_SelfConVersion)) AND ("& _ 
                "(@IsNull_NetVersion = 1 AND [NetVersion] IS NULL) OR ([NetVersion] = @Original_N"& _ 
                "etVersion)) AND ((@IsNull_NoChipQTY = 1 AND [NoChipQTY] IS NULL) OR ([NoChipQTY]"& _ 
                " = @Original_NoChipQTY)) AND ((@IsNull_BrideNG = 1 AND [BrideNG] IS NULL) OR ([B"& _ 
                "rideNG] = @Original_BrideNG)) AND ((@IsNull_PickupNG = 1 AND [PickupNG] IS NULL)"& _ 
                " OR ([PickupNG] = @Original_PickupNG)) AND ((@IsNull_ColletCount = 1 AND [Collet"& _ 
                "Count] IS NULL) OR ([ColletCount] = @Original_ColletCount)) AND ((@IsNull_ImpQTY"& _ 
                " = 1 AND [ImpQTY] IS NULL) OR ([ImpQTY] = @Original_ImpQTY)) AND ((@IsNull_LotQT"& _ 
                "Y = 1 AND [LotQTY] IS NULL) OR ([LotQTY] = @Original_LotQTY)) AND ((@IsNull_LotC"& _ 
                "NT = 1 AND [LotCNT] IS NULL) OR ([LotCNT] = @Original_LotCNT)) AND ((@IsNull_Lot"& _ 
                "Good = 1 AND [LotGood] IS NULL) OR ([LotGood] = @Original_LotGood)) AND ((@IsNul"& _ 
                "l_LotNG = 1 AND [LotNG] IS NULL) OR ([LotNG] = @Original_LotNG)) AND ((@IsNull_L"& _ 
                "otPFNG = 1 AND [LotPFNG] IS NULL) OR ([LotPFNG] = @Original_LotPFNG)) AND ((@IsN"& _ 
                "ull_BrideNGMC = 1 AND [BrideNGMC] IS NULL) OR ([BrideNGMC] = @Original_BrideNGMC"& _ 
                ")) AND ((@IsNull_CancelPcs = 1 AND [CancelPcs] IS NULL) OR ([CancelPcs] = @Origi"& _ 
                "nal_CancelPcs)) AND ((@IsNull_CPDispo = 1 AND [CPDispo] IS NULL) OR ([CPDispo] ="& _ 
                " @Original_CPDispo)) AND ((@IsNull_ZeroCount = 1 AND [ZeroCount] IS NULL) OR ([Z"& _ 
                "eroCount] = @Original_ZeroCount)) AND ((@IsNull_ZeroEnd = 1 AND [ZeroEnd] IS NUL"& _ 
                "L) OR ([ZeroEnd] = @Original_ZeroEnd)) AND ((@IsNull_FrameFirstLot = 1 AND [Fram"& _ 
                "eFirstLot] IS NULL) OR ([FrameFirstLot] = @Original_FrameFirstLot)) AND ((@IsNul"& _ 
                "l_FrameSecondLot = 1 AND [FrameSecondLot] IS NULL) OR ([FrameSecondLot] = @Origi"& _ 
                "nal_FrameSecondLot)) AND ((@IsNull_PreformType = 1 AND [PreformType] IS NULL) OR"& _ 
                " ([PreformType] = @Original_PreformType)) AND ((@IsNull_PreformFirstLot = 1 AND "& _ 
                "[PreformFirstLot] IS NULL) OR ([PreformFirstLot] = @Original_PreformFirstLot)) A"& _ 
                "ND ((@IsNull_PreformSecondLot = 1 AND [PreformSecondLot] IS NULL) OR ([PreformSe"& _ 
                "condLot] = @Original_PreformSecondLot)) AND ((@IsNull_PreformFirstLiftTime = 1 A"& _ 
                "ND [PreformFirstLiftTime] IS NULL) OR ([PreformFirstLiftTime] = @Original_Prefor"& _ 
                "mFirstLiftTime)) AND ((@IsNull_PreformSecondLiftTime = 1 AND [PreformSecondLiftT"& _ 
                "ime] IS NULL) OR ([PreformSecondLiftTime] = @Original_PreformSecondLiftTime)) AN"& _ 
                "D ((@IsNull_AlarmPickUp = 1 AND [AlarmPickUp] IS NULL) OR ([AlarmPickUp] = @Orig"& _ 
                "inal_AlarmPickUp)) AND ((@IsNull_AlarmPreform = 1 AND [AlarmPreform] IS NULL) OR"& _ 
                " ([AlarmPreform] = @Original_AlarmPreform)) AND ((@IsNull_AlarmBonder = 1 AND [A"& _ 
                "larmBonder] IS NULL) OR ([AlarmBonder] = @Original_AlarmBonder)) AND ((@IsNull_A"& _ 
                "larmFrameOut = 1 AND [AlarmFrameOut] IS NULL) OR ([AlarmFrameOut] = @Original_Al"& _ 
                "armFrameOut)) AND ((@IsNull_AlarmBridgeInsp = 1 AND [AlarmBridgeInsp] IS NULL) O"& _ 
                "R ([AlarmBridgeInsp] = @Original_AlarmBridgeInsp)) AND ((@IsNull_AlarmPreformIns"& _ 
                "p = 1 AND [AlarmPreformInsp] IS NULL) OR ([AlarmPreformInsp] = @Original_AlarmPr"& _ 
                "eformInsp)) AND ((@IsNull_RubberColletNo = 1 AND [RubberColletNo] IS NULL) OR (["& _ 
                "RubberColletNo] = @Original_RubberColletNo)) AND ((@IsNull_OperateContinue = 1 A"& _ 
                "ND [OperateContinue] IS NULL) OR ([OperateContinue] = @Original_OperateContinue)"& _ 
                ") AND ((@IsNull_RubberCheck = 1 AND [RubberCheck] IS NULL) OR ([RubberCheck] = @"& _ 
                "Original_RubberCheck)) AND ((@IsNull_Chipsize1 = 1 AND [Chipsize1] IS NULL) OR ("& _ 
                "[Chipsize1] = @Original_Chipsize1)) AND ((@IsNull_Chipsize2 = 1 AND [Chipsize2] "& _ 
                "IS NULL) OR ([Chipsize2] = @Original_Chipsize2)) AND ((@IsNull_BoundingContinue "& _ 
                "= 1 AND [BoundingContinue] IS NULL) OR ([BoundingContinue] = @Original_BoundingC"& _ 
                "ontinue)) AND ((@IsNull_ColletCheck = 1 AND [ColletCheck] IS NULL) OR ([ColletCh"& _ 
                "eck] = @Original_ColletCheck)) AND ((@IsNull_PasteNozzleType = 1 AND [PasteNozzl"& _ 
                "eType] IS NULL) OR ([PasteNozzleType] = @Original_PasteNozzleType)) AND ((@IsNul"& _ 
                "l_PateNozzleNo = 1 AND [PateNozzleNo] IS NULL) OR ([PateNozzleNo] = @Original_Pa"& _ 
                "teNozzleNo)) AND ((@IsNull_PasteNozzleCond = 1 AND [PasteNozzleCond] IS NULL) OR"& _ 
                " ([PasteNozzleCond] = @Original_PasteNozzleCond)) AND ((@IsNull_TsukaigeNeedNo ="& _ 
                " 1 AND [TsukaigeNeedNo] IS NULL) OR ([TsukaigeNeedNo] = @Original_TsukaigeNeedNo"& _ 
                ")) AND ((@IsNull_TsukaigeCheck = 1 AND [TsukaigeCheck] IS NULL) OR ([TsukaigeChe"& _ 
                "ck] = @Original_TsukaigeCheck)) AND ((@IsNull_SolderThickness1 = 1 AND [SolderTh"& _ 
                "ickness1] IS NULL) OR ([SolderThickness1] = @Original_SolderThickness1)) AND ((@"& _ 
                "IsNull_SolderThickness2 = 1 AND [SolderThickness2] IS NULL) OR ([SolderThickness"& _ 
                "2] = @Original_SolderThickness2)) AND ((@IsNull_SolderThickness3 = 1 AND [Solder"& _ 
                "Thickness3] IS NULL) OR ([SolderThickness3] = @Original_SolderThickness3)) AND ("& _ 
                "(@IsNull_SolderThickness4 = 1 AND [SolderThickness4] IS NULL) OR ([SolderThickne"& _ 
                "ss4] = @Original_SolderThickness4)) AND ((@IsNull_SolderThicknessAvg = 1 AND [So"& _ 
                "lderThicknessAvg] IS NULL) OR ([SolderThicknessAvg] = @Original_SolderThicknessA"& _ 
                "vg)) AND ((@IsNull_SolderThicknessR = 1 AND [SolderThicknessR] IS NULL) OR ([Sol"& _ 
                "derThicknessR] = @Original_SolderThicknessR)) AND ((@IsNull_QCFirstLotMode = 1 A"& _ 
                "ND [QCFirstLotMode] IS NULL) OR ([QCFirstLotMode] = @Original_QCFirstLotMode)) A"& _ 
                "ND ((@IsNull_QCFirstLotAdjust = 1 AND [QCFirstLotAdjust] IS NULL) OR ([QCFirstLo"& _ 
                "tAdjust] = @Original_QCFirstLotAdjust)) AND ((@IsNull_QCFinishLotMode = 1 AND [Q"& _ 
                "CFinishLotMode] IS NULL) OR ([QCFinishLotMode] = @Original_QCFinishLotMode)) AND"& _ 
                " ((@IsNull_QCFinishLotAdjust = 1 AND [QCFinishLotAdjust] IS NULL) OR ([QCFinishL"& _ 
                "otAdjust] = @Original_QCFinishLotAdjust)) AND ((@IsNull_QCMiddleLotAb = 1 AND [Q"& _ 
                "CMiddleLotAb] IS NULL) OR ([QCMiddleLotAb] = @Original_QCMiddleLotAb)) AND ((@Is"& _ 
                "Null_QCMiddleLotAdjust = 1 AND [QCMiddleLotAdjust] IS NULL) OR ([QCMiddleLotAdju"& _ 
                "st] = @Original_QCMiddleLotAdjust)) AND ((@IsNull_MiddleLotJudgement = 1 AND [Mi"& _ 
                "ddleLotJudgement] IS NULL) OR ([MiddleLotJudgement] = @Original_MiddleLotJudgeme"& _ 
                "nt)) AND ((@IsNull_QCFirstLotAb = 1 AND [QCFirstLotAb] IS NULL) OR ([QCFirstLotA"& _ 
                "b] = @Original_QCFirstLotAb)) AND ((@IsNull_QCFinishLotAb = 1 AND [QCFinishLotAb"& _ 
                "] IS NULL) OR ([QCFinishLotAb] = @Original_QCFinishLotAb)) AND ((@IsNull_LotJudg"& _ 
                "ement = 1 AND [LotJudgement] IS NULL) OR ([LotJudgement] = @Original_LotJudgemen"& _ 
                "t)) AND ((@IsNull_OPCheck = 1 AND [OPCheck] IS NULL) OR ([OPCheck] = @Original_O"& _ 
                "PCheck)) AND ((@IsNull_Remark = 1 AND [Remark] IS NULL) OR ([Remark] = @Original"& _ 
                "_Remark)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT MCNo, LotNo, LotStartTime, MCType, OPNo, InputQty, TotalGood"& _ 
                ", TotalNG, OPRate, MaximumRPM, AverageRPM, MTBF, MTTR, AlarmTotal, LotEndTime, R"& _ 
                "unTime, StopTime, AlarmTime, SelfConVersion, NetVersion, NoChipQTY, BrideNG, Pic"& _ 
                "kupNG, ColletCount, ImpQTY, LotQTY, LotCNT, LotGood, LotNG, LotPFNG, BrideNGMC, "& _ 
                "CancelPcs, CPDispo, ZeroCount, ZeroEnd, FrameFirstLot, FrameSecondLot, PreformTy"& _ 
                "pe, PreformFirstLot, PreformSecondLot, PreformFirstLiftTime, PreformSecondLiftTi"& _ 
                "me, AlarmPickUp, AlarmPreform, AlarmBonder, AlarmFrameOut, AlarmBridgeInsp, Alar"& _ 
                "mPreformInsp, RubberColletNo, OperateContinue, RubberCheck, Chipsize1, Chipsize2"& _ 
                ", BoundingContinue, ColletCheck, PasteNozzleType, PateNozzleNo, PasteNozzleCond,"& _ 
                " TsukaigeNeedNo, TsukaigeCheck, SolderThickness1, SolderThickness2, SolderThickn"& _ 
                "ess3, SolderThickness4, SolderThicknessAvg, SolderThicknessR, QCFirstLotMode, QC"& _ 
                "FirstLotAdjust, QCFinishLotMode, QCFinishLotAdjust, QCMiddleLotAb, QCMiddleLotAd"& _ 
                "just, MiddleLotJudgement, QCFirstLotAb, QCFinishLotAb, LotJudgement, OPCheck, Re"& _ 
                "mark FROM DBData WHERE (LotNo = @LotNo) AND (LotStartTime = @LotStartTime) AND ("& _ 
                "MCNo = @MCNo)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotStartTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotStartTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MCType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InputQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGood", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPRate", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaximumRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaximumRPM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AverageRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageRPM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTBF", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTBF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTTR", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmTotal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotEndTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotEndTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RunTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StopTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SelfConVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoChipQTY", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoChipQTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BrideNG", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrideNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PickupNG", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PickupNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ColletCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ColletCount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ImpQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImpQTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotQTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotCNT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotCNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotGood", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotPFNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotPFNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BrideNGMC", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrideNGMC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CancelPcs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CancelPcs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CPDispo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CPDispo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZeroCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZeroCount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZeroEnd", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZeroEnd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FrameFirstLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FrameFirstLot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FrameSecondLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FrameSecondLot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreformType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreformFirstLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformFirstLot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreformSecondLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformSecondLot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreformFirstLiftTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformFirstLiftTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreformSecondLiftTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformSecondLiftTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmPickUp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPickUp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmPreform", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPreform", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmBonder", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmBonder", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmFrameOut", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmFrameOut", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmBridgeInsp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmBridgeInsp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmPreformInsp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPreformInsp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RubberColletNo", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RubberColletNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperateContinue", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperateContinue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RubberCheck", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RubberCheck", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Chipsize1", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chipsize1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Chipsize2", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chipsize2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BoundingContinue", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BoundingContinue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ColletCheck", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ColletCheck", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PasteNozzleType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PasteNozzleType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PateNozzleNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PateNozzleNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PasteNozzleCond", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PasteNozzleCond", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TsukaigeNeedNo", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TsukaigeNeedNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TsukaigeCheck", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TsukaigeCheck", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SolderThickness1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SolderThickness2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SolderThickness3", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SolderThickness4", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SolderThicknessAvg", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThicknessAvg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SolderThicknessR", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThicknessR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCFirstLotMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotMode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCFirstLotAdjust", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotAdjust", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCFinishLotMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotMode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCFinishLotAdjust", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotAdjust", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCMiddleLotAb", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCMiddleLotAb", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCMiddleLotAdjust", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCMiddleLotAdjust", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MiddleLotJudgement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleLotJudgement", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCFirstLotAb", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotAb", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QCFinishLotAb", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotAb", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotJudgement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudgement", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPCheck", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPCheck", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotStartTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotStartTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MCType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MCType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InputQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InputQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGood", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGood", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPRate", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaximumRPM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaximumRPM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaximumRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaximumRPM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AverageRPM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageRPM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AverageRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageRPM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MTBF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTBF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MTBF", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTBF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MTTR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MTTR", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmTotal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTotal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmTotal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTotal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotEndTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotEndTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotEndTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotEndTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RunTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RunTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StopTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StopTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SelfConVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SelfConVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NoChipQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoChipQTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NoChipQTY", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoChipQTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BrideNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrideNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BrideNG", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrideNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PickupNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PickupNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PickupNG", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PickupNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ColletCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ColletCount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ColletCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ColletCount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ImpQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImpQTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ImpQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImpQTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotQTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotQTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotCNT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotCNT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotCNT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotCNT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotGood", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotGood", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotPFNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotPFNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotPFNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotPFNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BrideNGMC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrideNGMC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BrideNGMC", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrideNGMC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CancelPcs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CancelPcs", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CancelPcs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CancelPcs", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CPDispo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CPDispo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CPDispo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CPDispo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ZeroCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZeroCount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ZeroCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZeroCount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ZeroEnd", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZeroEnd", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ZeroEnd", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZeroEnd", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FrameFirstLot", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FrameFirstLot", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FrameFirstLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FrameFirstLot", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FrameSecondLot", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FrameSecondLot", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FrameSecondLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FrameSecondLot", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreformType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreformType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreformFirstLot", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformFirstLot", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreformFirstLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformFirstLot", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreformSecondLot", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformSecondLot", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreformSecondLot", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformSecondLot", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreformFirstLiftTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformFirstLiftTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreformFirstLiftTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformFirstLiftTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreformSecondLiftTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformSecondLiftTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreformSecondLiftTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreformSecondLiftTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmPickUp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPickUp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmPickUp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPickUp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmPreform", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPreform", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmPreform", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPreform", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmBonder", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmBonder", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmBonder", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmBonder", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmFrameOut", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmFrameOut", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmFrameOut", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmFrameOut", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmBridgeInsp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmBridgeInsp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmBridgeInsp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmBridgeInsp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmPreformInsp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPreformInsp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmPreformInsp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmPreformInsp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RubberColletNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RubberColletNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RubberColletNo", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RubberColletNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OperateContinue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperateContinue", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OperateContinue", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperateContinue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RubberCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RubberCheck", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RubberCheck", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RubberCheck", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Chipsize1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chipsize1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Chipsize1", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chipsize1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Chipsize2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chipsize2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Chipsize2", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chipsize2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BoundingContinue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BoundingContinue", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BoundingContinue", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BoundingContinue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ColletCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ColletCheck", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ColletCheck", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ColletCheck", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PasteNozzleType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PasteNozzleType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PasteNozzleType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PasteNozzleType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PateNozzleNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PateNozzleNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PateNozzleNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PateNozzleNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PasteNozzleCond", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PasteNozzleCond", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PasteNozzleCond", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PasteNozzleCond", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TsukaigeNeedNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TsukaigeNeedNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TsukaigeNeedNo", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TsukaigeNeedNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TsukaigeCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TsukaigeCheck", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TsukaigeCheck", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TsukaigeCheck", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SolderThickness1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SolderThickness1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SolderThickness2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SolderThickness2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SolderThickness3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SolderThickness3", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SolderThickness4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SolderThickness4", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThickness4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SolderThicknessAvg", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThicknessAvg", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SolderThicknessAvg", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThicknessAvg", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SolderThicknessR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThicknessR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SolderThicknessR", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SolderThicknessR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCFirstLotMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotMode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCFirstLotMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotMode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCFirstLotAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotAdjust", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCFirstLotAdjust", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotAdjust", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCFinishLotMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotMode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCFinishLotMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotMode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCFinishLotAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotAdjust", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCFinishLotAdjust", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotAdjust", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCMiddleLotAb", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCMiddleLotAb", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCMiddleLotAb", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCMiddleLotAb", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCMiddleLotAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCMiddleLotAdjust", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCMiddleLotAdjust", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCMiddleLotAdjust", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MiddleLotJudgement", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleLotJudgement", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MiddleLotJudgement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleLotJudgement", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCFirstLotAb", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotAb", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCFirstLotAb", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFirstLotAb", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QCFinishLotAb", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotAb", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QCFinishLotAb", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QCFinishLotAb", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotJudgement", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudgement", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotJudgement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudgement", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPCheck", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPCheck", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPCheck", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remark", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Selfcon_DB_WB_Inspecction_Lot.My.MySettings.Default.DBxConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT MCNo, LotNo, LotStartTime, MCType, OPNo, InputQty, TotalGood, TotalNG, OPR"& _ 
                "ate, MaximumRPM, AverageRPM, MTBF, MTTR, AlarmTotal, LotEndTime, RunTime, StopTi"& _ 
                "me, AlarmTime, SelfConVersion, NetVersion, NoChipQTY, BrideNG, PickupNG, ColletC"& _ 
                "ount, ImpQTY, LotQTY, LotCNT, LotGood, LotNG, LotPFNG, BrideNGMC, CancelPcs, CPD"& _ 
                "ispo, ZeroCount, ZeroEnd, FrameFirstLot, FrameSecondLot, PreformType, PreformFir"& _ 
                "stLot, PreformSecondLot, PreformFirstLiftTime, PreformSecondLiftTime, AlarmPickU"& _ 
                "p, AlarmPreform, AlarmBonder, AlarmFrameOut, AlarmBridgeInsp, AlarmPreformInsp, "& _ 
                "RubberColletNo, OperateContinue, RubberCheck, Chipsize1, Chipsize2, BoundingCont"& _ 
                "inue, ColletCheck, PasteNozzleType, PateNozzleNo, PasteNozzleCond, TsukaigeNeedN"& _ 
                "o, TsukaigeCheck, SolderThickness1, SolderThickness2, SolderThickness3, SolderTh"& _ 
                "ickness4, SolderThicknessAvg, SolderThicknessR, QCFirstLotMode, QCFirstLotAdjust"& _ 
                ", QCFinishLotMode, QCFinishLotAdjust, QCMiddleLotAb, QCMiddleLotAdjust, MiddleLo"& _ 
                "tJudgement, QCFirstLotAb, QCFinishLotAb, LotJudgement, OPCheck, Remark FROM DBDa"& _ 
                "ta"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT TOP (1) MCNo, LotNo, LotStartTime FROM DBData WHERE (LotNo = @LotNo)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DBxDataSet.DBDataDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DBxDataSet.DBDataDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DBxDataSet.DBDataDataTable = New DBxDataSet.DBDataDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DBxDataSet.DBDataDataTable, ByVal LotNo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(LotNo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DBxDataSet.DBDataDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DBxDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "DBData")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_MCNo As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_LotStartTime As Date,  _
                    ByVal Original_MCType As String,  _
                    ByVal Original_OPNo As String,  _
                    ByVal Original_InputQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalGood As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalNG As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OPRate As Global.System.Nullable(Of Single),  _
                    ByVal Original_MaximumRPM As Global.System.Nullable(Of Single),  _
                    ByVal Original_AverageRPM As Global.System.Nullable(Of Single),  _
                    ByVal Original_MTBF As Global.System.Nullable(Of Single),  _
                    ByVal Original_MTTR As Global.System.Nullable(Of Single),  _
                    ByVal Original_AlarmTotal As Global.System.Nullable(Of Short),  _
                    ByVal Original_LotEndTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_RunTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_StopTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_AlarmTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_SelfConVersion As String,  _
                    ByVal Original_NetVersion As String,  _
                    ByVal Original_NoChipQTY As Global.System.Nullable(Of Short),  _
                    ByVal Original_BrideNG As Global.System.Nullable(Of Short),  _
                    ByVal Original_PickupNG As Global.System.Nullable(Of Short),  _
                    ByVal Original_ColletCount As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ImpQTY As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotQTY As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotCNT As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotGood As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotNG As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotPFNG As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BrideNGMC As Global.System.Nullable(Of Short),  _
                    ByVal Original_CancelPcs As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CPDispo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ZeroCount As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ZeroEnd As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FrameFirstLot As String,  _
                    ByVal Original_FrameSecondLot As String,  _
                    ByVal Original_PreformType As String,  _
                    ByVal Original_PreformFirstLot As String,  _
                    ByVal Original_PreformSecondLot As String,  _
                    ByVal Original_PreformFirstLiftTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_PreformSecondLiftTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_AlarmPickUp As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmPreform As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmBonder As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmFrameOut As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmBridgeInsp As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmPreformInsp As Global.System.Nullable(Of Short),  _
                    ByVal Original_RubberColletNo As Global.System.Nullable(Of Short),  _
                    ByVal Original_OperateContinue As Global.System.Nullable(Of Short),  _
                    ByVal Original_RubberCheck As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Chipsize1 As Global.System.Nullable(Of Single),  _
                    ByVal Original_Chipsize2 As Global.System.Nullable(Of Single),  _
                    ByVal Original_BoundingContinue As Global.System.Nullable(Of Short),  _
                    ByVal Original_ColletCheck As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PasteNozzleType As String,  _
                    ByVal Original_PateNozzleNo As String,  _
                    ByVal Original_PasteNozzleCond As String,  _
                    ByVal Original_TsukaigeNeedNo As Global.System.Nullable(Of Short),  _
                    ByVal Original_TsukaigeCheck As String,  _
                    ByVal Original_SolderThickness1 As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThickness2 As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThickness3 As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThickness4 As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThicknessAvg As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThicknessR As Global.System.Nullable(Of Short),  _
                    ByVal Original_QCFirstLotMode As String,  _
                    ByVal Original_QCFirstLotAdjust As String,  _
                    ByVal Original_QCFinishLotMode As String,  _
                    ByVal Original_QCFinishLotAdjust As String,  _
                    ByVal Original_QCMiddleLotAb As String,  _
                    ByVal Original_QCMiddleLotAdjust As String,  _
                    ByVal Original_MiddleLotJudgement As String,  _
                    ByVal Original_QCFirstLotAb As String,  _
                    ByVal Original_QCFinishLotAb As String,  _
                    ByVal Original_LotJudgement As String,  _
                    ByVal Original_OPCheck As String,  _
                    ByVal Original_Remark As String) As Integer
            If (Original_MCNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MCNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_MCNo,String)
            End If
            If (Original_LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_LotNo,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_LotStartTime,Date)
            If (Original_MCType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_MCType,String)
            End If
            If (Original_OPNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_OPNo,String)
            End If
            If (Original_InputQty.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_InputQty.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalGood.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_TotalGood.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalNG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_TotalNG.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_OPRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_OPRate.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_MaximumRPM.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_MaximumRPM.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_AverageRPM.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_AverageRPM.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_MTBF.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_MTBF.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_MTTR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_MTTR.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmTotal.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_AlarmTotal.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_LotEndTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_LotEndTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_RunTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_RunTime.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_StopTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_StopTime.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_AlarmTime.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_SelfConVersion Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_SelfConVersion,String)
            End If
            If (Original_NetVersion Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_NetVersion,String)
            End If
            If (Original_NoChipQTY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_NoChipQTY.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_BrideNG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_BrideNG.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_PickupNG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_PickupNG.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_ColletCount.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_ColletCount.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_ImpQTY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_ImpQTY.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_LotQTY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_LotQTY.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_LotCNT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_LotCNT.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_LotGood.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_LotGood.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_LotNG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_LotNG.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_LotPFNG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_LotPFNG.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_BrideNGMC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_BrideNGMC.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_CancelPcs.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_CancelPcs.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_CPDispo.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_CPDispo.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_ZeroCount.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_ZeroCount.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_ZeroEnd.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_ZeroEnd.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_FrameFirstLot Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_FrameFirstLot,String)
            End If
            If (Original_FrameSecondLot Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_FrameSecondLot,String)
            End If
            If (Original_PreformType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_PreformType,String)
            End If
            If (Original_PreformFirstLot Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_PreformFirstLot,String)
            End If
            If (Original_PreformSecondLot Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_PreformSecondLot,String)
            End If
            If (Original_PreformFirstLiftTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_PreformFirstLiftTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Original_PreformSecondLiftTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_PreformSecondLiftTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmPickUp.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_AlarmPickUp.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmPreform.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_AlarmPreform.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmBonder.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_AlarmBonder.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmFrameOut.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_AlarmFrameOut.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmBridgeInsp.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_AlarmBridgeInsp.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmPreformInsp.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_AlarmPreformInsp.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_RubberColletNo.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_RubberColletNo.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_OperateContinue.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_OperateContinue.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_RubberCheck.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_RubberCheck.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_Chipsize1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_Chipsize1.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_Chipsize2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_Chipsize2.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_BoundingContinue.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_BoundingContinue.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_ColletCheck.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_ColletCheck.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_PasteNozzleType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_PasteNozzleType,String)
            End If
            If (Original_PateNozzleNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_PateNozzleNo,String)
            End If
            If (Original_PasteNozzleCond Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_PasteNozzleCond,String)
            End If
            If (Original_TsukaigeNeedNo.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_TsukaigeNeedNo.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_TsukaigeCheck Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_TsukaigeCheck,String)
            End If
            If (Original_SolderThickness1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(Original_SolderThickness1.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_SolderThickness2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(Original_SolderThickness2.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_SolderThickness3.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(Original_SolderThickness3.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_SolderThickness4.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(Original_SolderThickness4.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Original_SolderThicknessAvg.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(Original_SolderThicknessAvg.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (Original_SolderThicknessR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(Original_SolderThicknessR.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_QCFirstLotMode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(Original_QCFirstLotMode,String)
            End If
            If (Original_QCFirstLotAdjust Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(Original_QCFirstLotAdjust,String)
            End If
            If (Original_QCFinishLotMode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(Original_QCFinishLotMode,String)
            End If
            If (Original_QCFinishLotAdjust Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(Original_QCFinishLotAdjust,String)
            End If
            If (Original_QCMiddleLotAb Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(Original_QCMiddleLotAb,String)
            End If
            If (Original_QCMiddleLotAdjust Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(Original_QCMiddleLotAdjust,String)
            End If
            If (Original_MiddleLotJudgement Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(Original_MiddleLotJudgement,String)
            End If
            If (Original_QCFirstLotAb Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(Original_QCFirstLotAb,String)
            End If
            If (Original_QCFinishLotAb Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(Original_QCFinishLotAb,String)
            End If
            If (Original_LotJudgement Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(Original_LotJudgement,String)
            End If
            If (Original_OPCheck Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(Original_OPCheck,String)
            End If
            If (Original_Remark Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(Original_Remark,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal MCNo As String,  _
                    ByVal LotNo As String,  _
                    ByVal LotStartTime As Date,  _
                    ByVal MCType As String,  _
                    ByVal OPNo As String,  _
                    ByVal InputQty As Global.System.Nullable(Of Integer),  _
                    ByVal TotalGood As Global.System.Nullable(Of Integer),  _
                    ByVal TotalNG As Global.System.Nullable(Of Integer),  _
                    ByVal OPRate As Global.System.Nullable(Of Single),  _
                    ByVal MaximumRPM As Global.System.Nullable(Of Single),  _
                    ByVal AverageRPM As Global.System.Nullable(Of Single),  _
                    ByVal MTBF As Global.System.Nullable(Of Single),  _
                    ByVal MTTR As Global.System.Nullable(Of Single),  _
                    ByVal AlarmTotal As Global.System.Nullable(Of Short),  _
                    ByVal LotEndTime As Global.System.Nullable(Of Date),  _
                    ByVal RunTime As Global.System.Nullable(Of Single),  _
                    ByVal StopTime As Global.System.Nullable(Of Single),  _
                    ByVal AlarmTime As Global.System.Nullable(Of Single),  _
                    ByVal SelfConVersion As String,  _
                    ByVal NetVersion As String,  _
                    ByVal NoChipQTY As Global.System.Nullable(Of Short),  _
                    ByVal BrideNG As Global.System.Nullable(Of Short),  _
                    ByVal PickupNG As Global.System.Nullable(Of Short),  _
                    ByVal ColletCount As Global.System.Nullable(Of Integer),  _
                    ByVal ImpQTY As Global.System.Nullable(Of Integer),  _
                    ByVal LotQTY As Global.System.Nullable(Of Integer),  _
                    ByVal LotCNT As Global.System.Nullable(Of Integer),  _
                    ByVal LotGood As Global.System.Nullable(Of Integer),  _
                    ByVal LotNG As Global.System.Nullable(Of Integer),  _
                    ByVal LotPFNG As Global.System.Nullable(Of Integer),  _
                    ByVal BrideNGMC As Global.System.Nullable(Of Short),  _
                    ByVal CancelPcs As Global.System.Nullable(Of Integer),  _
                    ByVal CPDispo As Global.System.Nullable(Of Integer),  _
                    ByVal ZeroCount As Global.System.Nullable(Of Integer),  _
                    ByVal ZeroEnd As Global.System.Nullable(Of Integer),  _
                    ByVal FrameFirstLot As String,  _
                    ByVal FrameSecondLot As String,  _
                    ByVal PreformType As String,  _
                    ByVal PreformFirstLot As String,  _
                    ByVal PreformSecondLot As String,  _
                    ByVal PreformFirstLiftTime As Global.System.Nullable(Of Date),  _
                    ByVal PreformSecondLiftTime As Global.System.Nullable(Of Date),  _
                    ByVal AlarmPickUp As Global.System.Nullable(Of Short),  _
                    ByVal AlarmPreform As Global.System.Nullable(Of Short),  _
                    ByVal AlarmBonder As Global.System.Nullable(Of Short),  _
                    ByVal AlarmFrameOut As Global.System.Nullable(Of Short),  _
                    ByVal AlarmBridgeInsp As Global.System.Nullable(Of Short),  _
                    ByVal AlarmPreformInsp As Global.System.Nullable(Of Short),  _
                    ByVal RubberColletNo As Global.System.Nullable(Of Short),  _
                    ByVal OperateContinue As Global.System.Nullable(Of Short),  _
                    ByVal RubberCheck As Global.System.Nullable(Of Boolean),  _
                    ByVal Chipsize1 As Global.System.Nullable(Of Single),  _
                    ByVal Chipsize2 As Global.System.Nullable(Of Single),  _
                    ByVal BoundingContinue As Global.System.Nullable(Of Short),  _
                    ByVal ColletCheck As Global.System.Nullable(Of Boolean),  _
                    ByVal PasteNozzleType As String,  _
                    ByVal PateNozzleNo As String,  _
                    ByVal PasteNozzleCond As String,  _
                    ByVal TsukaigeNeedNo As Global.System.Nullable(Of Short),  _
                    ByVal TsukaigeCheck As String,  _
                    ByVal SolderThickness1 As Global.System.Nullable(Of Short),  _
                    ByVal SolderThickness2 As Global.System.Nullable(Of Short),  _
                    ByVal SolderThickness3 As Global.System.Nullable(Of Short),  _
                    ByVal SolderThickness4 As Global.System.Nullable(Of Short),  _
                    ByVal SolderThicknessAvg As Global.System.Nullable(Of Short),  _
                    ByVal SolderThicknessR As Global.System.Nullable(Of Short),  _
                    ByVal QCFirstLotMode As String,  _
                    ByVal QCFirstLotAdjust As String,  _
                    ByVal QCFinishLotMode As String,  _
                    ByVal QCFinishLotAdjust As String,  _
                    ByVal QCMiddleLotAb As String,  _
                    ByVal QCMiddleLotAdjust As String,  _
                    ByVal MiddleLotJudgement As String,  _
                    ByVal QCFirstLotAb As String,  _
                    ByVal QCFinishLotAb As String,  _
                    ByVal LotJudgement As String,  _
                    ByVal OPCheck As String,  _
                    ByVal Remark As String) As Integer
            If (MCNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MCNo")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(MCNo,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(LotNo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(LotStartTime,Date)
            If (MCType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(MCType,String)
            End If
            If (OPNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(OPNo,String)
            End If
            If (InputQty.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(InputQty.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (TotalGood.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(TotalGood.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (TotalNG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(TotalNG.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (OPRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(OPRate.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (MaximumRPM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(MaximumRPM.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (AverageRPM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(AverageRPM.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MTBF.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(MTBF.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (MTTR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(MTTR.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (AlarmTotal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(AlarmTotal.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LotEndTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(LotEndTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (RunTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(RunTime.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (StopTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(StopTime.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (AlarmTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(AlarmTime.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (SelfConVersion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(SelfConVersion,String)
            End If
            If (NetVersion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(NetVersion,String)
            End If
            If (NoChipQTY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(NoChipQTY.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (BrideNG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(BrideNG.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (PickupNG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(PickupNG.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (ColletCount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ColletCount.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (ImpQTY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(ImpQTY.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (LotQTY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(LotQTY.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (LotCNT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(LotCNT.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LotGood.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(LotGood.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (LotNG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(LotNG.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (LotPFNG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(LotPFNG.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (BrideNGMC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(BrideNGMC.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (CancelPcs.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(CancelPcs.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (CPDispo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(CPDispo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (ZeroCount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(ZeroCount.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (ZeroEnd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(ZeroEnd.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (FrameFirstLot Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(FrameFirstLot,String)
            End If
            If (FrameSecondLot Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(FrameSecondLot,String)
            End If
            If (PreformType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(PreformType,String)
            End If
            If (PreformFirstLot Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(PreformFirstLot,String)
            End If
            If (PreformSecondLot Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(PreformSecondLot,String)
            End If
            If (PreformFirstLiftTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(PreformFirstLiftTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (PreformSecondLiftTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(PreformSecondLiftTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (AlarmPickUp.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(AlarmPickUp.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (AlarmPreform.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(AlarmPreform.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (AlarmBonder.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(AlarmBonder.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (AlarmFrameOut.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(AlarmFrameOut.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (AlarmBridgeInsp.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(AlarmBridgeInsp.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (AlarmPreformInsp.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(AlarmPreformInsp.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (RubberColletNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(RubberColletNo.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (OperateContinue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(OperateContinue.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (RubberCheck.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(RubberCheck.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Chipsize1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(Chipsize1.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Chipsize2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(Chipsize2.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (BoundingContinue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(BoundingContinue.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (ColletCheck.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(ColletCheck.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (PasteNozzleType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(PasteNozzleType,String)
            End If
            If (PateNozzleNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(PateNozzleNo,String)
            End If
            If (PasteNozzleCond Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(PasteNozzleCond,String)
            End If
            If (TsukaigeNeedNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(TsukaigeNeedNo.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (TsukaigeCheck Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(TsukaigeCheck,String)
            End If
            If (SolderThickness1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(SolderThickness1.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (SolderThickness2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(SolderThickness2.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (SolderThickness3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(SolderThickness3.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (SolderThickness4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(SolderThickness4.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (SolderThicknessAvg.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(SolderThicknessAvg.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (SolderThicknessR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(SolderThicknessR.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (QCFirstLotMode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(QCFirstLotMode,String)
            End If
            If (QCFirstLotAdjust Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(QCFirstLotAdjust,String)
            End If
            If (QCFinishLotMode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(QCFinishLotMode,String)
            End If
            If (QCFinishLotAdjust Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(QCFinishLotAdjust,String)
            End If
            If (QCMiddleLotAb Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(QCMiddleLotAb,String)
            End If
            If (QCMiddleLotAdjust Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(QCMiddleLotAdjust,String)
            End If
            If (MiddleLotJudgement Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(MiddleLotJudgement,String)
            End If
            If (QCFirstLotAb Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(QCFirstLotAb,String)
            End If
            If (QCFinishLotAb Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(QCFinishLotAb,String)
            End If
            If (LotJudgement Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(LotJudgement,String)
            End If
            If (OPCheck Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(OPCheck,String)
            End If
            If (Remark Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(Remark,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal MCNo As String,  _
                    ByVal LotNo As String,  _
                    ByVal LotStartTime As Date,  _
                    ByVal MCType As String,  _
                    ByVal OPNo As String,  _
                    ByVal InputQty As Global.System.Nullable(Of Integer),  _
                    ByVal TotalGood As Global.System.Nullable(Of Integer),  _
                    ByVal TotalNG As Global.System.Nullable(Of Integer),  _
                    ByVal OPRate As Global.System.Nullable(Of Single),  _
                    ByVal MaximumRPM As Global.System.Nullable(Of Single),  _
                    ByVal AverageRPM As Global.System.Nullable(Of Single),  _
                    ByVal MTBF As Global.System.Nullable(Of Single),  _
                    ByVal MTTR As Global.System.Nullable(Of Single),  _
                    ByVal AlarmTotal As Global.System.Nullable(Of Short),  _
                    ByVal LotEndTime As Global.System.Nullable(Of Date),  _
                    ByVal RunTime As Global.System.Nullable(Of Single),  _
                    ByVal StopTime As Global.System.Nullable(Of Single),  _
                    ByVal AlarmTime As Global.System.Nullable(Of Single),  _
                    ByVal SelfConVersion As String,  _
                    ByVal NetVersion As String,  _
                    ByVal NoChipQTY As Global.System.Nullable(Of Short),  _
                    ByVal BrideNG As Global.System.Nullable(Of Short),  _
                    ByVal PickupNG As Global.System.Nullable(Of Short),  _
                    ByVal ColletCount As Global.System.Nullable(Of Integer),  _
                    ByVal ImpQTY As Global.System.Nullable(Of Integer),  _
                    ByVal LotQTY As Global.System.Nullable(Of Integer),  _
                    ByVal LotCNT As Global.System.Nullable(Of Integer),  _
                    ByVal LotGood As Global.System.Nullable(Of Integer),  _
                    ByVal LotNG As Global.System.Nullable(Of Integer),  _
                    ByVal LotPFNG As Global.System.Nullable(Of Integer),  _
                    ByVal BrideNGMC As Global.System.Nullable(Of Short),  _
                    ByVal CancelPcs As Global.System.Nullable(Of Integer),  _
                    ByVal CPDispo As Global.System.Nullable(Of Integer),  _
                    ByVal ZeroCount As Global.System.Nullable(Of Integer),  _
                    ByVal ZeroEnd As Global.System.Nullable(Of Integer),  _
                    ByVal FrameFirstLot As String,  _
                    ByVal FrameSecondLot As String,  _
                    ByVal PreformType As String,  _
                    ByVal PreformFirstLot As String,  _
                    ByVal PreformSecondLot As String,  _
                    ByVal PreformFirstLiftTime As Global.System.Nullable(Of Date),  _
                    ByVal PreformSecondLiftTime As Global.System.Nullable(Of Date),  _
                    ByVal AlarmPickUp As Global.System.Nullable(Of Short),  _
                    ByVal AlarmPreform As Global.System.Nullable(Of Short),  _
                    ByVal AlarmBonder As Global.System.Nullable(Of Short),  _
                    ByVal AlarmFrameOut As Global.System.Nullable(Of Short),  _
                    ByVal AlarmBridgeInsp As Global.System.Nullable(Of Short),  _
                    ByVal AlarmPreformInsp As Global.System.Nullable(Of Short),  _
                    ByVal RubberColletNo As Global.System.Nullable(Of Short),  _
                    ByVal OperateContinue As Global.System.Nullable(Of Short),  _
                    ByVal RubberCheck As Global.System.Nullable(Of Boolean),  _
                    ByVal Chipsize1 As Global.System.Nullable(Of Single),  _
                    ByVal Chipsize2 As Global.System.Nullable(Of Single),  _
                    ByVal BoundingContinue As Global.System.Nullable(Of Short),  _
                    ByVal ColletCheck As Global.System.Nullable(Of Boolean),  _
                    ByVal PasteNozzleType As String,  _
                    ByVal PateNozzleNo As String,  _
                    ByVal PasteNozzleCond As String,  _
                    ByVal TsukaigeNeedNo As Global.System.Nullable(Of Short),  _
                    ByVal TsukaigeCheck As String,  _
                    ByVal SolderThickness1 As Global.System.Nullable(Of Short),  _
                    ByVal SolderThickness2 As Global.System.Nullable(Of Short),  _
                    ByVal SolderThickness3 As Global.System.Nullable(Of Short),  _
                    ByVal SolderThickness4 As Global.System.Nullable(Of Short),  _
                    ByVal SolderThicknessAvg As Global.System.Nullable(Of Short),  _
                    ByVal SolderThicknessR As Global.System.Nullable(Of Short),  _
                    ByVal QCFirstLotMode As String,  _
                    ByVal QCFirstLotAdjust As String,  _
                    ByVal QCFinishLotMode As String,  _
                    ByVal QCFinishLotAdjust As String,  _
                    ByVal QCMiddleLotAb As String,  _
                    ByVal QCMiddleLotAdjust As String,  _
                    ByVal MiddleLotJudgement As String,  _
                    ByVal QCFirstLotAb As String,  _
                    ByVal QCFinishLotAb As String,  _
                    ByVal LotJudgement As String,  _
                    ByVal OPCheck As String,  _
                    ByVal Remark As String,  _
                    ByVal Original_MCNo As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_LotStartTime As Date,  _
                    ByVal Original_MCType As String,  _
                    ByVal Original_OPNo As String,  _
                    ByVal Original_InputQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalGood As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalNG As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OPRate As Global.System.Nullable(Of Single),  _
                    ByVal Original_MaximumRPM As Global.System.Nullable(Of Single),  _
                    ByVal Original_AverageRPM As Global.System.Nullable(Of Single),  _
                    ByVal Original_MTBF As Global.System.Nullable(Of Single),  _
                    ByVal Original_MTTR As Global.System.Nullable(Of Single),  _
                    ByVal Original_AlarmTotal As Global.System.Nullable(Of Short),  _
                    ByVal Original_LotEndTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_RunTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_StopTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_AlarmTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_SelfConVersion As String,  _
                    ByVal Original_NetVersion As String,  _
                    ByVal Original_NoChipQTY As Global.System.Nullable(Of Short),  _
                    ByVal Original_BrideNG As Global.System.Nullable(Of Short),  _
                    ByVal Original_PickupNG As Global.System.Nullable(Of Short),  _
                    ByVal Original_ColletCount As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ImpQTY As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotQTY As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotCNT As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotGood As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotNG As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotPFNG As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BrideNGMC As Global.System.Nullable(Of Short),  _
                    ByVal Original_CancelPcs As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CPDispo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ZeroCount As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ZeroEnd As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FrameFirstLot As String,  _
                    ByVal Original_FrameSecondLot As String,  _
                    ByVal Original_PreformType As String,  _
                    ByVal Original_PreformFirstLot As String,  _
                    ByVal Original_PreformSecondLot As String,  _
                    ByVal Original_PreformFirstLiftTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_PreformSecondLiftTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_AlarmPickUp As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmPreform As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmBonder As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmFrameOut As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmBridgeInsp As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmPreformInsp As Global.System.Nullable(Of Short),  _
                    ByVal Original_RubberColletNo As Global.System.Nullable(Of Short),  _
                    ByVal Original_OperateContinue As Global.System.Nullable(Of Short),  _
                    ByVal Original_RubberCheck As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Chipsize1 As Global.System.Nullable(Of Single),  _
                    ByVal Original_Chipsize2 As Global.System.Nullable(Of Single),  _
                    ByVal Original_BoundingContinue As Global.System.Nullable(Of Short),  _
                    ByVal Original_ColletCheck As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PasteNozzleType As String,  _
                    ByVal Original_PateNozzleNo As String,  _
                    ByVal Original_PasteNozzleCond As String,  _
                    ByVal Original_TsukaigeNeedNo As Global.System.Nullable(Of Short),  _
                    ByVal Original_TsukaigeCheck As String,  _
                    ByVal Original_SolderThickness1 As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThickness2 As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThickness3 As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThickness4 As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThicknessAvg As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThicknessR As Global.System.Nullable(Of Short),  _
                    ByVal Original_QCFirstLotMode As String,  _
                    ByVal Original_QCFirstLotAdjust As String,  _
                    ByVal Original_QCFinishLotMode As String,  _
                    ByVal Original_QCFinishLotAdjust As String,  _
                    ByVal Original_QCMiddleLotAb As String,  _
                    ByVal Original_QCMiddleLotAdjust As String,  _
                    ByVal Original_MiddleLotJudgement As String,  _
                    ByVal Original_QCFirstLotAb As String,  _
                    ByVal Original_QCFinishLotAb As String,  _
                    ByVal Original_LotJudgement As String,  _
                    ByVal Original_OPCheck As String,  _
                    ByVal Original_Remark As String) As Integer
            If (MCNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MCNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(MCNo,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LotNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LotStartTime,Date)
            If (MCType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MCType,String)
            End If
            If (OPNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(OPNo,String)
            End If
            If (InputQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(InputQty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (TotalGood.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(TotalGood.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (TotalNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(TotalNG.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (OPRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(OPRate.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (MaximumRPM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(MaximumRPM.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (AverageRPM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(AverageRPM.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MTBF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(MTBF.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (MTTR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(MTTR.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (AlarmTotal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(AlarmTotal.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LotEndTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(LotEndTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (RunTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(RunTime.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (StopTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(StopTime.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (AlarmTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(AlarmTime.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (SelfConVersion Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(SelfConVersion,String)
            End If
            If (NetVersion Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(NetVersion,String)
            End If
            If (NoChipQTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(NoChipQTY.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (BrideNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(BrideNG.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (PickupNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(PickupNG.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (ColletCount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ColletCount.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (ImpQTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(ImpQTY.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (LotQTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(LotQTY.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (LotCNT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(LotCNT.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LotGood.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(LotGood.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (LotNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(LotNG.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (LotPFNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(LotPFNG.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (BrideNGMC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(BrideNGMC.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (CancelPcs.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(CancelPcs.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (CPDispo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(CPDispo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (ZeroCount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(ZeroCount.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (ZeroEnd.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(ZeroEnd.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (FrameFirstLot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(FrameFirstLot,String)
            End If
            If (FrameSecondLot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(FrameSecondLot,String)
            End If
            If (PreformType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(PreformType,String)
            End If
            If (PreformFirstLot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(PreformFirstLot,String)
            End If
            If (PreformSecondLot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(PreformSecondLot,String)
            End If
            If (PreformFirstLiftTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(PreformFirstLiftTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (PreformSecondLiftTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(PreformSecondLiftTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (AlarmPickUp.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(AlarmPickUp.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (AlarmPreform.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(AlarmPreform.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (AlarmBonder.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(AlarmBonder.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (AlarmFrameOut.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(AlarmFrameOut.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (AlarmBridgeInsp.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(AlarmBridgeInsp.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (AlarmPreformInsp.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(AlarmPreformInsp.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (RubberColletNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(RubberColletNo.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (OperateContinue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(OperateContinue.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (RubberCheck.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(RubberCheck.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Chipsize1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Chipsize1.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Chipsize2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Chipsize2.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (BoundingContinue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(BoundingContinue.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (ColletCheck.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(ColletCheck.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (PasteNozzleType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(PasteNozzleType,String)
            End If
            If (PateNozzleNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(PateNozzleNo,String)
            End If
            If (PasteNozzleCond Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(PasteNozzleCond,String)
            End If
            If (TsukaigeNeedNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(TsukaigeNeedNo.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (TsukaigeCheck Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(TsukaigeCheck,String)
            End If
            If (SolderThickness1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(SolderThickness1.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (SolderThickness2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(SolderThickness2.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (SolderThickness3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(SolderThickness3.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (SolderThickness4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(SolderThickness4.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (SolderThicknessAvg.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(SolderThicknessAvg.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (SolderThicknessR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(SolderThicknessR.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (QCFirstLotMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(QCFirstLotMode,String)
            End If
            If (QCFirstLotAdjust Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(QCFirstLotAdjust,String)
            End If
            If (QCFinishLotMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(QCFinishLotMode,String)
            End If
            If (QCFinishLotAdjust Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(QCFinishLotAdjust,String)
            End If
            If (QCMiddleLotAb Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(QCMiddleLotAb,String)
            End If
            If (QCMiddleLotAdjust Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(QCMiddleLotAdjust,String)
            End If
            If (MiddleLotJudgement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(MiddleLotJudgement,String)
            End If
            If (QCFirstLotAb Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(QCFirstLotAb,String)
            End If
            If (QCFinishLotAb Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(QCFinishLotAb,String)
            End If
            If (LotJudgement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(LotJudgement,String)
            End If
            If (OPCheck Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(OPCheck,String)
            End If
            If (Remark Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Remark,String)
            End If
            If (Original_MCNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MCNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_MCNo,String)
            End If
            If (Original_LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_LotNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_LotStartTime,Date)
            If (Original_MCType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_MCType,String)
            End If
            If (Original_OPNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_OPNo,String)
            End If
            If (Original_InputQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_InputQty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalGood.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_TotalGood.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_TotalNG.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_OPRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_OPRate.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_MaximumRPM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_MaximumRPM.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_AverageRPM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_AverageRPM.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_MTBF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_MTBF.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_MTTR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_MTTR.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmTotal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_AlarmTotal.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_LotEndTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_LotEndTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_RunTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_RunTime.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_StopTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_StopTime.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_AlarmTime.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_SelfConVersion Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_SelfConVersion,String)
            End If
            If (Original_NetVersion Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_NetVersion,String)
            End If
            If (Original_NoChipQTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_NoChipQTY.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_BrideNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_BrideNG.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_PickupNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_PickupNG.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_ColletCount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_ColletCount.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_ImpQTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_ImpQTY.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Original_LotQTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_LotQTY.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (Original_LotCNT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_LotCNT.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_LotGood.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_LotGood.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_LotNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_LotNG.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (Original_LotPFNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_LotPFNG.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            End If
            If (Original_BrideNGMC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_BrideNGMC.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            End If
            If (Original_CancelPcs.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_CancelPcs.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (Original_CPDispo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_CPDispo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_ZeroCount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_ZeroCount.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_ZeroEnd.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_ZeroEnd.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_FrameFirstLot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_FrameFirstLot,String)
            End If
            If (Original_FrameSecondLot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_FrameSecondLot,String)
            End If
            If (Original_PreformType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_PreformType,String)
            End If
            If (Original_PreformFirstLot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_PreformFirstLot,String)
            End If
            If (Original_PreformSecondLot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_PreformSecondLot,String)
            End If
            If (Original_PreformFirstLiftTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(Original_PreformFirstLiftTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = Global.System.DBNull.Value
            End If
            If (Original_PreformSecondLiftTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(Original_PreformSecondLiftTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmPickUp.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(Original_AlarmPickUp.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmPreform.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(Original_AlarmPreform.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmBonder.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(Original_AlarmBonder.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmFrameOut.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(Original_AlarmFrameOut.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmBridgeInsp.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(Original_AlarmBridgeInsp.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmPreformInsp.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(Original_AlarmPreformInsp.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = Global.System.DBNull.Value
            End If
            If (Original_RubberColletNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(Original_RubberColletNo.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = Global.System.DBNull.Value
            End If
            If (Original_OperateContinue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(Original_OperateContinue.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = Global.System.DBNull.Value
            End If
            If (Original_RubberCheck.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(Original_RubberCheck.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = Global.System.DBNull.Value
            End If
            If (Original_Chipsize1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(Original_Chipsize1.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = Global.System.DBNull.Value
            End If
            If (Original_Chipsize2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(Original_Chipsize2.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = Global.System.DBNull.Value
            End If
            If (Original_BoundingContinue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(Original_BoundingContinue.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = Global.System.DBNull.Value
            End If
            If (Original_ColletCheck.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(Original_ColletCheck.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = Global.System.DBNull.Value
            End If
            If (Original_PasteNozzleType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(Original_PasteNozzleType,String)
            End If
            If (Original_PateNozzleNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(Original_PateNozzleNo,String)
            End If
            If (Original_PasteNozzleCond Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(Original_PasteNozzleCond,String)
            End If
            If (Original_TsukaigeNeedNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(Original_TsukaigeNeedNo.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = Global.System.DBNull.Value
            End If
            If (Original_TsukaigeCheck Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(Original_TsukaigeCheck,String)
            End If
            If (Original_SolderThickness1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(Original_SolderThickness1.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = Global.System.DBNull.Value
            End If
            If (Original_SolderThickness2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(Original_SolderThickness2.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = Global.System.DBNull.Value
            End If
            If (Original_SolderThickness3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(Original_SolderThickness3.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = Global.System.DBNull.Value
            End If
            If (Original_SolderThickness4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(Original_SolderThickness4.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = Global.System.DBNull.Value
            End If
            If (Original_SolderThicknessAvg.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(Original_SolderThicknessAvg.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = Global.System.DBNull.Value
            End If
            If (Original_SolderThicknessR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(Original_SolderThicknessR.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(206).Value = Global.System.DBNull.Value
            End If
            If (Original_QCFirstLotMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(208).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(Original_QCFirstLotMode,String)
            End If
            If (Original_QCFirstLotAdjust Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(210).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(Original_QCFirstLotAdjust,String)
            End If
            If (Original_QCFinishLotMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(212).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(Original_QCFinishLotMode,String)
            End If
            If (Original_QCFinishLotAdjust Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(214).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(Original_QCFinishLotAdjust,String)
            End If
            If (Original_QCMiddleLotAb Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(216).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(Original_QCMiddleLotAb,String)
            End If
            If (Original_QCMiddleLotAdjust Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(218).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(Original_QCMiddleLotAdjust,String)
            End If
            If (Original_MiddleLotJudgement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(220).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(Original_MiddleLotJudgement,String)
            End If
            If (Original_QCFirstLotAb Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(222).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(Original_QCFirstLotAb,String)
            End If
            If (Original_QCFinishLotAb Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(224).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(Original_QCFinishLotAb,String)
            End If
            If (Original_LotJudgement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(Original_LotJudgement,String)
            End If
            If (Original_OPCheck Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(Original_OPCheck,String)
            End If
            If (Original_Remark Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(Original_Remark,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal MCType As String,  _
                    ByVal OPNo As String,  _
                    ByVal InputQty As Global.System.Nullable(Of Integer),  _
                    ByVal TotalGood As Global.System.Nullable(Of Integer),  _
                    ByVal TotalNG As Global.System.Nullable(Of Integer),  _
                    ByVal OPRate As Global.System.Nullable(Of Single),  _
                    ByVal MaximumRPM As Global.System.Nullable(Of Single),  _
                    ByVal AverageRPM As Global.System.Nullable(Of Single),  _
                    ByVal MTBF As Global.System.Nullable(Of Single),  _
                    ByVal MTTR As Global.System.Nullable(Of Single),  _
                    ByVal AlarmTotal As Global.System.Nullable(Of Short),  _
                    ByVal LotEndTime As Global.System.Nullable(Of Date),  _
                    ByVal RunTime As Global.System.Nullable(Of Single),  _
                    ByVal StopTime As Global.System.Nullable(Of Single),  _
                    ByVal AlarmTime As Global.System.Nullable(Of Single),  _
                    ByVal SelfConVersion As String,  _
                    ByVal NetVersion As String,  _
                    ByVal NoChipQTY As Global.System.Nullable(Of Short),  _
                    ByVal BrideNG As Global.System.Nullable(Of Short),  _
                    ByVal PickupNG As Global.System.Nullable(Of Short),  _
                    ByVal ColletCount As Global.System.Nullable(Of Integer),  _
                    ByVal ImpQTY As Global.System.Nullable(Of Integer),  _
                    ByVal LotQTY As Global.System.Nullable(Of Integer),  _
                    ByVal LotCNT As Global.System.Nullable(Of Integer),  _
                    ByVal LotGood As Global.System.Nullable(Of Integer),  _
                    ByVal LotNG As Global.System.Nullable(Of Integer),  _
                    ByVal LotPFNG As Global.System.Nullable(Of Integer),  _
                    ByVal BrideNGMC As Global.System.Nullable(Of Short),  _
                    ByVal CancelPcs As Global.System.Nullable(Of Integer),  _
                    ByVal CPDispo As Global.System.Nullable(Of Integer),  _
                    ByVal ZeroCount As Global.System.Nullable(Of Integer),  _
                    ByVal ZeroEnd As Global.System.Nullable(Of Integer),  _
                    ByVal FrameFirstLot As String,  _
                    ByVal FrameSecondLot As String,  _
                    ByVal PreformType As String,  _
                    ByVal PreformFirstLot As String,  _
                    ByVal PreformSecondLot As String,  _
                    ByVal PreformFirstLiftTime As Global.System.Nullable(Of Date),  _
                    ByVal PreformSecondLiftTime As Global.System.Nullable(Of Date),  _
                    ByVal AlarmPickUp As Global.System.Nullable(Of Short),  _
                    ByVal AlarmPreform As Global.System.Nullable(Of Short),  _
                    ByVal AlarmBonder As Global.System.Nullable(Of Short),  _
                    ByVal AlarmFrameOut As Global.System.Nullable(Of Short),  _
                    ByVal AlarmBridgeInsp As Global.System.Nullable(Of Short),  _
                    ByVal AlarmPreformInsp As Global.System.Nullable(Of Short),  _
                    ByVal RubberColletNo As Global.System.Nullable(Of Short),  _
                    ByVal OperateContinue As Global.System.Nullable(Of Short),  _
                    ByVal RubberCheck As Global.System.Nullable(Of Boolean),  _
                    ByVal Chipsize1 As Global.System.Nullable(Of Single),  _
                    ByVal Chipsize2 As Global.System.Nullable(Of Single),  _
                    ByVal BoundingContinue As Global.System.Nullable(Of Short),  _
                    ByVal ColletCheck As Global.System.Nullable(Of Boolean),  _
                    ByVal PasteNozzleType As String,  _
                    ByVal PateNozzleNo As String,  _
                    ByVal PasteNozzleCond As String,  _
                    ByVal TsukaigeNeedNo As Global.System.Nullable(Of Short),  _
                    ByVal TsukaigeCheck As String,  _
                    ByVal SolderThickness1 As Global.System.Nullable(Of Short),  _
                    ByVal SolderThickness2 As Global.System.Nullable(Of Short),  _
                    ByVal SolderThickness3 As Global.System.Nullable(Of Short),  _
                    ByVal SolderThickness4 As Global.System.Nullable(Of Short),  _
                    ByVal SolderThicknessAvg As Global.System.Nullable(Of Short),  _
                    ByVal SolderThicknessR As Global.System.Nullable(Of Short),  _
                    ByVal QCFirstLotMode As String,  _
                    ByVal QCFirstLotAdjust As String,  _
                    ByVal QCFinishLotMode As String,  _
                    ByVal QCFinishLotAdjust As String,  _
                    ByVal QCMiddleLotAb As String,  _
                    ByVal QCMiddleLotAdjust As String,  _
                    ByVal MiddleLotJudgement As String,  _
                    ByVal QCFirstLotAb As String,  _
                    ByVal QCFinishLotAb As String,  _
                    ByVal LotJudgement As String,  _
                    ByVal OPCheck As String,  _
                    ByVal Remark As String,  _
                    ByVal Original_MCNo As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_LotStartTime As Date,  _
                    ByVal Original_MCType As String,  _
                    ByVal Original_OPNo As String,  _
                    ByVal Original_InputQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalGood As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalNG As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OPRate As Global.System.Nullable(Of Single),  _
                    ByVal Original_MaximumRPM As Global.System.Nullable(Of Single),  _
                    ByVal Original_AverageRPM As Global.System.Nullable(Of Single),  _
                    ByVal Original_MTBF As Global.System.Nullable(Of Single),  _
                    ByVal Original_MTTR As Global.System.Nullable(Of Single),  _
                    ByVal Original_AlarmTotal As Global.System.Nullable(Of Short),  _
                    ByVal Original_LotEndTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_RunTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_StopTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_AlarmTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_SelfConVersion As String,  _
                    ByVal Original_NetVersion As String,  _
                    ByVal Original_NoChipQTY As Global.System.Nullable(Of Short),  _
                    ByVal Original_BrideNG As Global.System.Nullable(Of Short),  _
                    ByVal Original_PickupNG As Global.System.Nullable(Of Short),  _
                    ByVal Original_ColletCount As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ImpQTY As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotQTY As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotCNT As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotGood As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotNG As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LotPFNG As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BrideNGMC As Global.System.Nullable(Of Short),  _
                    ByVal Original_CancelPcs As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CPDispo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ZeroCount As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ZeroEnd As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FrameFirstLot As String,  _
                    ByVal Original_FrameSecondLot As String,  _
                    ByVal Original_PreformType As String,  _
                    ByVal Original_PreformFirstLot As String,  _
                    ByVal Original_PreformSecondLot As String,  _
                    ByVal Original_PreformFirstLiftTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_PreformSecondLiftTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_AlarmPickUp As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmPreform As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmBonder As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmFrameOut As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmBridgeInsp As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmPreformInsp As Global.System.Nullable(Of Short),  _
                    ByVal Original_RubberColletNo As Global.System.Nullable(Of Short),  _
                    ByVal Original_OperateContinue As Global.System.Nullable(Of Short),  _
                    ByVal Original_RubberCheck As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Chipsize1 As Global.System.Nullable(Of Single),  _
                    ByVal Original_Chipsize2 As Global.System.Nullable(Of Single),  _
                    ByVal Original_BoundingContinue As Global.System.Nullable(Of Short),  _
                    ByVal Original_ColletCheck As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PasteNozzleType As String,  _
                    ByVal Original_PateNozzleNo As String,  _
                    ByVal Original_PasteNozzleCond As String,  _
                    ByVal Original_TsukaigeNeedNo As Global.System.Nullable(Of Short),  _
                    ByVal Original_TsukaigeCheck As String,  _
                    ByVal Original_SolderThickness1 As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThickness2 As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThickness3 As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThickness4 As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThicknessAvg As Global.System.Nullable(Of Short),  _
                    ByVal Original_SolderThicknessR As Global.System.Nullable(Of Short),  _
                    ByVal Original_QCFirstLotMode As String,  _
                    ByVal Original_QCFirstLotAdjust As String,  _
                    ByVal Original_QCFinishLotMode As String,  _
                    ByVal Original_QCFinishLotAdjust As String,  _
                    ByVal Original_QCMiddleLotAb As String,  _
                    ByVal Original_QCMiddleLotAdjust As String,  _
                    ByVal Original_MiddleLotJudgement As String,  _
                    ByVal Original_QCFirstLotAb As String,  _
                    ByVal Original_QCFinishLotAb As String,  _
                    ByVal Original_LotJudgement As String,  _
                    ByVal Original_OPCheck As String,  _
                    ByVal Original_Remark As String) As Integer
            Return Me.Update(Original_MCNo, Original_LotNo, Original_LotStartTime, MCType, OPNo, InputQty, TotalGood, TotalNG, OPRate, MaximumRPM, AverageRPM, MTBF, MTTR, AlarmTotal, LotEndTime, RunTime, StopTime, AlarmTime, SelfConVersion, NetVersion, NoChipQTY, BrideNG, PickupNG, ColletCount, ImpQTY, LotQTY, LotCNT, LotGood, LotNG, LotPFNG, BrideNGMC, CancelPcs, CPDispo, ZeroCount, ZeroEnd, FrameFirstLot, FrameSecondLot, PreformType, PreformFirstLot, PreformSecondLot, PreformFirstLiftTime, PreformSecondLiftTime, AlarmPickUp, AlarmPreform, AlarmBonder, AlarmFrameOut, AlarmBridgeInsp, AlarmPreformInsp, RubberColletNo, OperateContinue, RubberCheck, Chipsize1, Chipsize2, BoundingContinue, ColletCheck, PasteNozzleType, PateNozzleNo, PasteNozzleCond, TsukaigeNeedNo, TsukaigeCheck, SolderThickness1, SolderThickness2, SolderThickness3, SolderThickness4, SolderThicknessAvg, SolderThicknessR, QCFirstLotMode, QCFirstLotAdjust, QCFinishLotMode, QCFinishLotAdjust, QCMiddleLotAb, QCMiddleLotAdjust, MiddleLotJudgement, QCFirstLotAb, QCFinishLotAb, LotJudgement, OPCheck, Remark, Original_MCNo, Original_LotNo, Original_LotStartTime, Original_MCType, Original_OPNo, Original_InputQty, Original_TotalGood, Original_TotalNG, Original_OPRate, Original_MaximumRPM, Original_AverageRPM, Original_MTBF, Original_MTTR, Original_AlarmTotal, Original_LotEndTime, Original_RunTime, Original_StopTime, Original_AlarmTime, Original_SelfConVersion, Original_NetVersion, Original_NoChipQTY, Original_BrideNG, Original_PickupNG, Original_ColletCount, Original_ImpQTY, Original_LotQTY, Original_LotCNT, Original_LotGood, Original_LotNG, Original_LotPFNG, Original_BrideNGMC, Original_CancelPcs, Original_CPDispo, Original_ZeroCount, Original_ZeroEnd, Original_FrameFirstLot, Original_FrameSecondLot, Original_PreformType, Original_PreformFirstLot, Original_PreformSecondLot, Original_PreformFirstLiftTime, Original_PreformSecondLiftTime, Original_AlarmPickUp, Original_AlarmPreform, Original_AlarmBonder, Original_AlarmFrameOut, Original_AlarmBridgeInsp, Original_AlarmPreformInsp, Original_RubberColletNo, Original_OperateContinue, Original_RubberCheck, Original_Chipsize1, Original_Chipsize2, Original_BoundingContinue, Original_ColletCheck, Original_PasteNozzleType, Original_PateNozzleNo, Original_PasteNozzleCond, Original_TsukaigeNeedNo, Original_TsukaigeCheck, Original_SolderThickness1, Original_SolderThickness2, Original_SolderThickness3, Original_SolderThickness4, Original_SolderThicknessAvg, Original_SolderThicknessR, Original_QCFirstLotMode, Original_QCFirstLotAdjust, Original_QCFinishLotMode, Original_QCFinishLotAdjust, Original_QCMiddleLotAb, Original_QCMiddleLotAdjust, Original_MiddleLotJudgement, Original_QCFirstLotAb, Original_QCFinishLotAb, Original_LotJudgement, Original_OPCheck, Original_Remark)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class WBDataTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "WBData"
            tableMapping.ColumnMappings.Add("MCNo", "MCNo")
            tableMapping.ColumnMappings.Add("LotNo", "LotNo")
            tableMapping.ColumnMappings.Add("LotStartTime", "LotStartTime")
            tableMapping.ColumnMappings.Add("MCType", "MCType")
            tableMapping.ColumnMappings.Add("OPNo", "OPNo")
            tableMapping.ColumnMappings.Add("InputQty", "InputQty")
            tableMapping.ColumnMappings.Add("TotalGood", "TotalGood")
            tableMapping.ColumnMappings.Add("TotalNG", "TotalNG")
            tableMapping.ColumnMappings.Add("OPRate", "OPRate")
            tableMapping.ColumnMappings.Add("MaximumRPM", "MaximumRPM")
            tableMapping.ColumnMappings.Add("AverageRPM", "AverageRPM")
            tableMapping.ColumnMappings.Add("MTBF", "MTBF")
            tableMapping.ColumnMappings.Add("MTTR", "MTTR")
            tableMapping.ColumnMappings.Add("AlarmTotal", "AlarmTotal")
            tableMapping.ColumnMappings.Add("LotEndTime", "LotEndTime")
            tableMapping.ColumnMappings.Add("RunTime", "RunTime")
            tableMapping.ColumnMappings.Add("StopTime", "StopTime")
            tableMapping.ColumnMappings.Add("AlarmTime", "AlarmTime")
            tableMapping.ColumnMappings.Add("SelfConVersion", "SelfConVersion")
            tableMapping.ColumnMappings.Add("NetVersion", "NetVersion")
            tableMapping.ColumnMappings.Add("GoodWire", "GoodWire")
            tableMapping.ColumnMappings.Add("Au", "Au")
            tableMapping.ColumnMappings.Add("TotalGoodChip", "TotalGoodChip")
            tableMapping.ColumnMappings.Add("TotalNGChip", "TotalNGChip")
            tableMapping.ColumnMappings.Add("NoChip", "NoChip")
            tableMapping.ColumnMappings.Add("Alarm", "Alarm")
            tableMapping.ColumnMappings.Add("AuUnnecessary", "AuUnnecessary")
            tableMapping.ColumnMappings.Add("AuNormal", "AuNormal")
            tableMapping.ColumnMappings.Add("AuAbnormal", "AuAbnormal")
            tableMapping.ColumnMappings.Add("ChipZure0to50", "ChipZure0to50")
            tableMapping.ColumnMappings.Add("ChipZure51to100", "ChipZure51to100")
            tableMapping.ColumnMappings.Add("ChipZure101to150", "ChipZure101to150")
            tableMapping.ColumnMappings.Add("ChipZure151to200", "ChipZure151to200")
            tableMapping.ColumnMappings.Add("ChipZure201to250", "ChipZure201to250")
            tableMapping.ColumnMappings.Add("ChipZure251toOver", "ChipZure251toOver")
            tableMapping.ColumnMappings.Add("NinshikiRetry", "NinshikiRetry")
            tableMapping.ColumnMappings.Add("SpanRetry", "SpanRetry")
            tableMapping.ColumnMappings.Add("NinshikiAlarmQTY", "NinshikiAlarmQTY")
            tableMapping.ColumnMappings.Add("SpanCounter", "SpanCounter")
            tableMapping.ColumnMappings.Add("NinshikiGood", "NinshikiGood")
            tableMapping.ColumnMappings.Add("NinshikiNG", "NinshikiNG")
            tableMapping.ColumnMappings.Add("PNashi", "PNashi")
            tableMapping.ColumnMappings.Add("CapillaryLife", "CapillaryLife")
            tableMapping.ColumnMappings.Add("ComName", "ComName")
            tableMapping.ColumnMappings.Add("HajikiBe", "HajikiBe")
            tableMapping.ColumnMappings.Add("HajikiAf", "HajikiAf")
            tableMapping.ColumnMappings.Add("HajikiPn", "HajikiPn")
            tableMapping.ColumnMappings.Add("PeelBe", "PeelBe")
            tableMapping.ColumnMappings.Add("PeelAf", "PeelAf")
            tableMapping.ColumnMappings.Add("PeelPn", "PeelPn")
            tableMapping.ColumnMappings.Add("DbBdBe", "DbBdBe")
            tableMapping.ColumnMappings.Add("DbBdAf", "DbBdAf")
            tableMapping.ColumnMappings.Add("DbBdPn", "DbBdPn")
            tableMapping.ColumnMappings.Add("FirstJudgBe", "FirstJudgBe")
            tableMapping.ColumnMappings.Add("FirstJudgAf", "FirstJudgAf")
            tableMapping.ColumnMappings.Add("FirstJudgPn", "FirstJudgPn")
            tableMapping.ColumnMappings.Add("FinJudgBe", "FinJudgBe")
            tableMapping.ColumnMappings.Add("FinJudgAf", "FinJudgAf")
            tableMapping.ColumnMappings.Add("FinJudgPn", "FinJudgPn")
            tableMapping.ColumnMappings.Add("LotJudg", "LotJudg")
            tableMapping.ColumnMappings.Add("LotJudg_Detail", "LotJudg_Detail")
            tableMapping.ColumnMappings.Add("OPJudgement", "OPJudgement")
            tableMapping.ColumnMappings.Add("HBTemp", "HBTemp")
            tableMapping.ColumnMappings.Add("Remark", "Remark")
            tableMapping.ColumnMappings.Add("AlarmEFO", "AlarmEFO")
            tableMapping.ColumnMappings.Add("AlarmDieEyeFail", "AlarmDieEyeFail")
            tableMapping.ColumnMappings.Add("AlarmLeadEyeFail", "AlarmLeadEyeFail")
            tableMapping.ColumnMappings.Add("AlarmSmallBall", "AlarmSmallBall")
            tableMapping.ColumnMappings.Add("AlarmNSOL", "AlarmNSOL")
            tableMapping.ColumnMappings.Add("AlarmNSOP", "AlarmNSOP")
            tableMapping.ColumnMappings.Add("AlarmOther", "AlarmOther")
            tableMapping.ColumnMappings.Add("TPMake", "TPMake")
            tableMapping.ColumnMappings.Add("CAPChange", "CAPChange")
            tableMapping.ColumnMappings.Add("HP_PPChange", "HP_PPChange")
            tableMapping.ColumnMappings.Add("WireSizeChange", "WireSizeChange")
            tableMapping.ColumnMappings.Add("BMBefore", "BMBefore")
            tableMapping.ColumnMappings.Add("NGScrap", "NGScrap")
            tableMapping.ColumnMappings.Add("TPMakeStart", "TPMakeStart")
            tableMapping.ColumnMappings.Add("TPMakeFinish", "TPMakeFinish")
            tableMapping.ColumnMappings.Add("BMMode", "BMMode")
            tableMapping.ColumnMappings.Add("BMStart", "BMStart")
            tableMapping.ColumnMappings.Add("BMFinish", "BMFinish")
            tableMapping.ColumnMappings.Add("BMRequest", "BMRequest")
            tableMapping.ColumnMappings.Add("BMIncharge", "BMIncharge")
            tableMapping.ColumnMappings.Add("TPMakeIncharge", "TPMakeIncharge")
            tableMapping.ColumnMappings.Add("InputQtyAdjust", "InputQtyAdjust")
            tableMapping.ColumnMappings.Add("TotalGoodAdjust", "TotalGoodAdjust")
            tableMapping.ColumnMappings.Add("TotalNGAdjust", "TotalNGAdjust")
            tableMapping.ColumnMappings.Add("GoldWireID1", "GoldWireID1")
            tableMapping.ColumnMappings.Add("GoldWireID2", "GoldWireID2")
            tableMapping.ColumnMappings.Add("CAPID1", "CAPID1")
            tableMapping.ColumnMappings.Add("CAPID2", "CAPID2")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[WBData] WHERE (([MCNo] = @Original_MCNo) AND ([LotNo] = @Origi"& _ 
                "nal_LotNo) AND ([LotStartTime] = @Original_LotStartTime) AND ((@IsNull_MCType = "& _ 
                "1 AND [MCType] IS NULL) OR ([MCType] = @Original_MCType)) AND ((@IsNull_OPNo = 1"& _ 
                " AND [OPNo] IS NULL) OR ([OPNo] = @Original_OPNo)) AND ((@IsNull_InputQty = 1 AN"& _ 
                "D [InputQty] IS NULL) OR ([InputQty] = @Original_InputQty)) AND ((@IsNull_TotalG"& _ 
                "ood = 1 AND [TotalGood] IS NULL) OR ([TotalGood] = @Original_TotalGood)) AND ((@"& _ 
                "IsNull_TotalNG = 1 AND [TotalNG] IS NULL) OR ([TotalNG] = @Original_TotalNG)) AN"& _ 
                "D ((@IsNull_OPRate = 1 AND [OPRate] IS NULL) OR ([OPRate] = @Original_OPRate)) A"& _ 
                "ND ((@IsNull_MaximumRPM = 1 AND [MaximumRPM] IS NULL) OR ([MaximumRPM] = @Origin"& _ 
                "al_MaximumRPM)) AND ((@IsNull_AverageRPM = 1 AND [AverageRPM] IS NULL) OR ([Aver"& _ 
                "ageRPM] = @Original_AverageRPM)) AND ((@IsNull_MTBF = 1 AND [MTBF] IS NULL) OR ("& _ 
                "[MTBF] = @Original_MTBF)) AND ((@IsNull_MTTR = 1 AND [MTTR] IS NULL) OR ([MTTR] "& _ 
                "= @Original_MTTR)) AND ((@IsNull_AlarmTotal = 1 AND [AlarmTotal] IS NULL) OR ([A"& _ 
                "larmTotal] = @Original_AlarmTotal)) AND ((@IsNull_LotEndTime = 1 AND [LotEndTime"& _ 
                "] IS NULL) OR ([LotEndTime] = @Original_LotEndTime)) AND ((@IsNull_RunTime = 1 A"& _ 
                "ND [RunTime] IS NULL) OR ([RunTime] = @Original_RunTime)) AND ((@IsNull_StopTime"& _ 
                " = 1 AND [StopTime] IS NULL) OR ([StopTime] = @Original_StopTime)) AND ((@IsNull"& _ 
                "_AlarmTime = 1 AND [AlarmTime] IS NULL) OR ([AlarmTime] = @Original_AlarmTime)) "& _ 
                "AND ((@IsNull_SelfConVersion = 1 AND [SelfConVersion] IS NULL) OR ([SelfConVersi"& _ 
                "on] = @Original_SelfConVersion)) AND ((@IsNull_NetVersion = 1 AND [NetVersion] I"& _ 
                "S NULL) OR ([NetVersion] = @Original_NetVersion)) AND ((@IsNull_GoodWire = 1 AND"& _ 
                " [GoodWire] IS NULL) OR ([GoodWire] = @Original_GoodWire)) AND ((@IsNull_Au = 1 "& _ 
                "AND [Au] IS NULL) OR ([Au] = @Original_Au)) AND ((@IsNull_TotalGoodChip = 1 AND "& _ 
                "[TotalGoodChip] IS NULL) OR ([TotalGoodChip] = @Original_TotalGoodChip)) AND ((@"& _ 
                "IsNull_TotalNGChip = 1 AND [TotalNGChip] IS NULL) OR ([TotalNGChip] = @Original_"& _ 
                "TotalNGChip)) AND ((@IsNull_NoChip = 1 AND [NoChip] IS NULL) OR ([NoChip] = @Ori"& _ 
                "ginal_NoChip)) AND ((@IsNull_Alarm = 1 AND [Alarm] IS NULL) OR ([Alarm] = @Origi"& _ 
                "nal_Alarm)) AND ((@IsNull_AuUnnecessary = 1 AND [AuUnnecessary] IS NULL) OR ([Au"& _ 
                "Unnecessary] = @Original_AuUnnecessary)) AND ((@IsNull_AuNormal = 1 AND [AuNorma"& _ 
                "l] IS NULL) OR ([AuNormal] = @Original_AuNormal)) AND ((@IsNull_AuAbnormal = 1 A"& _ 
                "ND [AuAbnormal] IS NULL) OR ([AuAbnormal] = @Original_AuAbnormal)) AND ((@IsNull"& _ 
                "_ChipZure0to50 = 1 AND [ChipZure0to50] IS NULL) OR ([ChipZure0to50] = @Original_"& _ 
                "ChipZure0to50)) AND ((@IsNull_ChipZure51to100 = 1 AND [ChipZure51to100] IS NULL)"& _ 
                " OR ([ChipZure51to100] = @Original_ChipZure51to100)) AND ((@IsNull_ChipZure101to"& _ 
                "150 = 1 AND [ChipZure101to150] IS NULL) OR ([ChipZure101to150] = @Original_ChipZ"& _ 
                "ure101to150)) AND ((@IsNull_ChipZure151to200 = 1 AND [ChipZure151to200] IS NULL)"& _ 
                " OR ([ChipZure151to200] = @Original_ChipZure151to200)) AND ((@IsNull_ChipZure201"& _ 
                "to250 = 1 AND [ChipZure201to250] IS NULL) OR ([ChipZure201to250] = @Original_Chi"& _ 
                "pZure201to250)) AND ((@IsNull_ChipZure251toOver = 1 AND [ChipZure251toOver] IS N"& _ 
                "ULL) OR ([ChipZure251toOver] = @Original_ChipZure251toOver)) AND ((@IsNull_Ninsh"& _ 
                "ikiRetry = 1 AND [NinshikiRetry] IS NULL) OR ([NinshikiRetry] = @Original_Ninshi"& _ 
                "kiRetry)) AND ((@IsNull_SpanRetry = 1 AND [SpanRetry] IS NULL) OR ([SpanRetry] ="& _ 
                " @Original_SpanRetry)) AND ((@IsNull_NinshikiAlarmQTY = 1 AND [NinshikiAlarmQTY]"& _ 
                " IS NULL) OR ([NinshikiAlarmQTY] = @Original_NinshikiAlarmQTY)) AND ((@IsNull_Sp"& _ 
                "anCounter = 1 AND [SpanCounter] IS NULL) OR ([SpanCounter] = @Original_SpanCount"& _ 
                "er)) AND ((@IsNull_NinshikiGood = 1 AND [NinshikiGood] IS NULL) OR ([NinshikiGoo"& _ 
                "d] = @Original_NinshikiGood)) AND ((@IsNull_NinshikiNG = 1 AND [NinshikiNG] IS N"& _ 
                "ULL) OR ([NinshikiNG] = @Original_NinshikiNG)) AND ((@IsNull_PNashi = 1 AND [PNa"& _ 
                "shi] IS NULL) OR ([PNashi] = @Original_PNashi)) AND ((@IsNull_CapillaryLife = 1 "& _ 
                "AND [CapillaryLife] IS NULL) OR ([CapillaryLife] = @Original_CapillaryLife)) AND"& _ 
                " ((@IsNull_ComName = 1 AND [ComName] IS NULL) OR ([ComName] = @Original_ComName)"& _ 
                ") AND ((@IsNull_HajikiBe = 1 AND [HajikiBe] IS NULL) OR ([HajikiBe] = @Original_"& _ 
                "HajikiBe)) AND ((@IsNull_HajikiAf = 1 AND [HajikiAf] IS NULL) OR ([HajikiAf] = @"& _ 
                "Original_HajikiAf)) AND ((@IsNull_HajikiPn = 1 AND [HajikiPn] IS NULL) OR ([Haji"& _ 
                "kiPn] = @Original_HajikiPn)) AND ((@IsNull_PeelBe = 1 AND [PeelBe] IS NULL) OR ("& _ 
                "[PeelBe] = @Original_PeelBe)) AND ((@IsNull_PeelAf = 1 AND [PeelAf] IS NULL) OR "& _ 
                "([PeelAf] = @Original_PeelAf)) AND ((@IsNull_PeelPn = 1 AND [PeelPn] IS NULL) OR"& _ 
                " ([PeelPn] = @Original_PeelPn)) AND ((@IsNull_DbBdBe = 1 AND [DbBdBe] IS NULL) O"& _ 
                "R ([DbBdBe] = @Original_DbBdBe)) AND ((@IsNull_DbBdAf = 1 AND [DbBdAf] IS NULL) "& _ 
                "OR ([DbBdAf] = @Original_DbBdAf)) AND ((@IsNull_DbBdPn = 1 AND [DbBdPn] IS NULL)"& _ 
                " OR ([DbBdPn] = @Original_DbBdPn)) AND ((@IsNull_FirstJudgBe = 1 AND [FirstJudgB"& _ 
                "e] IS NULL) OR ([FirstJudgBe] = @Original_FirstJudgBe)) AND ((@IsNull_FirstJudgA"& _ 
                "f = 1 AND [FirstJudgAf] IS NULL) OR ([FirstJudgAf] = @Original_FirstJudgAf)) AND"& _ 
                " ((@IsNull_FirstJudgPn = 1 AND [FirstJudgPn] IS NULL) OR ([FirstJudgPn] = @Origi"& _ 
                "nal_FirstJudgPn)) AND ((@IsNull_FinJudgBe = 1 AND [FinJudgBe] IS NULL) OR ([FinJ"& _ 
                "udgBe] = @Original_FinJudgBe)) AND ((@IsNull_FinJudgAf = 1 AND [FinJudgAf] IS NU"& _ 
                "LL) OR ([FinJudgAf] = @Original_FinJudgAf)) AND ((@IsNull_FinJudgPn = 1 AND [Fin"& _ 
                "JudgPn] IS NULL) OR ([FinJudgPn] = @Original_FinJudgPn)) AND ((@IsNull_LotJudg ="& _ 
                " 1 AND [LotJudg] IS NULL) OR ([LotJudg] = @Original_LotJudg)) AND ((@IsNull_LotJ"& _ 
                "udg_Detail = 1 AND [LotJudg_Detail] IS NULL) OR ([LotJudg_Detail] = @Original_Lo"& _ 
                "tJudg_Detail)) AND ((@IsNull_OPJudgement = 1 AND [OPJudgement] IS NULL) OR ([OPJ"& _ 
                "udgement] = @Original_OPJudgement)) AND ((@IsNull_HBTemp = 1 AND [HBTemp] IS NUL"& _ 
                "L) OR ([HBTemp] = @Original_HBTemp)) AND ((@IsNull_Remark = 1 AND [Remark] IS NU"& _ 
                "LL) OR ([Remark] = @Original_Remark)) AND ((@IsNull_AlarmEFO = 1 AND [AlarmEFO] "& _ 
                "IS NULL) OR ([AlarmEFO] = @Original_AlarmEFO)) AND ((@IsNull_AlarmDieEyeFail = 1"& _ 
                " AND [AlarmDieEyeFail] IS NULL) OR ([AlarmDieEyeFail] = @Original_AlarmDieEyeFai"& _ 
                "l)) AND ((@IsNull_AlarmLeadEyeFail = 1 AND [AlarmLeadEyeFail] IS NULL) OR ([Alar"& _ 
                "mLeadEyeFail] = @Original_AlarmLeadEyeFail)) AND ((@IsNull_AlarmSmallBall = 1 AN"& _ 
                "D [AlarmSmallBall] IS NULL) OR ([AlarmSmallBall] = @Original_AlarmSmallBall)) AN"& _ 
                "D ((@IsNull_AlarmNSOL = 1 AND [AlarmNSOL] IS NULL) OR ([AlarmNSOL] = @Original_A"& _ 
                "larmNSOL)) AND ((@IsNull_AlarmNSOP = 1 AND [AlarmNSOP] IS NULL) OR ([AlarmNSOP] "& _ 
                "= @Original_AlarmNSOP)) AND ((@IsNull_AlarmOther = 1 AND [AlarmOther] IS NULL) O"& _ 
                "R ([AlarmOther] = @Original_AlarmOther)) AND ((@IsNull_TPMake = 1 AND [TPMake] I"& _ 
                "S NULL) OR ([TPMake] = @Original_TPMake)) AND ((@IsNull_CAPChange = 1 AND [CAPCh"& _ 
                "ange] IS NULL) OR ([CAPChange] = @Original_CAPChange)) AND ((@IsNull_HP_PPChange"& _ 
                " = 1 AND [HP_PPChange] IS NULL) OR ([HP_PPChange] = @Original_HP_PPChange)) AND "& _ 
                "((@IsNull_WireSizeChange = 1 AND [WireSizeChange] IS NULL) OR ([WireSizeChange] "& _ 
                "= @Original_WireSizeChange)) AND ((@IsNull_BMBefore = 1 AND [BMBefore] IS NULL) "& _ 
                "OR ([BMBefore] = @Original_BMBefore)) AND ((@IsNull_NGScrap = 1 AND [NGScrap] IS"& _ 
                " NULL) OR ([NGScrap] = @Original_NGScrap)) AND ((@IsNull_TPMakeStart = 1 AND [TP"& _ 
                "MakeStart] IS NULL) OR ([TPMakeStart] = @Original_TPMakeStart)) AND ((@IsNull_TP"& _ 
                "MakeFinish = 1 AND [TPMakeFinish] IS NULL) OR ([TPMakeFinish] = @Original_TPMake"& _ 
                "Finish)) AND ((@IsNull_BMMode = 1 AND [BMMode] IS NULL) OR ([BMMode] = @Original"& _ 
                "_BMMode)) AND ((@IsNull_BMStart = 1 AND [BMStart] IS NULL) OR ([BMStart] = @Orig"& _ 
                "inal_BMStart)) AND ((@IsNull_BMFinish = 1 AND [BMFinish] IS NULL) OR ([BMFinish]"& _ 
                " = @Original_BMFinish)) AND ((@IsNull_BMRequest = 1 AND [BMRequest] IS NULL) OR "& _ 
                "([BMRequest] = @Original_BMRequest)) AND ((@IsNull_BMIncharge = 1 AND [BMIncharg"& _ 
                "e] IS NULL) OR ([BMIncharge] = @Original_BMIncharge)) AND ((@IsNull_TPMakeInchar"& _ 
                "ge = 1 AND [TPMakeIncharge] IS NULL) OR ([TPMakeIncharge] = @Original_TPMakeInch"& _ 
                "arge)) AND ((@IsNull_InputQtyAdjust = 1 AND [InputQtyAdjust] IS NULL) OR ([Input"& _ 
                "QtyAdjust] = @Original_InputQtyAdjust)) AND ((@IsNull_TotalGoodAdjust = 1 AND [T"& _ 
                "otalGoodAdjust] IS NULL) OR ([TotalGoodAdjust] = @Original_TotalGoodAdjust)) AND"& _ 
                " ((@IsNull_TotalNGAdjust = 1 AND [TotalNGAdjust] IS NULL) OR ([TotalNGAdjust] = "& _ 
                "@Original_TotalNGAdjust)) AND ((@IsNull_GoldWireID1 = 1 AND [GoldWireID1] IS NUL"& _ 
                "L) OR ([GoldWireID1] = @Original_GoldWireID1)) AND ((@IsNull_GoldWireID2 = 1 AND"& _ 
                " [GoldWireID2] IS NULL) OR ([GoldWireID2] = @Original_GoldWireID2)) AND ((@IsNul"& _ 
                "l_CAPID1 = 1 AND [CAPID1] IS NULL) OR ([CAPID1] = @Original_CAPID1)) AND ((@IsNu"& _ 
                "ll_CAPID2 = 1 AND [CAPID2] IS NULL) OR ([CAPID2] = @Original_CAPID2)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotStartTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotStartTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MCType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MCType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InputQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InputQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGood", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGood", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPRate", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaximumRPM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaximumRPM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaximumRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaximumRPM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AverageRPM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageRPM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AverageRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageRPM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MTBF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTBF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MTBF", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTBF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MTTR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MTTR", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmTotal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTotal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmTotal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTotal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotEndTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotEndTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotEndTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotEndTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RunTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RunTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StopTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StopTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SelfConVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SelfConVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GoodWire", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoodWire", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GoodWire", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoodWire", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Au", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Au", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Au", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Au", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalGoodChip", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGoodChip", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalGoodChip", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGoodChip", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalNGChip", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNGChip", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalNGChip", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNGChip", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NoChip", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoChip", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NoChip", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoChip", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Alarm", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Alarm", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Alarm", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Alarm", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AuUnnecessary", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuUnnecessary", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AuUnnecessary", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuUnnecessary", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AuNormal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuNormal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AuNormal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuNormal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AuAbnormal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuAbnormal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AuAbnormal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuAbnormal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChipZure0to50", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure0to50", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChipZure0to50", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure0to50", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChipZure51to100", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure51to100", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChipZure51to100", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure51to100", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChipZure101to150", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure101to150", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChipZure101to150", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure101to150", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChipZure151to200", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure151to200", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChipZure151to200", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure151to200", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChipZure201to250", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure201to250", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChipZure201to250", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure201to250", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChipZure251toOver", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure251toOver", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChipZure251toOver", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure251toOver", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NinshikiRetry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiRetry", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NinshikiRetry", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiRetry", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SpanRetry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpanRetry", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SpanRetry", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpanRetry", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NinshikiAlarmQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiAlarmQTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NinshikiAlarmQTY", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiAlarmQTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SpanCounter", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpanCounter", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SpanCounter", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpanCounter", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NinshikiGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiGood", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NinshikiGood", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiGood", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NinshikiNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NinshikiNG", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PNashi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PNashi", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PNashi", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PNashi", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CapillaryLife", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CapillaryLife", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CapillaryLife", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CapillaryLife", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ComName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ComName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ComName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ComName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HajikiBe", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiBe", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HajikiBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiBe", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HajikiAf", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiAf", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HajikiAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiAf", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HajikiPn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiPn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HajikiPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiPn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PeelBe", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelBe", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PeelBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelBe", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PeelAf", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelAf", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PeelAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelAf", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PeelPn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelPn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PeelPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelPn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DbBdBe", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdBe", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DbBdBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdBe", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DbBdAf", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdAf", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DbBdAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdAf", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DbBdPn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdPn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DbBdPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdPn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirstJudgBe", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgBe", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirstJudgBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgBe", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirstJudgAf", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgAf", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirstJudgAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgAf", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirstJudgPn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgPn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirstJudgPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgPn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinJudgBe", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgBe", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinJudgBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgBe", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinJudgAf", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgAf", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinJudgAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgAf", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinJudgPn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgPn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinJudgPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgPn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotJudg", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotJudg", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotJudg_Detail", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg_Detail", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotJudg_Detail", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg_Detail", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPJudgement", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPJudgement", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPJudgement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPJudgement", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HBTemp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HBTemp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HBTemp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HBTemp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remark", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmEFO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmEFO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmEFO", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmEFO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmDieEyeFail", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmDieEyeFail", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmDieEyeFail", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmDieEyeFail", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmLeadEyeFail", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmLeadEyeFail", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmLeadEyeFail", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmLeadEyeFail", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmSmallBall", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmSmallBall", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmSmallBall", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmSmallBall", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmNSOL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNSOL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmNSOL", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNSOL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmNSOP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNSOP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmNSOP", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNSOP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmOther", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmOther", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmOther", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmOther", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TPMake", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMake", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TPMake", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMake", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPChange", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPChange", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPChange", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPChange", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HP_PPChange", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HP_PPChange", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HP_PPChange", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HP_PPChange", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WireSizeChange", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WireSizeChange", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WireSizeChange", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WireSizeChange", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BMBefore", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMBefore", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BMBefore", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMBefore", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NGScrap", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGScrap", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NGScrap", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGScrap", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TPMakeStart", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeStart", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TPMakeStart", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeStart", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TPMakeFinish", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeFinish", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TPMakeFinish", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeFinish", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BMMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMMode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BMMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMMode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BMStart", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMStart", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BMStart", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMStart", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BMFinish", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMFinish", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BMFinish", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMFinish", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BMRequest", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMRequest", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BMRequest", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMRequest", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BMIncharge", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMIncharge", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BMIncharge", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMIncharge", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TPMakeIncharge", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeIncharge", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TPMakeIncharge", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeIncharge", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InputQtyAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQtyAdjust", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InputQtyAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQtyAdjust", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalGoodAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGoodAdjust", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalGoodAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGoodAdjust", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalNGAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNGAdjust", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalNGAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNGAdjust", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GoldWireID1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoldWireID1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GoldWireID1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoldWireID1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GoldWireID2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoldWireID2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GoldWireID2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoldWireID2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPID1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPID1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPID1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPID1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPID2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPID2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPID2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPID2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[WBData] ([MCNo], [LotNo], [LotStartTime], [MCType], [OPNo], [I"& _ 
                "nputQty], [TotalGood], [TotalNG], [OPRate], [MaximumRPM], [AverageRPM], [MTBF], "& _ 
                "[MTTR], [AlarmTotal], [LotEndTime], [RunTime], [StopTime], [AlarmTime], [SelfCon"& _ 
                "Version], [NetVersion], [GoodWire], [Au], [TotalGoodChip], [TotalNGChip], [NoChi"& _ 
                "p], [Alarm], [AuUnnecessary], [AuNormal], [AuAbnormal], [ChipZure0to50], [ChipZu"& _ 
                "re51to100], [ChipZure101to150], [ChipZure151to200], [ChipZure201to250], [ChipZur"& _ 
                "e251toOver], [NinshikiRetry], [SpanRetry], [NinshikiAlarmQTY], [SpanCounter], [N"& _ 
                "inshikiGood], [NinshikiNG], [PNashi], [CapillaryLife], [ComName], [HajikiBe], [H"& _ 
                "ajikiAf], [HajikiPn], [PeelBe], [PeelAf], [PeelPn], [DbBdBe], [DbBdAf], [DbBdPn]"& _ 
                ", [FirstJudgBe], [FirstJudgAf], [FirstJudgPn], [FinJudgBe], [FinJudgAf], [FinJud"& _ 
                "gPn], [LotJudg], [LotJudg_Detail], [OPJudgement], [HBTemp], [Remark], [AlarmEFO]"& _ 
                ", [AlarmDieEyeFail], [AlarmLeadEyeFail], [AlarmSmallBall], [AlarmNSOL], [AlarmNS"& _ 
                "OP], [AlarmOther], [TPMake], [CAPChange], [HP_PPChange], [WireSizeChange], [BMBe"& _ 
                "fore], [NGScrap], [TPMakeStart], [TPMakeFinish], [BMMode], [BMStart], [BMFinish]"& _ 
                ", [BMRequest], [BMIncharge], [TPMakeIncharge], [InputQtyAdjust], [TotalGoodAdjus"& _ 
                "t], [TotalNGAdjust], [GoldWireID1], [GoldWireID2], [CAPID1], [CAPID2]) VALUES (@"& _ 
                "MCNo, @LotNo, @LotStartTime, @MCType, @OPNo, @InputQty, @TotalGood, @TotalNG, @O"& _ 
                "PRate, @MaximumRPM, @AverageRPM, @MTBF, @MTTR, @AlarmTotal, @LotEndTime, @RunTim"& _ 
                "e, @StopTime, @AlarmTime, @SelfConVersion, @NetVersion, @GoodWire, @Au, @TotalGo"& _ 
                "odChip, @TotalNGChip, @NoChip, @Alarm, @AuUnnecessary, @AuNormal, @AuAbnormal, @"& _ 
                "ChipZure0to50, @ChipZure51to100, @ChipZure101to150, @ChipZure151to200, @ChipZure"& _ 
                "201to250, @ChipZure251toOver, @NinshikiRetry, @SpanRetry, @NinshikiAlarmQTY, @Sp"& _ 
                "anCounter, @NinshikiGood, @NinshikiNG, @PNashi, @CapillaryLife, @ComName, @Hajik"& _ 
                "iBe, @HajikiAf, @HajikiPn, @PeelBe, @PeelAf, @PeelPn, @DbBdBe, @DbBdAf, @DbBdPn,"& _ 
                " @FirstJudgBe, @FirstJudgAf, @FirstJudgPn, @FinJudgBe, @FinJudgAf, @FinJudgPn, @"& _ 
                "LotJudg, @LotJudg_Detail, @OPJudgement, @HBTemp, @Remark, @AlarmEFO, @AlarmDieEy"& _ 
                "eFail, @AlarmLeadEyeFail, @AlarmSmallBall, @AlarmNSOL, @AlarmNSOP, @AlarmOther, "& _ 
                "@TPMake, @CAPChange, @HP_PPChange, @WireSizeChange, @BMBefore, @NGScrap, @TPMake"& _ 
                "Start, @TPMakeFinish, @BMMode, @BMStart, @BMFinish, @BMRequest, @BMIncharge, @TP"& _ 
                "MakeIncharge, @InputQtyAdjust, @TotalGoodAdjust, @TotalNGAdjust, @GoldWireID1, @"& _ 
                "GoldWireID2, @CAPID1, @CAPID2);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT MCNo, LotNo, LotStartTime, MCType, OPNo,"& _ 
                " InputQty, TotalGood, TotalNG, OPRate, MaximumRPM, AverageRPM, MTBF, MTTR, Alarm"& _ 
                "Total, LotEndTime, RunTime, StopTime, AlarmTime, SelfConVersion, NetVersion, Goo"& _ 
                "dWire, Au, TotalGoodChip, TotalNGChip, NoChip, Alarm, AuUnnecessary, AuNormal, A"& _ 
                "uAbnormal, ChipZure0to50, ChipZure51to100, ChipZure101to150, ChipZure151to200, C"& _ 
                "hipZure201to250, ChipZure251toOver, NinshikiRetry, SpanRetry, NinshikiAlarmQTY, "& _ 
                "SpanCounter, NinshikiGood, NinshikiNG, PNashi, CapillaryLife, ComName, HajikiBe,"& _ 
                " HajikiAf, HajikiPn, PeelBe, PeelAf, PeelPn, DbBdBe, DbBdAf, DbBdPn, FirstJudgBe"& _ 
                ", FirstJudgAf, FirstJudgPn, FinJudgBe, FinJudgAf, FinJudgPn, LotJudg, LotJudg_De"& _ 
                "tail, OPJudgement, HBTemp, Remark, AlarmEFO, AlarmDieEyeFail, AlarmLeadEyeFail, "& _ 
                "AlarmSmallBall, AlarmNSOL, AlarmNSOP, AlarmOther, TPMake, CAPChange, HP_PPChange"& _ 
                ", WireSizeChange, BMBefore, NGScrap, TPMakeStart, TPMakeFinish, BMMode, BMStart,"& _ 
                " BMFinish, BMRequest, BMIncharge, TPMakeIncharge, InputQtyAdjust, TotalGoodAdjus"& _ 
                "t, TotalNGAdjust, GoldWireID1, GoldWireID2, CAPID1, CAPID2 FROM WBData WHERE (Lo"& _ 
                "tNo = @LotNo) AND (LotStartTime = @LotStartTime) AND (MCNo = @MCNo)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotStartTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotStartTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MCType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InputQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGood", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPRate", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaximumRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaximumRPM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AverageRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageRPM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTBF", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTBF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTTR", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmTotal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotEndTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotEndTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RunTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StopTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SelfConVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GoodWire", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoodWire", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Au", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Au", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalGoodChip", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGoodChip", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalNGChip", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNGChip", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoChip", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoChip", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Alarm", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Alarm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AuUnnecessary", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuUnnecessary", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AuNormal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuNormal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AuAbnormal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuAbnormal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChipZure0to50", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure0to50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChipZure51to100", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure51to100", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChipZure101to150", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure101to150", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChipZure151to200", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure151to200", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChipZure201to250", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure201to250", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChipZure251toOver", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure251toOver", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NinshikiRetry", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiRetry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpanRetry", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpanRetry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NinshikiAlarmQTY", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiAlarmQTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpanCounter", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpanCounter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NinshikiGood", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiGood", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NinshikiNG", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PNashi", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PNashi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CapillaryLife", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CapillaryLife", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ComName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ComName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HajikiBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiBe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HajikiAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiAf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HajikiPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiPn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PeelBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelBe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PeelAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelAf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PeelPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelPn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DbBdBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdBe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DbBdAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdAf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DbBdPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdPn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstJudgBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgBe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstJudgAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgAf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstJudgPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgPn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinJudgBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgBe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinJudgAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgAf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinJudgPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgPn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotJudg", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotJudg_Detail", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg_Detail", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPJudgement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPJudgement", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HBTemp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HBTemp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmEFO", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmEFO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmDieEyeFail", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmDieEyeFail", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmLeadEyeFail", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmLeadEyeFail", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmSmallBall", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmSmallBall", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmNSOL", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNSOL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmNSOP", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNSOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmOther", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmOther", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TPMake", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMake", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPChange", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPChange", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HP_PPChange", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HP_PPChange", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WireSizeChange", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WireSizeChange", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BMBefore", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMBefore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NGScrap", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGScrap", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TPMakeStart", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeStart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TPMakeFinish", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeFinish", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BMMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMMode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BMStart", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMStart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BMFinish", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMFinish", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BMRequest", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMRequest", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BMIncharge", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMIncharge", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TPMakeIncharge", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeIncharge", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InputQtyAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQtyAdjust", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalGoodAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGoodAdjust", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalNGAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNGAdjust", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GoldWireID1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoldWireID1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GoldWireID2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoldWireID2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPID1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPID1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPID2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPID2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[WBData] SET [MCNo] = @MCNo, [LotNo] = @LotNo, [LotStartTime] = @Lot"& _ 
                "StartTime, [MCType] = @MCType, [OPNo] = @OPNo, [InputQty] = @InputQty, [TotalGoo"& _ 
                "d] = @TotalGood, [TotalNG] = @TotalNG, [OPRate] = @OPRate, [MaximumRPM] = @Maxim"& _ 
                "umRPM, [AverageRPM] = @AverageRPM, [MTBF] = @MTBF, [MTTR] = @MTTR, [AlarmTotal] "& _ 
                "= @AlarmTotal, [LotEndTime] = @LotEndTime, [RunTime] = @RunTime, [StopTime] = @S"& _ 
                "topTime, [AlarmTime] = @AlarmTime, [SelfConVersion] = @SelfConVersion, [NetVersi"& _ 
                "on] = @NetVersion, [GoodWire] = @GoodWire, [Au] = @Au, [TotalGoodChip] = @TotalG"& _ 
                "oodChip, [TotalNGChip] = @TotalNGChip, [NoChip] = @NoChip, [Alarm] = @Alarm, [Au"& _ 
                "Unnecessary] = @AuUnnecessary, [AuNormal] = @AuNormal, [AuAbnormal] = @AuAbnorma"& _ 
                "l, [ChipZure0to50] = @ChipZure0to50, [ChipZure51to100] = @ChipZure51to100, [Chip"& _ 
                "Zure101to150] = @ChipZure101to150, [ChipZure151to200] = @ChipZure151to200, [Chip"& _ 
                "Zure201to250] = @ChipZure201to250, [ChipZure251toOver] = @ChipZure251toOver, [Ni"& _ 
                "nshikiRetry] = @NinshikiRetry, [SpanRetry] = @SpanRetry, [NinshikiAlarmQTY] = @N"& _ 
                "inshikiAlarmQTY, [SpanCounter] = @SpanCounter, [NinshikiGood] = @NinshikiGood, ["& _ 
                "NinshikiNG] = @NinshikiNG, [PNashi] = @PNashi, [CapillaryLife] = @CapillaryLife,"& _ 
                " [ComName] = @ComName, [HajikiBe] = @HajikiBe, [HajikiAf] = @HajikiAf, [HajikiPn"& _ 
                "] = @HajikiPn, [PeelBe] = @PeelBe, [PeelAf] = @PeelAf, [PeelPn] = @PeelPn, [DbBd"& _ 
                "Be] = @DbBdBe, [DbBdAf] = @DbBdAf, [DbBdPn] = @DbBdPn, [FirstJudgBe] = @FirstJud"& _ 
                "gBe, [FirstJudgAf] = @FirstJudgAf, [FirstJudgPn] = @FirstJudgPn, [FinJudgBe] = @"& _ 
                "FinJudgBe, [FinJudgAf] = @FinJudgAf, [FinJudgPn] = @FinJudgPn, [LotJudg] = @LotJ"& _ 
                "udg, [LotJudg_Detail] = @LotJudg_Detail, [OPJudgement] = @OPJudgement, [HBTemp] "& _ 
                "= @HBTemp, [Remark] = @Remark, [AlarmEFO] = @AlarmEFO, [AlarmDieEyeFail] = @Alar"& _ 
                "mDieEyeFail, [AlarmLeadEyeFail] = @AlarmLeadEyeFail, [AlarmSmallBall] = @AlarmSm"& _ 
                "allBall, [AlarmNSOL] = @AlarmNSOL, [AlarmNSOP] = @AlarmNSOP, [AlarmOther] = @Ala"& _ 
                "rmOther, [TPMake] = @TPMake, [CAPChange] = @CAPChange, [HP_PPChange] = @HP_PPCha"& _ 
                "nge, [WireSizeChange] = @WireSizeChange, [BMBefore] = @BMBefore, [NGScrap] = @NG"& _ 
                "Scrap, [TPMakeStart] = @TPMakeStart, [TPMakeFinish] = @TPMakeFinish, [BMMode] = "& _ 
                "@BMMode, [BMStart] = @BMStart, [BMFinish] = @BMFinish, [BMRequest] = @BMRequest,"& _ 
                " [BMIncharge] = @BMIncharge, [TPMakeIncharge] = @TPMakeIncharge, [InputQtyAdjust"& _ 
                "] = @InputQtyAdjust, [TotalGoodAdjust] = @TotalGoodAdjust, [TotalNGAdjust] = @To"& _ 
                "talNGAdjust, [GoldWireID1] = @GoldWireID1, [GoldWireID2] = @GoldWireID2, [CAPID1"& _ 
                "] = @CAPID1, [CAPID2] = @CAPID2 WHERE (([MCNo] = @Original_MCNo) AND ([LotNo] = "& _ 
                "@Original_LotNo) AND ([LotStartTime] = @Original_LotStartTime) AND ((@IsNull_MCT"& _ 
                "ype = 1 AND [MCType] IS NULL) OR ([MCType] = @Original_MCType)) AND ((@IsNull_OP"& _ 
                "No = 1 AND [OPNo] IS NULL) OR ([OPNo] = @Original_OPNo)) AND ((@IsNull_InputQty "& _ 
                "= 1 AND [InputQty] IS NULL) OR ([InputQty] = @Original_InputQty)) AND ((@IsNull_"& _ 
                "TotalGood = 1 AND [TotalGood] IS NULL) OR ([TotalGood] = @Original_TotalGood)) A"& _ 
                "ND ((@IsNull_TotalNG = 1 AND [TotalNG] IS NULL) OR ([TotalNG] = @Original_TotalN"& _ 
                "G)) AND ((@IsNull_OPRate = 1 AND [OPRate] IS NULL) OR ([OPRate] = @Original_OPRa"& _ 
                "te)) AND ((@IsNull_MaximumRPM = 1 AND [MaximumRPM] IS NULL) OR ([MaximumRPM] = @"& _ 
                "Original_MaximumRPM)) AND ((@IsNull_AverageRPM = 1 AND [AverageRPM] IS NULL) OR "& _ 
                "([AverageRPM] = @Original_AverageRPM)) AND ((@IsNull_MTBF = 1 AND [MTBF] IS NULL"& _ 
                ") OR ([MTBF] = @Original_MTBF)) AND ((@IsNull_MTTR = 1 AND [MTTR] IS NULL) OR (["& _ 
                "MTTR] = @Original_MTTR)) AND ((@IsNull_AlarmTotal = 1 AND [AlarmTotal] IS NULL) "& _ 
                "OR ([AlarmTotal] = @Original_AlarmTotal)) AND ((@IsNull_LotEndTime = 1 AND [LotE"& _ 
                "ndTime] IS NULL) OR ([LotEndTime] = @Original_LotEndTime)) AND ((@IsNull_RunTime"& _ 
                " = 1 AND [RunTime] IS NULL) OR ([RunTime] = @Original_RunTime)) AND ((@IsNull_St"& _ 
                "opTime = 1 AND [StopTime] IS NULL) OR ([StopTime] = @Original_StopTime)) AND ((@"& _ 
                "IsNull_AlarmTime = 1 AND [AlarmTime] IS NULL) OR ([AlarmTime] = @Original_AlarmT"& _ 
                "ime)) AND ((@IsNull_SelfConVersion = 1 AND [SelfConVersion] IS NULL) OR ([SelfCo"& _ 
                "nVersion] = @Original_SelfConVersion)) AND ((@IsNull_NetVersion = 1 AND [NetVers"& _ 
                "ion] IS NULL) OR ([NetVersion] = @Original_NetVersion)) AND ((@IsNull_GoodWire ="& _ 
                " 1 AND [GoodWire] IS NULL) OR ([GoodWire] = @Original_GoodWire)) AND ((@IsNull_A"& _ 
                "u = 1 AND [Au] IS NULL) OR ([Au] = @Original_Au)) AND ((@IsNull_TotalGoodChip = "& _ 
                "1 AND [TotalGoodChip] IS NULL) OR ([TotalGoodChip] = @Original_TotalGoodChip)) A"& _ 
                "ND ((@IsNull_TotalNGChip = 1 AND [TotalNGChip] IS NULL) OR ([TotalNGChip] = @Ori"& _ 
                "ginal_TotalNGChip)) AND ((@IsNull_NoChip = 1 AND [NoChip] IS NULL) OR ([NoChip] "& _ 
                "= @Original_NoChip)) AND ((@IsNull_Alarm = 1 AND [Alarm] IS NULL) OR ([Alarm] = "& _ 
                "@Original_Alarm)) AND ((@IsNull_AuUnnecessary = 1 AND [AuUnnecessary] IS NULL) O"& _ 
                "R ([AuUnnecessary] = @Original_AuUnnecessary)) AND ((@IsNull_AuNormal = 1 AND [A"& _ 
                "uNormal] IS NULL) OR ([AuNormal] = @Original_AuNormal)) AND ((@IsNull_AuAbnormal"& _ 
                " = 1 AND [AuAbnormal] IS NULL) OR ([AuAbnormal] = @Original_AuAbnormal)) AND ((@"& _ 
                "IsNull_ChipZure0to50 = 1 AND [ChipZure0to50] IS NULL) OR ([ChipZure0to50] = @Ori"& _ 
                "ginal_ChipZure0to50)) AND ((@IsNull_ChipZure51to100 = 1 AND [ChipZure51to100] IS"& _ 
                " NULL) OR ([ChipZure51to100] = @Original_ChipZure51to100)) AND ((@IsNull_ChipZur"& _ 
                "e101to150 = 1 AND [ChipZure101to150] IS NULL) OR ([ChipZure101to150] = @Original"& _ 
                "_ChipZure101to150)) AND ((@IsNull_ChipZure151to200 = 1 AND [ChipZure151to200] IS"& _ 
                " NULL) OR ([ChipZure151to200] = @Original_ChipZure151to200)) AND ((@IsNull_ChipZ"& _ 
                "ure201to250 = 1 AND [ChipZure201to250] IS NULL) OR ([ChipZure201to250] = @Origin"& _ 
                "al_ChipZure201to250)) AND ((@IsNull_ChipZure251toOver = 1 AND [ChipZure251toOver"& _ 
                "] IS NULL) OR ([ChipZure251toOver] = @Original_ChipZure251toOver)) AND ((@IsNull"& _ 
                "_NinshikiRetry = 1 AND [NinshikiRetry] IS NULL) OR ([NinshikiRetry] = @Original_"& _ 
                "NinshikiRetry)) AND ((@IsNull_SpanRetry = 1 AND [SpanRetry] IS NULL) OR ([SpanRe"& _ 
                "try] = @Original_SpanRetry)) AND ((@IsNull_NinshikiAlarmQTY = 1 AND [NinshikiAla"& _ 
                "rmQTY] IS NULL) OR ([NinshikiAlarmQTY] = @Original_NinshikiAlarmQTY)) AND ((@IsN"& _ 
                "ull_SpanCounter = 1 AND [SpanCounter] IS NULL) OR ([SpanCounter] = @Original_Spa"& _ 
                "nCounter)) AND ((@IsNull_NinshikiGood = 1 AND [NinshikiGood] IS NULL) OR ([Ninsh"& _ 
                "ikiGood] = @Original_NinshikiGood)) AND ((@IsNull_NinshikiNG = 1 AND [NinshikiNG"& _ 
                "] IS NULL) OR ([NinshikiNG] = @Original_NinshikiNG)) AND ((@IsNull_PNashi = 1 AN"& _ 
                "D [PNashi] IS NULL) OR ([PNashi] = @Original_PNashi)) AND ((@IsNull_CapillaryLif"& _ 
                "e = 1 AND [CapillaryLife] IS NULL) OR ([CapillaryLife] = @Original_CapillaryLife"& _ 
                ")) AND ((@IsNull_ComName = 1 AND [ComName] IS NULL) OR ([ComName] = @Original_Co"& _ 
                "mName)) AND ((@IsNull_HajikiBe = 1 AND [HajikiBe] IS NULL) OR ([HajikiBe] = @Ori"& _ 
                "ginal_HajikiBe)) AND ((@IsNull_HajikiAf = 1 AND [HajikiAf] IS NULL) OR ([HajikiA"& _ 
                "f] = @Original_HajikiAf)) AND ((@IsNull_HajikiPn = 1 AND [HajikiPn] IS NULL) OR "& _ 
                "([HajikiPn] = @Original_HajikiPn)) AND ((@IsNull_PeelBe = 1 AND [PeelBe] IS NULL"& _ 
                ") OR ([PeelBe] = @Original_PeelBe)) AND ((@IsNull_PeelAf = 1 AND [PeelAf] IS NUL"& _ 
                "L) OR ([PeelAf] = @Original_PeelAf)) AND ((@IsNull_PeelPn = 1 AND [PeelPn] IS NU"& _ 
                "LL) OR ([PeelPn] = @Original_PeelPn)) AND ((@IsNull_DbBdBe = 1 AND [DbBdBe] IS N"& _ 
                "ULL) OR ([DbBdBe] = @Original_DbBdBe)) AND ((@IsNull_DbBdAf = 1 AND [DbBdAf] IS "& _ 
                "NULL) OR ([DbBdAf] = @Original_DbBdAf)) AND ((@IsNull_DbBdPn = 1 AND [DbBdPn] IS"& _ 
                " NULL) OR ([DbBdPn] = @Original_DbBdPn)) AND ((@IsNull_FirstJudgBe = 1 AND [Firs"& _ 
                "tJudgBe] IS NULL) OR ([FirstJudgBe] = @Original_FirstJudgBe)) AND ((@IsNull_Firs"& _ 
                "tJudgAf = 1 AND [FirstJudgAf] IS NULL) OR ([FirstJudgAf] = @Original_FirstJudgAf"& _ 
                ")) AND ((@IsNull_FirstJudgPn = 1 AND [FirstJudgPn] IS NULL) OR ([FirstJudgPn] = "& _ 
                "@Original_FirstJudgPn)) AND ((@IsNull_FinJudgBe = 1 AND [FinJudgBe] IS NULL) OR "& _ 
                "([FinJudgBe] = @Original_FinJudgBe)) AND ((@IsNull_FinJudgAf = 1 AND [FinJudgAf]"& _ 
                " IS NULL) OR ([FinJudgAf] = @Original_FinJudgAf)) AND ((@IsNull_FinJudgPn = 1 AN"& _ 
                "D [FinJudgPn] IS NULL) OR ([FinJudgPn] = @Original_FinJudgPn)) AND ((@IsNull_Lot"& _ 
                "Judg = 1 AND [LotJudg] IS NULL) OR ([LotJudg] = @Original_LotJudg)) AND ((@IsNul"& _ 
                "l_LotJudg_Detail = 1 AND [LotJudg_Detail] IS NULL) OR ([LotJudg_Detail] = @Origi"& _ 
                "nal_LotJudg_Detail)) AND ((@IsNull_OPJudgement = 1 AND [OPJudgement] IS NULL) OR"& _ 
                " ([OPJudgement] = @Original_OPJudgement)) AND ((@IsNull_HBTemp = 1 AND [HBTemp] "& _ 
                "IS NULL) OR ([HBTemp] = @Original_HBTemp)) AND ((@IsNull_Remark = 1 AND [Remark]"& _ 
                " IS NULL) OR ([Remark] = @Original_Remark)) AND ((@IsNull_AlarmEFO = 1 AND [Alar"& _ 
                "mEFO] IS NULL) OR ([AlarmEFO] = @Original_AlarmEFO)) AND ((@IsNull_AlarmDieEyeFa"& _ 
                "il = 1 AND [AlarmDieEyeFail] IS NULL) OR ([AlarmDieEyeFail] = @Original_AlarmDie"& _ 
                "EyeFail)) AND ((@IsNull_AlarmLeadEyeFail = 1 AND [AlarmLeadEyeFail] IS NULL) OR "& _ 
                "([AlarmLeadEyeFail] = @Original_AlarmLeadEyeFail)) AND ((@IsNull_AlarmSmallBall "& _ 
                "= 1 AND [AlarmSmallBall] IS NULL) OR ([AlarmSmallBall] = @Original_AlarmSmallBal"& _ 
                "l)) AND ((@IsNull_AlarmNSOL = 1 AND [AlarmNSOL] IS NULL) OR ([AlarmNSOL] = @Orig"& _ 
                "inal_AlarmNSOL)) AND ((@IsNull_AlarmNSOP = 1 AND [AlarmNSOP] IS NULL) OR ([Alarm"& _ 
                "NSOP] = @Original_AlarmNSOP)) AND ((@IsNull_AlarmOther = 1 AND [AlarmOther] IS N"& _ 
                "ULL) OR ([AlarmOther] = @Original_AlarmOther)) AND ((@IsNull_TPMake = 1 AND [TPM"& _ 
                "ake] IS NULL) OR ([TPMake] = @Original_TPMake)) AND ((@IsNull_CAPChange = 1 AND "& _ 
                "[CAPChange] IS NULL) OR ([CAPChange] = @Original_CAPChange)) AND ((@IsNull_HP_PP"& _ 
                "Change = 1 AND [HP_PPChange] IS NULL) OR ([HP_PPChange] = @Original_HP_PPChange)"& _ 
                ") AND ((@IsNull_WireSizeChange = 1 AND [WireSizeChange] IS NULL) OR ([WireSizeCh"& _ 
                "ange] = @Original_WireSizeChange)) AND ((@IsNull_BMBefore = 1 AND [BMBefore] IS "& _ 
                "NULL) OR ([BMBefore] = @Original_BMBefore)) AND ((@IsNull_NGScrap = 1 AND [NGScr"& _ 
                "ap] IS NULL) OR ([NGScrap] = @Original_NGScrap)) AND ((@IsNull_TPMakeStart = 1 A"& _ 
                "ND [TPMakeStart] IS NULL) OR ([TPMakeStart] = @Original_TPMakeStart)) AND ((@IsN"& _ 
                "ull_TPMakeFinish = 1 AND [TPMakeFinish] IS NULL) OR ([TPMakeFinish] = @Original_"& _ 
                "TPMakeFinish)) AND ((@IsNull_BMMode = 1 AND [BMMode] IS NULL) OR ([BMMode] = @Or"& _ 
                "iginal_BMMode)) AND ((@IsNull_BMStart = 1 AND [BMStart] IS NULL) OR ([BMStart] ="& _ 
                " @Original_BMStart)) AND ((@IsNull_BMFinish = 1 AND [BMFinish] IS NULL) OR ([BMF"& _ 
                "inish] = @Original_BMFinish)) AND ((@IsNull_BMRequest = 1 AND [BMRequest] IS NUL"& _ 
                "L) OR ([BMRequest] = @Original_BMRequest)) AND ((@IsNull_BMIncharge = 1 AND [BMI"& _ 
                "ncharge] IS NULL) OR ([BMIncharge] = @Original_BMIncharge)) AND ((@IsNull_TPMake"& _ 
                "Incharge = 1 AND [TPMakeIncharge] IS NULL) OR ([TPMakeIncharge] = @Original_TPMa"& _ 
                "keIncharge)) AND ((@IsNull_InputQtyAdjust = 1 AND [InputQtyAdjust] IS NULL) OR ("& _ 
                "[InputQtyAdjust] = @Original_InputQtyAdjust)) AND ((@IsNull_TotalGoodAdjust = 1 "& _ 
                "AND [TotalGoodAdjust] IS NULL) OR ([TotalGoodAdjust] = @Original_TotalGoodAdjust"& _ 
                ")) AND ((@IsNull_TotalNGAdjust = 1 AND [TotalNGAdjust] IS NULL) OR ([TotalNGAdju"& _ 
                "st] = @Original_TotalNGAdjust)) AND ((@IsNull_GoldWireID1 = 1 AND [GoldWireID1] "& _ 
                "IS NULL) OR ([GoldWireID1] = @Original_GoldWireID1)) AND ((@IsNull_GoldWireID2 ="& _ 
                " 1 AND [GoldWireID2] IS NULL) OR ([GoldWireID2] = @Original_GoldWireID2)) AND (("& _ 
                "@IsNull_CAPID1 = 1 AND [CAPID1] IS NULL) OR ([CAPID1] = @Original_CAPID1)) AND ("& _ 
                "(@IsNull_CAPID2 = 1 AND [CAPID2] IS NULL) OR ([CAPID2] = @Original_CAPID2)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"S"& _ 
                "ELECT MCNo, LotNo, LotStartTime, MCType, OPNo, InputQty, TotalGood, TotalNG, OPR"& _ 
                "ate, MaximumRPM, AverageRPM, MTBF, MTTR, AlarmTotal, LotEndTime, RunTime, StopTi"& _ 
                "me, AlarmTime, SelfConVersion, NetVersion, GoodWire, Au, TotalGoodChip, TotalNGC"& _ 
                "hip, NoChip, Alarm, AuUnnecessary, AuNormal, AuAbnormal, ChipZure0to50, ChipZure"& _ 
                "51to100, ChipZure101to150, ChipZure151to200, ChipZure201to250, ChipZure251toOver"& _ 
                ", NinshikiRetry, SpanRetry, NinshikiAlarmQTY, SpanCounter, NinshikiGood, Ninshik"& _ 
                "iNG, PNashi, CapillaryLife, ComName, HajikiBe, HajikiAf, HajikiPn, PeelBe, PeelA"& _ 
                "f, PeelPn, DbBdBe, DbBdAf, DbBdPn, FirstJudgBe, FirstJudgAf, FirstJudgPn, FinJud"& _ 
                "gBe, FinJudgAf, FinJudgPn, LotJudg, LotJudg_Detail, OPJudgement, HBTemp, Remark,"& _ 
                " AlarmEFO, AlarmDieEyeFail, AlarmLeadEyeFail, AlarmSmallBall, AlarmNSOL, AlarmNS"& _ 
                "OP, AlarmOther, TPMake, CAPChange, HP_PPChange, WireSizeChange, BMBefore, NGScra"& _ 
                "p, TPMakeStart, TPMakeFinish, BMMode, BMStart, BMFinish, BMRequest, BMIncharge, "& _ 
                "TPMakeIncharge, InputQtyAdjust, TotalGoodAdjust, TotalNGAdjust, GoldWireID1, Gol"& _ 
                "dWireID2, CAPID1, CAPID2 FROM WBData WHERE (LotNo = @LotNo) AND (LotStartTime = "& _ 
                "@LotStartTime) AND (MCNo = @MCNo)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotStartTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotStartTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MCType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InputQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGood", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPRate", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaximumRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaximumRPM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AverageRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageRPM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTBF", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTBF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTTR", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmTotal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotEndTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotEndTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RunTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StopTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SelfConVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GoodWire", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoodWire", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Au", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Au", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalGoodChip", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGoodChip", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalNGChip", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNGChip", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoChip", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoChip", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Alarm", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Alarm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AuUnnecessary", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuUnnecessary", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AuNormal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuNormal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AuAbnormal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuAbnormal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChipZure0to50", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure0to50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChipZure51to100", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure51to100", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChipZure101to150", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure101to150", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChipZure151to200", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure151to200", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChipZure201to250", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure201to250", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChipZure251toOver", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure251toOver", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NinshikiRetry", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiRetry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpanRetry", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpanRetry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NinshikiAlarmQTY", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiAlarmQTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpanCounter", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpanCounter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NinshikiGood", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiGood", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NinshikiNG", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PNashi", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PNashi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CapillaryLife", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CapillaryLife", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ComName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ComName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HajikiBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiBe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HajikiAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiAf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HajikiPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiPn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PeelBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelBe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PeelAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelAf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PeelPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelPn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DbBdBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdBe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DbBdAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdAf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DbBdPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdPn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstJudgBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgBe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstJudgAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgAf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstJudgPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgPn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinJudgBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgBe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinJudgAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgAf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinJudgPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgPn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotJudg", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotJudg_Detail", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg_Detail", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPJudgement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPJudgement", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HBTemp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HBTemp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmEFO", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmEFO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmDieEyeFail", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmDieEyeFail", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmLeadEyeFail", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmLeadEyeFail", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmSmallBall", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmSmallBall", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmNSOL", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNSOL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmNSOP", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNSOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmOther", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmOther", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TPMake", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMake", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPChange", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPChange", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HP_PPChange", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HP_PPChange", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WireSizeChange", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WireSizeChange", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BMBefore", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMBefore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NGScrap", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGScrap", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TPMakeStart", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeStart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TPMakeFinish", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeFinish", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BMMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMMode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BMStart", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMStart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BMFinish", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMFinish", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BMRequest", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMRequest", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BMIncharge", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMIncharge", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TPMakeIncharge", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeIncharge", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InputQtyAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQtyAdjust", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalGoodAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGoodAdjust", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalNGAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNGAdjust", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GoldWireID1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoldWireID1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GoldWireID2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoldWireID2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPID1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPID1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPID2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPID2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotStartTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotStartTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MCType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MCType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InputQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InputQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGood", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGood", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPRate", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaximumRPM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaximumRPM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaximumRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaximumRPM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AverageRPM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageRPM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AverageRPM", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageRPM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MTBF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTBF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MTBF", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTBF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MTTR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MTTR", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmTotal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTotal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmTotal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTotal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotEndTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotEndTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotEndTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotEndTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RunTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RunTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StopTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StopTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmTime", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SelfConVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SelfConVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GoodWire", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoodWire", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GoodWire", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoodWire", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Au", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Au", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Au", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Au", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalGoodChip", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGoodChip", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalGoodChip", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGoodChip", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalNGChip", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNGChip", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalNGChip", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNGChip", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NoChip", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoChip", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NoChip", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoChip", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Alarm", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Alarm", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Alarm", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Alarm", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AuUnnecessary", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuUnnecessary", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AuUnnecessary", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuUnnecessary", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AuNormal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuNormal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AuNormal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuNormal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AuAbnormal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuAbnormal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AuAbnormal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuAbnormal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChipZure0to50", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure0to50", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChipZure0to50", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure0to50", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChipZure51to100", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure51to100", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChipZure51to100", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure51to100", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChipZure101to150", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure101to150", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChipZure101to150", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure101to150", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChipZure151to200", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure151to200", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChipZure151to200", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure151to200", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChipZure201to250", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure201to250", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChipZure201to250", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure201to250", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChipZure251toOver", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure251toOver", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChipZure251toOver", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChipZure251toOver", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NinshikiRetry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiRetry", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NinshikiRetry", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiRetry", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SpanRetry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpanRetry", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SpanRetry", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpanRetry", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NinshikiAlarmQTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiAlarmQTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NinshikiAlarmQTY", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiAlarmQTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SpanCounter", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpanCounter", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SpanCounter", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpanCounter", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NinshikiGood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiGood", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NinshikiGood", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiGood", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NinshikiNG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiNG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NinshikiNG", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NinshikiNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PNashi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PNashi", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PNashi", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PNashi", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CapillaryLife", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CapillaryLife", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CapillaryLife", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CapillaryLife", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ComName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ComName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ComName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ComName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HajikiBe", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiBe", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HajikiBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiBe", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HajikiAf", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiAf", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HajikiAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiAf", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HajikiPn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiPn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HajikiPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HajikiPn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PeelBe", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelBe", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PeelBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelBe", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PeelAf", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelAf", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PeelAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelAf", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PeelPn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelPn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PeelPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeelPn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DbBdBe", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdBe", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DbBdBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdBe", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DbBdAf", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdAf", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DbBdAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdAf", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DbBdPn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdPn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DbBdPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DbBdPn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirstJudgBe", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgBe", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirstJudgBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgBe", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirstJudgAf", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgAf", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirstJudgAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgAf", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirstJudgPn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgPn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirstJudgPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstJudgPn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinJudgBe", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgBe", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinJudgBe", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgBe", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinJudgAf", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgAf", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinJudgAf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgAf", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinJudgPn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgPn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinJudgPn", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinJudgPn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotJudg", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotJudg", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotJudg_Detail", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg_Detail", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotJudg_Detail", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg_Detail", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPJudgement", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPJudgement", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPJudgement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPJudgement", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HBTemp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HBTemp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HBTemp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HBTemp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remark", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmEFO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmEFO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmEFO", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmEFO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmDieEyeFail", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmDieEyeFail", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmDieEyeFail", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmDieEyeFail", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmLeadEyeFail", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmLeadEyeFail", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmLeadEyeFail", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmLeadEyeFail", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmSmallBall", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmSmallBall", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmSmallBall", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmSmallBall", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmNSOL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNSOL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmNSOL", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNSOL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmNSOP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNSOP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmNSOP", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNSOP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmOther", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmOther", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmOther", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmOther", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TPMake", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMake", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TPMake", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMake", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPChange", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPChange", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPChange", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPChange", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HP_PPChange", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HP_PPChange", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HP_PPChange", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HP_PPChange", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WireSizeChange", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WireSizeChange", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WireSizeChange", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WireSizeChange", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BMBefore", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMBefore", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BMBefore", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMBefore", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NGScrap", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGScrap", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NGScrap", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGScrap", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TPMakeStart", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeStart", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TPMakeStart", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeStart", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TPMakeFinish", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeFinish", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TPMakeFinish", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeFinish", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BMMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMMode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BMMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMMode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BMStart", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMStart", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BMStart", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMStart", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BMFinish", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMFinish", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BMFinish", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMFinish", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BMRequest", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMRequest", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BMRequest", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMRequest", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BMIncharge", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMIncharge", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BMIncharge", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BMIncharge", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TPMakeIncharge", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeIncharge", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TPMakeIncharge", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPMakeIncharge", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InputQtyAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQtyAdjust", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InputQtyAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InputQtyAdjust", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalGoodAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGoodAdjust", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalGoodAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGoodAdjust", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalNGAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNGAdjust", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalNGAdjust", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNGAdjust", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GoldWireID1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoldWireID1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GoldWireID1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoldWireID1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GoldWireID2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoldWireID2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GoldWireID2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoldWireID2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPID1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPID1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPID1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPID1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPID2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPID2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPID2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPID2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Selfcon_DB_WB_Inspecction_Lot.My.MySettings.Default.DBxConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT MCNo, LotNo, LotStartTime, MCType, OPNo, InputQty, TotalGood, TotalNG, OPR"& _ 
                "ate, MaximumRPM, AverageRPM, MTBF, MTTR, AlarmTotal, LotEndTime, RunTime, StopTi"& _ 
                "me, AlarmTime, SelfConVersion, NetVersion, GoodWire, Au, TotalGoodChip, TotalNGC"& _ 
                "hip, NoChip, Alarm, AuUnnecessary, AuNormal, AuAbnormal, ChipZure0to50, ChipZure"& _ 
                "51to100, ChipZure101to150, ChipZure151to200, ChipZure201to250, ChipZure251toOver"& _ 
                ", NinshikiRetry, SpanRetry, NinshikiAlarmQTY, SpanCounter, NinshikiGood, Ninshik"& _ 
                "iNG, PNashi, CapillaryLife, ComName, HajikiBe, HajikiAf, HajikiPn, PeelBe, PeelA"& _ 
                "f, PeelPn, DbBdBe, DbBdAf, DbBdPn, FirstJudgBe, FirstJudgAf, FirstJudgPn, FinJud"& _ 
                "gBe, FinJudgAf, FinJudgPn, LotJudg, LotJudg_Detail, OPJudgement, HBTemp, Remark,"& _ 
                " AlarmEFO, AlarmDieEyeFail, AlarmLeadEyeFail, AlarmSmallBall, AlarmNSOL, AlarmNS"& _ 
                "OP, AlarmOther, TPMake, CAPChange, HP_PPChange, WireSizeChange, BMBefore, NGScra"& _ 
                "p, TPMakeStart, TPMakeFinish, BMMode, BMStart, BMFinish, BMRequest, BMIncharge, "& _ 
                "TPMakeIncharge, InputQtyAdjust, TotalGoodAdjust, TotalNGAdjust, GoldWireID1, Gol"& _ 
                "dWireID2, CAPID1, CAPID2 FROM dbo.WBData"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT                  TOP (1) MCNo, LotNo, LotStartTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM                  "& _ 
                "   WBData"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE                   (LotNo = @LotNo)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DBxDataSet.WBDataDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DBxDataSet.WBDataDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DBxDataSet.WBDataDataTable = New DBxDataSet.WBDataDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DBxDataSet.WBDataDataTable, ByVal LotNo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(LotNo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DBxDataSet.WBDataDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DBxDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "WBData")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_MCNo As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_LotStartTime As Date,  _
                    ByVal Original_MCType As String,  _
                    ByVal Original_OPNo As String,  _
                    ByVal Original_InputQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalGood As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalNG As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OPRate As Global.System.Nullable(Of Single),  _
                    ByVal Original_MaximumRPM As Global.System.Nullable(Of Single),  _
                    ByVal Original_AverageRPM As Global.System.Nullable(Of Single),  _
                    ByVal Original_MTBF As Global.System.Nullable(Of Single),  _
                    ByVal Original_MTTR As Global.System.Nullable(Of Single),  _
                    ByVal Original_AlarmTotal As Global.System.Nullable(Of Short),  _
                    ByVal Original_LotEndTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_RunTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_StopTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_AlarmTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_SelfConVersion As String,  _
                    ByVal Original_NetVersion As String,  _
                    ByVal Original_GoodWire As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Au As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalGoodChip As Global.System.Nullable(Of Short),  _
                    ByVal Original_TotalNGChip As Global.System.Nullable(Of Short),  _
                    ByVal Original_NoChip As Global.System.Nullable(Of Short),  _
                    ByVal Original_Alarm As Global.System.Nullable(Of Single),  _
                    ByVal Original_AuUnnecessary As Global.System.Nullable(Of Short),  _
                    ByVal Original_AuNormal As Global.System.Nullable(Of Short),  _
                    ByVal Original_AuAbnormal As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure0to50 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure51to100 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure101to150 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure151to200 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure201to250 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure251toOver As Global.System.Nullable(Of Short),  _
                    ByVal Original_NinshikiRetry As Global.System.Nullable(Of Short),  _
                    ByVal Original_SpanRetry As Global.System.Nullable(Of Short),  _
                    ByVal Original_NinshikiAlarmQTY As Global.System.Nullable(Of Short),  _
                    ByVal Original_SpanCounter As Global.System.Nullable(Of Short),  _
                    ByVal Original_NinshikiGood As Global.System.Nullable(Of Short),  _
                    ByVal Original_NinshikiNG As Global.System.Nullable(Of Short),  _
                    ByVal Original_PNashi As Global.System.Nullable(Of Short),  _
                    ByVal Original_CapillaryLife As Global.System.Nullable(Of Single),  _
                    ByVal Original_ComName As String,  _
                    ByVal Original_HajikiBe As String,  _
                    ByVal Original_HajikiAf As String,  _
                    ByVal Original_HajikiPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_PeelBe As String,  _
                    ByVal Original_PeelAf As String,  _
                    ByVal Original_PeelPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_DbBdBe As String,  _
                    ByVal Original_DbBdAf As String,  _
                    ByVal Original_DbBdPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_FirstJudgBe As String,  _
                    ByVal Original_FirstJudgAf As String,  _
                    ByVal Original_FirstJudgPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_FinJudgBe As String,  _
                    ByVal Original_FinJudgAf As String,  _
                    ByVal Original_FinJudgPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_LotJudg As String,  _
                    ByVal Original_LotJudg_Detail As Global.System.Nullable(Of Short),  _
                    ByVal Original_OPJudgement As String,  _
                    ByVal Original_HBTemp As Global.System.Nullable(Of Short),  _
                    ByVal Original_Remark As String,  _
                    ByVal Original_AlarmEFO As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmDieEyeFail As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmLeadEyeFail As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmSmallBall As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmNSOL As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmNSOP As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmOther As Global.System.Nullable(Of Short),  _
                    ByVal Original_TPMake As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPChange As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_HP_PPChange As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_WireSizeChange As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BMBefore As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NGScrap As Global.System.Nullable(Of Short),  _
                    ByVal Original_TPMakeStart As Global.System.Nullable(Of Date),  _
                    ByVal Original_TPMakeFinish As Global.System.Nullable(Of Date),  _
                    ByVal Original_BMMode As String,  _
                    ByVal Original_BMStart As Global.System.Nullable(Of Date),  _
                    ByVal Original_BMFinish As Global.System.Nullable(Of Date),  _
                    ByVal Original_BMRequest As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BMIncharge As String,  _
                    ByVal Original_TPMakeIncharge As String,  _
                    ByVal Original_InputQtyAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalGoodAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalNGAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoldWireID1 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoldWireID2 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CAPID1 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CAPID2 As Global.System.Nullable(Of Integer)) As Integer
            If (Original_MCNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MCNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_MCNo,String)
            End If
            If (Original_LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_LotNo,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_LotStartTime,Date)
            If (Original_MCType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_MCType,String)
            End If
            If (Original_OPNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_OPNo,String)
            End If
            If (Original_InputQty.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_InputQty.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalGood.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_TotalGood.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalNG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_TotalNG.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_OPRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_OPRate.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_MaximumRPM.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_MaximumRPM.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_AverageRPM.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_AverageRPM.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_MTBF.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_MTBF.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_MTTR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_MTTR.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmTotal.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_AlarmTotal.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_LotEndTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_LotEndTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_RunTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_RunTime.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_StopTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_StopTime.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_AlarmTime.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_SelfConVersion Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_SelfConVersion,String)
            End If
            If (Original_NetVersion Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_NetVersion,String)
            End If
            If (Original_GoodWire.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_GoodWire.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_Au.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_Au.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalGoodChip.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_TotalGoodChip.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalNGChip.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_TotalNGChip.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_NoChip.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_NoChip.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_Alarm.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_Alarm.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_AuUnnecessary.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_AuUnnecessary.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_AuNormal.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_AuNormal.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_AuAbnormal.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_AuAbnormal.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_ChipZure0to50.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_ChipZure0to50.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_ChipZure51to100.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_ChipZure51to100.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_ChipZure101to150.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_ChipZure101to150.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_ChipZure151to200.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_ChipZure151to200.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_ChipZure201to250.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_ChipZure201to250.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_ChipZure251toOver.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_ChipZure251toOver.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_NinshikiRetry.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_NinshikiRetry.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_SpanRetry.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_SpanRetry.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_NinshikiAlarmQTY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_NinshikiAlarmQTY.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_SpanCounter.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_SpanCounter.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_NinshikiGood.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_NinshikiGood.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Original_NinshikiNG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_NinshikiNG.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Original_PNashi.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_PNashi.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_CapillaryLife.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_CapillaryLife.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_ComName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_ComName,String)
            End If
            If (Original_HajikiBe Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_HajikiBe,String)
            End If
            If (Original_HajikiAf Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_HajikiAf,String)
            End If
            If (Original_HajikiPn.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_HajikiPn.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_PeelBe Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_PeelBe,String)
            End If
            If (Original_PeelAf Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_PeelAf,String)
            End If
            If (Original_PeelPn.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_PeelPn.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_DbBdBe Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_DbBdBe,String)
            End If
            If (Original_DbBdAf Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_DbBdAf,String)
            End If
            If (Original_DbBdPn.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_DbBdPn.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_FirstJudgBe Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_FirstJudgBe,String)
            End If
            If (Original_FirstJudgAf Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_FirstJudgAf,String)
            End If
            If (Original_FirstJudgPn.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_FirstJudgPn.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_FinJudgBe Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_FinJudgBe,String)
            End If
            If (Original_FinJudgAf Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_FinJudgAf,String)
            End If
            If (Original_FinJudgPn.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_FinJudgPn.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_LotJudg Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_LotJudg,String)
            End If
            If (Original_LotJudg_Detail.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(Original_LotJudg_Detail.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_OPJudgement Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(Original_OPJudgement,String)
            End If
            If (Original_HBTemp.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(Original_HBTemp.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_Remark Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(Original_Remark,String)
            End If
            If (Original_AlarmEFO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(Original_AlarmEFO.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmDieEyeFail.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(Original_AlarmDieEyeFail.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmLeadEyeFail.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(Original_AlarmLeadEyeFail.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmSmallBall.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(Original_AlarmSmallBall.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmNSOL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(Original_AlarmNSOL.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmNSOP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(Original_AlarmNSOP.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmOther.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(Original_AlarmOther.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (Original_TPMake.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(Original_TPMake.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPChange.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(Original_CAPChange.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_HP_PPChange.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(Original_HP_PPChange.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_WireSizeChange.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(Original_WireSizeChange.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = Global.System.DBNull.Value
            End If
            If (Original_BMBefore.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(Original_BMBefore.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            If (Original_NGScrap.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(Original_NGScrap.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = Global.System.DBNull.Value
            End If
            If (Original_TPMakeStart.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(Original_TPMakeStart.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = Global.System.DBNull.Value
            End If
            If (Original_TPMakeFinish.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(Original_TPMakeFinish.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            If (Original_BMMode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(156).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(Original_BMMode,String)
            End If
            If (Original_BMStart.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(Original_BMStart.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(158).Value = Global.System.DBNull.Value
            End If
            If (Original_BMFinish.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(Original_BMFinish.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(160).Value = Global.System.DBNull.Value
            End If
            If (Original_BMRequest.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(Original_BMRequest.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(162).Value = Global.System.DBNull.Value
            End If
            If (Original_BMIncharge Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(164).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(164).Value = CType(Original_BMIncharge,String)
            End If
            If (Original_TPMakeIncharge Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(166).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(166).Value = CType(Original_TPMakeIncharge,String)
            End If
            If (Original_InputQtyAdjust.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(168).Value = CType(Original_InputQtyAdjust.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(168).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalGoodAdjust.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(170).Value = CType(Original_TotalGoodAdjust.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(170).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalNGAdjust.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(172).Value = CType(Original_TotalNGAdjust.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(172).Value = Global.System.DBNull.Value
            End If
            If (Original_GoldWireID1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(174).Value = CType(Original_GoldWireID1.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(174).Value = Global.System.DBNull.Value
            End If
            If (Original_GoldWireID2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(176).Value = CType(Original_GoldWireID2.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(176).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPID1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(178).Value = CType(Original_CAPID1.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(178).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPID2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(180).Value = CType(Original_CAPID2.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(180).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal MCNo As String,  _
                    ByVal LotNo As String,  _
                    ByVal LotStartTime As Date,  _
                    ByVal MCType As String,  _
                    ByVal OPNo As String,  _
                    ByVal InputQty As Global.System.Nullable(Of Integer),  _
                    ByVal TotalGood As Global.System.Nullable(Of Integer),  _
                    ByVal TotalNG As Global.System.Nullable(Of Integer),  _
                    ByVal OPRate As Global.System.Nullable(Of Single),  _
                    ByVal MaximumRPM As Global.System.Nullable(Of Single),  _
                    ByVal AverageRPM As Global.System.Nullable(Of Single),  _
                    ByVal MTBF As Global.System.Nullable(Of Single),  _
                    ByVal MTTR As Global.System.Nullable(Of Single),  _
                    ByVal AlarmTotal As Global.System.Nullable(Of Short),  _
                    ByVal LotEndTime As Global.System.Nullable(Of Date),  _
                    ByVal RunTime As Global.System.Nullable(Of Single),  _
                    ByVal StopTime As Global.System.Nullable(Of Single),  _
                    ByVal AlarmTime As Global.System.Nullable(Of Single),  _
                    ByVal SelfConVersion As String,  _
                    ByVal NetVersion As String,  _
                    ByVal GoodWire As Global.System.Nullable(Of Integer),  _
                    ByVal Au As Global.System.Nullable(Of Integer),  _
                    ByVal TotalGoodChip As Global.System.Nullable(Of Short),  _
                    ByVal TotalNGChip As Global.System.Nullable(Of Short),  _
                    ByVal NoChip As Global.System.Nullable(Of Short),  _
                    ByVal Alarm As Global.System.Nullable(Of Single),  _
                    ByVal AuUnnecessary As Global.System.Nullable(Of Short),  _
                    ByVal AuNormal As Global.System.Nullable(Of Short),  _
                    ByVal AuAbnormal As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure0to50 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure51to100 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure101to150 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure151to200 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure201to250 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure251toOver As Global.System.Nullable(Of Short),  _
                    ByVal NinshikiRetry As Global.System.Nullable(Of Short),  _
                    ByVal SpanRetry As Global.System.Nullable(Of Short),  _
                    ByVal NinshikiAlarmQTY As Global.System.Nullable(Of Short),  _
                    ByVal SpanCounter As Global.System.Nullable(Of Short),  _
                    ByVal NinshikiGood As Global.System.Nullable(Of Short),  _
                    ByVal NinshikiNG As Global.System.Nullable(Of Short),  _
                    ByVal PNashi As Global.System.Nullable(Of Short),  _
                    ByVal CapillaryLife As Global.System.Nullable(Of Single),  _
                    ByVal ComName As String,  _
                    ByVal HajikiBe As String,  _
                    ByVal HajikiAf As String,  _
                    ByVal HajikiPn As Global.System.Nullable(Of Short),  _
                    ByVal PeelBe As String,  _
                    ByVal PeelAf As String,  _
                    ByVal PeelPn As Global.System.Nullable(Of Short),  _
                    ByVal DbBdBe As String,  _
                    ByVal DbBdAf As String,  _
                    ByVal DbBdPn As Global.System.Nullable(Of Short),  _
                    ByVal FirstJudgBe As String,  _
                    ByVal FirstJudgAf As String,  _
                    ByVal FirstJudgPn As Global.System.Nullable(Of Short),  _
                    ByVal FinJudgBe As String,  _
                    ByVal FinJudgAf As String,  _
                    ByVal FinJudgPn As Global.System.Nullable(Of Short),  _
                    ByVal LotJudg As String,  _
                    ByVal LotJudg_Detail As Global.System.Nullable(Of Short),  _
                    ByVal OPJudgement As String,  _
                    ByVal HBTemp As Global.System.Nullable(Of Short),  _
                    ByVal Remark As String,  _
                    ByVal AlarmEFO As Global.System.Nullable(Of Short),  _
                    ByVal AlarmDieEyeFail As Global.System.Nullable(Of Short),  _
                    ByVal AlarmLeadEyeFail As Global.System.Nullable(Of Short),  _
                    ByVal AlarmSmallBall As Global.System.Nullable(Of Short),  _
                    ByVal AlarmNSOL As Global.System.Nullable(Of Short),  _
                    ByVal AlarmNSOP As Global.System.Nullable(Of Short),  _
                    ByVal AlarmOther As Global.System.Nullable(Of Short),  _
                    ByVal TPMake As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPChange As Global.System.Nullable(Of Boolean),  _
                    ByVal HP_PPChange As Global.System.Nullable(Of Boolean),  _
                    ByVal WireSizeChange As Global.System.Nullable(Of Boolean),  _
                    ByVal BMBefore As Global.System.Nullable(Of Boolean),  _
                    ByVal NGScrap As Global.System.Nullable(Of Short),  _
                    ByVal TPMakeStart As Global.System.Nullable(Of Date),  _
                    ByVal TPMakeFinish As Global.System.Nullable(Of Date),  _
                    ByVal BMMode As String,  _
                    ByVal BMStart As Global.System.Nullable(Of Date),  _
                    ByVal BMFinish As Global.System.Nullable(Of Date),  _
                    ByVal BMRequest As Global.System.Nullable(Of Boolean),  _
                    ByVal BMIncharge As String,  _
                    ByVal TPMakeIncharge As String,  _
                    ByVal InputQtyAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal TotalGoodAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal TotalNGAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal GoldWireID1 As Global.System.Nullable(Of Integer),  _
                    ByVal GoldWireID2 As Global.System.Nullable(Of Integer),  _
                    ByVal CAPID1 As Global.System.Nullable(Of Integer),  _
                    ByVal CAPID2 As Global.System.Nullable(Of Integer)) As Integer
            If (MCNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MCNo")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(MCNo,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(LotNo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(LotStartTime,Date)
            If (MCType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(MCType,String)
            End If
            If (OPNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(OPNo,String)
            End If
            If (InputQty.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(InputQty.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (TotalGood.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(TotalGood.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (TotalNG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(TotalNG.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (OPRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(OPRate.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (MaximumRPM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(MaximumRPM.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (AverageRPM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(AverageRPM.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MTBF.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(MTBF.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (MTTR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(MTTR.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (AlarmTotal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(AlarmTotal.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LotEndTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(LotEndTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (RunTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(RunTime.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (StopTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(StopTime.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (AlarmTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(AlarmTime.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (SelfConVersion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(SelfConVersion,String)
            End If
            If (NetVersion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(NetVersion,String)
            End If
            If (GoodWire.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(GoodWire.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Au.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Au.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (TotalGoodChip.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(TotalGoodChip.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (TotalNGChip.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(TotalNGChip.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (NoChip.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(NoChip.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Alarm.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Alarm.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (AuUnnecessary.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(AuUnnecessary.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (AuNormal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(AuNormal.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (AuAbnormal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(AuAbnormal.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (ChipZure0to50.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(ChipZure0to50.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (ChipZure51to100.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(ChipZure51to100.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (ChipZure101to150.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(ChipZure101to150.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (ChipZure151to200.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(ChipZure151to200.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (ChipZure201to250.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(ChipZure201to250.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (ChipZure251toOver.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(ChipZure251toOver.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (NinshikiRetry.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(NinshikiRetry.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (SpanRetry.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(SpanRetry.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (NinshikiAlarmQTY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(NinshikiAlarmQTY.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (SpanCounter.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(SpanCounter.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (NinshikiGood.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(NinshikiGood.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (NinshikiNG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(NinshikiNG.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (PNashi.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(PNashi.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (CapillaryLife.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(CapillaryLife.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (ComName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(ComName,String)
            End If
            If (HajikiBe Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(HajikiBe,String)
            End If
            If (HajikiAf Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(HajikiAf,String)
            End If
            If (HajikiPn.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(HajikiPn.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (PeelBe Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(PeelBe,String)
            End If
            If (PeelAf Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(PeelAf,String)
            End If
            If (PeelPn.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(PeelPn.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (DbBdBe Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(DbBdBe,String)
            End If
            If (DbBdAf Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(DbBdAf,String)
            End If
            If (DbBdPn.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(DbBdPn.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (FirstJudgBe Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(FirstJudgBe,String)
            End If
            If (FirstJudgAf Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(FirstJudgAf,String)
            End If
            If (FirstJudgPn.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(FirstJudgPn.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (FinJudgBe Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(FinJudgBe,String)
            End If
            If (FinJudgAf Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(FinJudgAf,String)
            End If
            If (FinJudgPn.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(FinJudgPn.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (LotJudg Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(LotJudg,String)
            End If
            If (LotJudg_Detail.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(LotJudg_Detail.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (OPJudgement Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(OPJudgement,String)
            End If
            If (HBTemp.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(HBTemp.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Remark Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(Remark,String)
            End If
            If (AlarmEFO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(AlarmEFO.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (AlarmDieEyeFail.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(AlarmDieEyeFail.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (AlarmLeadEyeFail.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(AlarmLeadEyeFail.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (AlarmSmallBall.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(AlarmSmallBall.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (AlarmNSOL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(AlarmNSOL.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (AlarmNSOP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(AlarmNSOP.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (AlarmOther.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(AlarmOther.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (TPMake.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(TPMake.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (CAPChange.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(CAPChange.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (HP_PPChange.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(HP_PPChange.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (WireSizeChange.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(WireSizeChange.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (BMBefore.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(BMBefore.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (NGScrap.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(NGScrap.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (TPMakeStart.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(TPMakeStart.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (TPMakeFinish.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(TPMakeFinish.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (BMMode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(BMMode,String)
            End If
            If (BMStart.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(BMStart.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (BMFinish.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(BMFinish.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (BMRequest.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(BMRequest.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (BMIncharge Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(BMIncharge,String)
            End If
            If (TPMakeIncharge Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(TPMakeIncharge,String)
            End If
            If (InputQtyAdjust.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(InputQtyAdjust.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (TotalGoodAdjust.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(TotalGoodAdjust.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (TotalNGAdjust.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(TotalNGAdjust.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (GoldWireID1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(GoldWireID1.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (GoldWireID2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(GoldWireID2.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (CAPID1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(CAPID1.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (CAPID2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(CAPID2.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal MCNo As String,  _
                    ByVal LotNo As String,  _
                    ByVal LotStartTime As Date,  _
                    ByVal MCType As String,  _
                    ByVal OPNo As String,  _
                    ByVal InputQty As Global.System.Nullable(Of Integer),  _
                    ByVal TotalGood As Global.System.Nullable(Of Integer),  _
                    ByVal TotalNG As Global.System.Nullable(Of Integer),  _
                    ByVal OPRate As Global.System.Nullable(Of Single),  _
                    ByVal MaximumRPM As Global.System.Nullable(Of Single),  _
                    ByVal AverageRPM As Global.System.Nullable(Of Single),  _
                    ByVal MTBF As Global.System.Nullable(Of Single),  _
                    ByVal MTTR As Global.System.Nullable(Of Single),  _
                    ByVal AlarmTotal As Global.System.Nullable(Of Short),  _
                    ByVal LotEndTime As Global.System.Nullable(Of Date),  _
                    ByVal RunTime As Global.System.Nullable(Of Single),  _
                    ByVal StopTime As Global.System.Nullable(Of Single),  _
                    ByVal AlarmTime As Global.System.Nullable(Of Single),  _
                    ByVal SelfConVersion As String,  _
                    ByVal NetVersion As String,  _
                    ByVal GoodWire As Global.System.Nullable(Of Integer),  _
                    ByVal Au As Global.System.Nullable(Of Integer),  _
                    ByVal TotalGoodChip As Global.System.Nullable(Of Short),  _
                    ByVal TotalNGChip As Global.System.Nullable(Of Short),  _
                    ByVal NoChip As Global.System.Nullable(Of Short),  _
                    ByVal Alarm As Global.System.Nullable(Of Single),  _
                    ByVal AuUnnecessary As Global.System.Nullable(Of Short),  _
                    ByVal AuNormal As Global.System.Nullable(Of Short),  _
                    ByVal AuAbnormal As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure0to50 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure51to100 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure101to150 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure151to200 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure201to250 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure251toOver As Global.System.Nullable(Of Short),  _
                    ByVal NinshikiRetry As Global.System.Nullable(Of Short),  _
                    ByVal SpanRetry As Global.System.Nullable(Of Short),  _
                    ByVal NinshikiAlarmQTY As Global.System.Nullable(Of Short),  _
                    ByVal SpanCounter As Global.System.Nullable(Of Short),  _
                    ByVal NinshikiGood As Global.System.Nullable(Of Short),  _
                    ByVal NinshikiNG As Global.System.Nullable(Of Short),  _
                    ByVal PNashi As Global.System.Nullable(Of Short),  _
                    ByVal CapillaryLife As Global.System.Nullable(Of Single),  _
                    ByVal ComName As String,  _
                    ByVal HajikiBe As String,  _
                    ByVal HajikiAf As String,  _
                    ByVal HajikiPn As Global.System.Nullable(Of Short),  _
                    ByVal PeelBe As String,  _
                    ByVal PeelAf As String,  _
                    ByVal PeelPn As Global.System.Nullable(Of Short),  _
                    ByVal DbBdBe As String,  _
                    ByVal DbBdAf As String,  _
                    ByVal DbBdPn As Global.System.Nullable(Of Short),  _
                    ByVal FirstJudgBe As String,  _
                    ByVal FirstJudgAf As String,  _
                    ByVal FirstJudgPn As Global.System.Nullable(Of Short),  _
                    ByVal FinJudgBe As String,  _
                    ByVal FinJudgAf As String,  _
                    ByVal FinJudgPn As Global.System.Nullable(Of Short),  _
                    ByVal LotJudg As String,  _
                    ByVal LotJudg_Detail As Global.System.Nullable(Of Short),  _
                    ByVal OPJudgement As String,  _
                    ByVal HBTemp As Global.System.Nullable(Of Short),  _
                    ByVal Remark As String,  _
                    ByVal AlarmEFO As Global.System.Nullable(Of Short),  _
                    ByVal AlarmDieEyeFail As Global.System.Nullable(Of Short),  _
                    ByVal AlarmLeadEyeFail As Global.System.Nullable(Of Short),  _
                    ByVal AlarmSmallBall As Global.System.Nullable(Of Short),  _
                    ByVal AlarmNSOL As Global.System.Nullable(Of Short),  _
                    ByVal AlarmNSOP As Global.System.Nullable(Of Short),  _
                    ByVal AlarmOther As Global.System.Nullable(Of Short),  _
                    ByVal TPMake As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPChange As Global.System.Nullable(Of Boolean),  _
                    ByVal HP_PPChange As Global.System.Nullable(Of Boolean),  _
                    ByVal WireSizeChange As Global.System.Nullable(Of Boolean),  _
                    ByVal BMBefore As Global.System.Nullable(Of Boolean),  _
                    ByVal NGScrap As Global.System.Nullable(Of Short),  _
                    ByVal TPMakeStart As Global.System.Nullable(Of Date),  _
                    ByVal TPMakeFinish As Global.System.Nullable(Of Date),  _
                    ByVal BMMode As String,  _
                    ByVal BMStart As Global.System.Nullable(Of Date),  _
                    ByVal BMFinish As Global.System.Nullable(Of Date),  _
                    ByVal BMRequest As Global.System.Nullable(Of Boolean),  _
                    ByVal BMIncharge As String,  _
                    ByVal TPMakeIncharge As String,  _
                    ByVal InputQtyAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal TotalGoodAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal TotalNGAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal GoldWireID1 As Global.System.Nullable(Of Integer),  _
                    ByVal GoldWireID2 As Global.System.Nullable(Of Integer),  _
                    ByVal CAPID1 As Global.System.Nullable(Of Integer),  _
                    ByVal CAPID2 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MCNo As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_LotStartTime As Date,  _
                    ByVal Original_MCType As String,  _
                    ByVal Original_OPNo As String,  _
                    ByVal Original_InputQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalGood As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalNG As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OPRate As Global.System.Nullable(Of Single),  _
                    ByVal Original_MaximumRPM As Global.System.Nullable(Of Single),  _
                    ByVal Original_AverageRPM As Global.System.Nullable(Of Single),  _
                    ByVal Original_MTBF As Global.System.Nullable(Of Single),  _
                    ByVal Original_MTTR As Global.System.Nullable(Of Single),  _
                    ByVal Original_AlarmTotal As Global.System.Nullable(Of Short),  _
                    ByVal Original_LotEndTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_RunTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_StopTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_AlarmTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_SelfConVersion As String,  _
                    ByVal Original_NetVersion As String,  _
                    ByVal Original_GoodWire As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Au As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalGoodChip As Global.System.Nullable(Of Short),  _
                    ByVal Original_TotalNGChip As Global.System.Nullable(Of Short),  _
                    ByVal Original_NoChip As Global.System.Nullable(Of Short),  _
                    ByVal Original_Alarm As Global.System.Nullable(Of Single),  _
                    ByVal Original_AuUnnecessary As Global.System.Nullable(Of Short),  _
                    ByVal Original_AuNormal As Global.System.Nullable(Of Short),  _
                    ByVal Original_AuAbnormal As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure0to50 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure51to100 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure101to150 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure151to200 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure201to250 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure251toOver As Global.System.Nullable(Of Short),  _
                    ByVal Original_NinshikiRetry As Global.System.Nullable(Of Short),  _
                    ByVal Original_SpanRetry As Global.System.Nullable(Of Short),  _
                    ByVal Original_NinshikiAlarmQTY As Global.System.Nullable(Of Short),  _
                    ByVal Original_SpanCounter As Global.System.Nullable(Of Short),  _
                    ByVal Original_NinshikiGood As Global.System.Nullable(Of Short),  _
                    ByVal Original_NinshikiNG As Global.System.Nullable(Of Short),  _
                    ByVal Original_PNashi As Global.System.Nullable(Of Short),  _
                    ByVal Original_CapillaryLife As Global.System.Nullable(Of Single),  _
                    ByVal Original_ComName As String,  _
                    ByVal Original_HajikiBe As String,  _
                    ByVal Original_HajikiAf As String,  _
                    ByVal Original_HajikiPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_PeelBe As String,  _
                    ByVal Original_PeelAf As String,  _
                    ByVal Original_PeelPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_DbBdBe As String,  _
                    ByVal Original_DbBdAf As String,  _
                    ByVal Original_DbBdPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_FirstJudgBe As String,  _
                    ByVal Original_FirstJudgAf As String,  _
                    ByVal Original_FirstJudgPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_FinJudgBe As String,  _
                    ByVal Original_FinJudgAf As String,  _
                    ByVal Original_FinJudgPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_LotJudg As String,  _
                    ByVal Original_LotJudg_Detail As Global.System.Nullable(Of Short),  _
                    ByVal Original_OPJudgement As String,  _
                    ByVal Original_HBTemp As Global.System.Nullable(Of Short),  _
                    ByVal Original_Remark As String,  _
                    ByVal Original_AlarmEFO As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmDieEyeFail As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmLeadEyeFail As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmSmallBall As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmNSOL As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmNSOP As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmOther As Global.System.Nullable(Of Short),  _
                    ByVal Original_TPMake As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPChange As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_HP_PPChange As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_WireSizeChange As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BMBefore As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NGScrap As Global.System.Nullable(Of Short),  _
                    ByVal Original_TPMakeStart As Global.System.Nullable(Of Date),  _
                    ByVal Original_TPMakeFinish As Global.System.Nullable(Of Date),  _
                    ByVal Original_BMMode As String,  _
                    ByVal Original_BMStart As Global.System.Nullable(Of Date),  _
                    ByVal Original_BMFinish As Global.System.Nullable(Of Date),  _
                    ByVal Original_BMRequest As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BMIncharge As String,  _
                    ByVal Original_TPMakeIncharge As String,  _
                    ByVal Original_InputQtyAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalGoodAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalNGAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoldWireID1 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoldWireID2 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CAPID1 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CAPID2 As Global.System.Nullable(Of Integer)) As Integer
            If (MCNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MCNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(MCNo,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LotNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LotStartTime,Date)
            If (MCType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MCType,String)
            End If
            If (OPNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(OPNo,String)
            End If
            If (InputQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(InputQty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (TotalGood.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(TotalGood.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (TotalNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(TotalNG.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (OPRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(OPRate.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (MaximumRPM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(MaximumRPM.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (AverageRPM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(AverageRPM.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MTBF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(MTBF.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (MTTR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(MTTR.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (AlarmTotal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(AlarmTotal.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LotEndTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(LotEndTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (RunTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(RunTime.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (StopTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(StopTime.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (AlarmTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(AlarmTime.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (SelfConVersion Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(SelfConVersion,String)
            End If
            If (NetVersion Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(NetVersion,String)
            End If
            If (GoodWire.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(GoodWire.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Au.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Au.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (TotalGoodChip.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(TotalGoodChip.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (TotalNGChip.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(TotalNGChip.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (NoChip.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(NoChip.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Alarm.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Alarm.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (AuUnnecessary.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(AuUnnecessary.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (AuNormal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(AuNormal.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (AuAbnormal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(AuAbnormal.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (ChipZure0to50.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(ChipZure0to50.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (ChipZure51to100.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(ChipZure51to100.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (ChipZure101to150.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(ChipZure101to150.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (ChipZure151to200.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(ChipZure151to200.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (ChipZure201to250.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(ChipZure201to250.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (ChipZure251toOver.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(ChipZure251toOver.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (NinshikiRetry.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(NinshikiRetry.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (SpanRetry.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(SpanRetry.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (NinshikiAlarmQTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(NinshikiAlarmQTY.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (SpanCounter.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(SpanCounter.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (NinshikiGood.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(NinshikiGood.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (NinshikiNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(NinshikiNG.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (PNashi.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(PNashi.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (CapillaryLife.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(CapillaryLife.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (ComName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(ComName,String)
            End If
            If (HajikiBe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(HajikiBe,String)
            End If
            If (HajikiAf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(HajikiAf,String)
            End If
            If (HajikiPn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(HajikiPn.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (PeelBe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(PeelBe,String)
            End If
            If (PeelAf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(PeelAf,String)
            End If
            If (PeelPn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(PeelPn.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (DbBdBe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(DbBdBe,String)
            End If
            If (DbBdAf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(DbBdAf,String)
            End If
            If (DbBdPn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(DbBdPn.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (FirstJudgBe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(FirstJudgBe,String)
            End If
            If (FirstJudgAf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(FirstJudgAf,String)
            End If
            If (FirstJudgPn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(FirstJudgPn.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (FinJudgBe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(FinJudgBe,String)
            End If
            If (FinJudgAf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(FinJudgAf,String)
            End If
            If (FinJudgPn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(FinJudgPn.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (LotJudg Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(LotJudg,String)
            End If
            If (LotJudg_Detail.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(LotJudg_Detail.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (OPJudgement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(OPJudgement,String)
            End If
            If (HBTemp.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(HBTemp.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Remark Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Remark,String)
            End If
            If (AlarmEFO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(AlarmEFO.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (AlarmDieEyeFail.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(AlarmDieEyeFail.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (AlarmLeadEyeFail.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(AlarmLeadEyeFail.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (AlarmSmallBall.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(AlarmSmallBall.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (AlarmNSOL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(AlarmNSOL.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (AlarmNSOP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(AlarmNSOP.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (AlarmOther.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(AlarmOther.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (TPMake.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(TPMake.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (CAPChange.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(CAPChange.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (HP_PPChange.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(HP_PPChange.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (WireSizeChange.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(WireSizeChange.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (BMBefore.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(BMBefore.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (NGScrap.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(NGScrap.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (TPMakeStart.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(TPMakeStart.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (TPMakeFinish.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(TPMakeFinish.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (BMMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(BMMode,String)
            End If
            If (BMStart.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(BMStart.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (BMFinish.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(BMFinish.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (BMRequest.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(BMRequest.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (BMIncharge Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(BMIncharge,String)
            End If
            If (TPMakeIncharge Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(TPMakeIncharge,String)
            End If
            If (InputQtyAdjust.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(InputQtyAdjust.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (TotalGoodAdjust.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(TotalGoodAdjust.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (TotalNGAdjust.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(TotalNGAdjust.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (GoldWireID1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(GoldWireID1.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (GoldWireID2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(GoldWireID2.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (CAPID1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(CAPID1.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (CAPID2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(CAPID2.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_MCNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MCNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_MCNo,String)
            End If
            If (Original_LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_LotNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_LotStartTime,Date)
            If (Original_MCType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_MCType,String)
            End If
            If (Original_OPNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_OPNo,String)
            End If
            If (Original_InputQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_InputQty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalGood.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_TotalGood.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_TotalNG.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_OPRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_OPRate.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_MaximumRPM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_MaximumRPM.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_AverageRPM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_AverageRPM.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_MTBF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_MTBF.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_MTTR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_MTTR.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmTotal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_AlarmTotal.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_LotEndTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_LotEndTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_RunTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_RunTime.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_StopTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_StopTime.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_AlarmTime.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Original_SelfConVersion Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_SelfConVersion,String)
            End If
            If (Original_NetVersion Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_NetVersion,String)
            End If
            If (Original_GoodWire.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_GoodWire.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_Au.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_Au.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalGoodChip.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_TotalGoodChip.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalNGChip.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_TotalNGChip.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            End If
            If (Original_NoChip.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_NoChip.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (Original_Alarm.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_Alarm.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_AuUnnecessary.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_AuUnnecessary.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_AuNormal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_AuNormal.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_AuAbnormal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_AuAbnormal.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            End If
            If (Original_ChipZure0to50.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_ChipZure0to50.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            If (Original_ChipZure51to100.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_ChipZure51to100.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            End If
            If (Original_ChipZure101to150.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_ChipZure101to150.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            End If
            If (Original_ChipZure151to200.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_ChipZure151to200.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            If (Original_ChipZure201to250.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(Original_ChipZure201to250.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = Global.System.DBNull.Value
            End If
            If (Original_ChipZure251toOver.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(Original_ChipZure251toOver.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = Global.System.DBNull.Value
            End If
            If (Original_NinshikiRetry.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(Original_NinshikiRetry.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = Global.System.DBNull.Value
            End If
            If (Original_SpanRetry.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(Original_SpanRetry.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = Global.System.DBNull.Value
            End If
            If (Original_NinshikiAlarmQTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(Original_NinshikiAlarmQTY.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = Global.System.DBNull.Value
            End If
            If (Original_SpanCounter.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(Original_SpanCounter.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = Global.System.DBNull.Value
            End If
            If (Original_NinshikiGood.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(Original_NinshikiGood.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = Global.System.DBNull.Value
            End If
            If (Original_NinshikiNG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(Original_NinshikiNG.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = Global.System.DBNull.Value
            End If
            If (Original_PNashi.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(Original_PNashi.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = Global.System.DBNull.Value
            End If
            If (Original_CapillaryLife.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(Original_CapillaryLife.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = Global.System.DBNull.Value
            End If
            If (Original_ComName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(Original_ComName,String)
            End If
            If (Original_HajikiBe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(Original_HajikiBe,String)
            End If
            If (Original_HajikiAf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(Original_HajikiAf,String)
            End If
            If (Original_HajikiPn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(Original_HajikiPn.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = Global.System.DBNull.Value
            End If
            If (Original_PeelBe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(Original_PeelBe,String)
            End If
            If (Original_PeelAf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(Original_PeelAf,String)
            End If
            If (Original_PeelPn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(Original_PeelPn.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = Global.System.DBNull.Value
            End If
            If (Original_DbBdBe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(Original_DbBdBe,String)
            End If
            If (Original_DbBdAf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(Original_DbBdAf,String)
            End If
            If (Original_DbBdPn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(Original_DbBdPn.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = Global.System.DBNull.Value
            End If
            If (Original_FirstJudgBe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(Original_FirstJudgBe,String)
            End If
            If (Original_FirstJudgAf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(Original_FirstJudgAf,String)
            End If
            If (Original_FirstJudgPn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(Original_FirstJudgPn.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = Global.System.DBNull.Value
            End If
            If (Original_FinJudgBe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(Original_FinJudgBe,String)
            End If
            If (Original_FinJudgAf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(Original_FinJudgAf,String)
            End If
            If (Original_FinJudgPn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(Original_FinJudgPn.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(206).Value = Global.System.DBNull.Value
            End If
            If (Original_LotJudg Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(208).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(Original_LotJudg,String)
            End If
            If (Original_LotJudg_Detail.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(Original_LotJudg_Detail.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(210).Value = Global.System.DBNull.Value
            End If
            If (Original_OPJudgement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(212).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(Original_OPJudgement,String)
            End If
            If (Original_HBTemp.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(Original_HBTemp.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(214).Value = Global.System.DBNull.Value
            End If
            If (Original_Remark Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(216).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(Original_Remark,String)
            End If
            If (Original_AlarmEFO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(Original_AlarmEFO.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(218).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmDieEyeFail.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(Original_AlarmDieEyeFail.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(220).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmLeadEyeFail.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(Original_AlarmLeadEyeFail.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(222).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmSmallBall.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(Original_AlarmSmallBall.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(224).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmNSOL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(Original_AlarmNSOL.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmNSOP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(Original_AlarmNSOP.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmOther.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(Original_AlarmOther.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = Global.System.DBNull.Value
            End If
            If (Original_TPMake.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(Original_TPMake.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(232).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPChange.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(234).Value = CType(Original_CAPChange.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(234).Value = Global.System.DBNull.Value
            End If
            If (Original_HP_PPChange.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(Original_HP_PPChange.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(236).Value = Global.System.DBNull.Value
            End If
            If (Original_WireSizeChange.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(Original_WireSizeChange.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(238).Value = Global.System.DBNull.Value
            End If
            If (Original_BMBefore.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(Original_BMBefore.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(240).Value = Global.System.DBNull.Value
            End If
            If (Original_NGScrap.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(241).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(242).Value = CType(Original_NGScrap.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(241).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(242).Value = Global.System.DBNull.Value
            End If
            If (Original_TPMakeStart.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(244).Value = CType(Original_TPMakeStart.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(244).Value = Global.System.DBNull.Value
            End If
            If (Original_TPMakeFinish.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(245).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(246).Value = CType(Original_TPMakeFinish.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(245).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(246).Value = Global.System.DBNull.Value
            End If
            If (Original_BMMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(247).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(248).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(247).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(248).Value = CType(Original_BMMode,String)
            End If
            If (Original_BMStart.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(249).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(250).Value = CType(Original_BMStart.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(249).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(250).Value = Global.System.DBNull.Value
            End If
            If (Original_BMFinish.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(251).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(252).Value = CType(Original_BMFinish.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(251).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(252).Value = Global.System.DBNull.Value
            End If
            If (Original_BMRequest.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(253).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(254).Value = CType(Original_BMRequest.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(253).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(254).Value = Global.System.DBNull.Value
            End If
            If (Original_BMIncharge Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(255).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(256).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(255).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(256).Value = CType(Original_BMIncharge,String)
            End If
            If (Original_TPMakeIncharge Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(257).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(258).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(257).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(Original_TPMakeIncharge,String)
            End If
            If (Original_InputQtyAdjust.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(259).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(260).Value = CType(Original_InputQtyAdjust.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(259).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(260).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalGoodAdjust.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(261).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(262).Value = CType(Original_TotalGoodAdjust.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(261).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(262).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalNGAdjust.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(263).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(264).Value = CType(Original_TotalNGAdjust.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(263).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(264).Value = Global.System.DBNull.Value
            End If
            If (Original_GoldWireID1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(265).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(266).Value = CType(Original_GoldWireID1.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(265).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(266).Value = Global.System.DBNull.Value
            End If
            If (Original_GoldWireID2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(267).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(268).Value = CType(Original_GoldWireID2.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(267).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(268).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPID1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(269).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(270).Value = CType(Original_CAPID1.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(269).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(270).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPID2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(271).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(272).Value = CType(Original_CAPID2.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(271).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(272).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal MCType As String,  _
                    ByVal OPNo As String,  _
                    ByVal InputQty As Global.System.Nullable(Of Integer),  _
                    ByVal TotalGood As Global.System.Nullable(Of Integer),  _
                    ByVal TotalNG As Global.System.Nullable(Of Integer),  _
                    ByVal OPRate As Global.System.Nullable(Of Single),  _
                    ByVal MaximumRPM As Global.System.Nullable(Of Single),  _
                    ByVal AverageRPM As Global.System.Nullable(Of Single),  _
                    ByVal MTBF As Global.System.Nullable(Of Single),  _
                    ByVal MTTR As Global.System.Nullable(Of Single),  _
                    ByVal AlarmTotal As Global.System.Nullable(Of Short),  _
                    ByVal LotEndTime As Global.System.Nullable(Of Date),  _
                    ByVal RunTime As Global.System.Nullable(Of Single),  _
                    ByVal StopTime As Global.System.Nullable(Of Single),  _
                    ByVal AlarmTime As Global.System.Nullable(Of Single),  _
                    ByVal SelfConVersion As String,  _
                    ByVal NetVersion As String,  _
                    ByVal GoodWire As Global.System.Nullable(Of Integer),  _
                    ByVal Au As Global.System.Nullable(Of Integer),  _
                    ByVal TotalGoodChip As Global.System.Nullable(Of Short),  _
                    ByVal TotalNGChip As Global.System.Nullable(Of Short),  _
                    ByVal NoChip As Global.System.Nullable(Of Short),  _
                    ByVal Alarm As Global.System.Nullable(Of Single),  _
                    ByVal AuUnnecessary As Global.System.Nullable(Of Short),  _
                    ByVal AuNormal As Global.System.Nullable(Of Short),  _
                    ByVal AuAbnormal As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure0to50 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure51to100 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure101to150 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure151to200 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure201to250 As Global.System.Nullable(Of Short),  _
                    ByVal ChipZure251toOver As Global.System.Nullable(Of Short),  _
                    ByVal NinshikiRetry As Global.System.Nullable(Of Short),  _
                    ByVal SpanRetry As Global.System.Nullable(Of Short),  _
                    ByVal NinshikiAlarmQTY As Global.System.Nullable(Of Short),  _
                    ByVal SpanCounter As Global.System.Nullable(Of Short),  _
                    ByVal NinshikiGood As Global.System.Nullable(Of Short),  _
                    ByVal NinshikiNG As Global.System.Nullable(Of Short),  _
                    ByVal PNashi As Global.System.Nullable(Of Short),  _
                    ByVal CapillaryLife As Global.System.Nullable(Of Single),  _
                    ByVal ComName As String,  _
                    ByVal HajikiBe As String,  _
                    ByVal HajikiAf As String,  _
                    ByVal HajikiPn As Global.System.Nullable(Of Short),  _
                    ByVal PeelBe As String,  _
                    ByVal PeelAf As String,  _
                    ByVal PeelPn As Global.System.Nullable(Of Short),  _
                    ByVal DbBdBe As String,  _
                    ByVal DbBdAf As String,  _
                    ByVal DbBdPn As Global.System.Nullable(Of Short),  _
                    ByVal FirstJudgBe As String,  _
                    ByVal FirstJudgAf As String,  _
                    ByVal FirstJudgPn As Global.System.Nullable(Of Short),  _
                    ByVal FinJudgBe As String,  _
                    ByVal FinJudgAf As String,  _
                    ByVal FinJudgPn As Global.System.Nullable(Of Short),  _
                    ByVal LotJudg As String,  _
                    ByVal LotJudg_Detail As Global.System.Nullable(Of Short),  _
                    ByVal OPJudgement As String,  _
                    ByVal HBTemp As Global.System.Nullable(Of Short),  _
                    ByVal Remark As String,  _
                    ByVal AlarmEFO As Global.System.Nullable(Of Short),  _
                    ByVal AlarmDieEyeFail As Global.System.Nullable(Of Short),  _
                    ByVal AlarmLeadEyeFail As Global.System.Nullable(Of Short),  _
                    ByVal AlarmSmallBall As Global.System.Nullable(Of Short),  _
                    ByVal AlarmNSOL As Global.System.Nullable(Of Short),  _
                    ByVal AlarmNSOP As Global.System.Nullable(Of Short),  _
                    ByVal AlarmOther As Global.System.Nullable(Of Short),  _
                    ByVal TPMake As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPChange As Global.System.Nullable(Of Boolean),  _
                    ByVal HP_PPChange As Global.System.Nullable(Of Boolean),  _
                    ByVal WireSizeChange As Global.System.Nullable(Of Boolean),  _
                    ByVal BMBefore As Global.System.Nullable(Of Boolean),  _
                    ByVal NGScrap As Global.System.Nullable(Of Short),  _
                    ByVal TPMakeStart As Global.System.Nullable(Of Date),  _
                    ByVal TPMakeFinish As Global.System.Nullable(Of Date),  _
                    ByVal BMMode As String,  _
                    ByVal BMStart As Global.System.Nullable(Of Date),  _
                    ByVal BMFinish As Global.System.Nullable(Of Date),  _
                    ByVal BMRequest As Global.System.Nullable(Of Boolean),  _
                    ByVal BMIncharge As String,  _
                    ByVal TPMakeIncharge As String,  _
                    ByVal InputQtyAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal TotalGoodAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal TotalNGAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal GoldWireID1 As Global.System.Nullable(Of Integer),  _
                    ByVal GoldWireID2 As Global.System.Nullable(Of Integer),  _
                    ByVal CAPID1 As Global.System.Nullable(Of Integer),  _
                    ByVal CAPID2 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MCNo As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_LotStartTime As Date,  _
                    ByVal Original_MCType As String,  _
                    ByVal Original_OPNo As String,  _
                    ByVal Original_InputQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalGood As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalNG As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OPRate As Global.System.Nullable(Of Single),  _
                    ByVal Original_MaximumRPM As Global.System.Nullable(Of Single),  _
                    ByVal Original_AverageRPM As Global.System.Nullable(Of Single),  _
                    ByVal Original_MTBF As Global.System.Nullable(Of Single),  _
                    ByVal Original_MTTR As Global.System.Nullable(Of Single),  _
                    ByVal Original_AlarmTotal As Global.System.Nullable(Of Short),  _
                    ByVal Original_LotEndTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_RunTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_StopTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_AlarmTime As Global.System.Nullable(Of Single),  _
                    ByVal Original_SelfConVersion As String,  _
                    ByVal Original_NetVersion As String,  _
                    ByVal Original_GoodWire As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Au As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalGoodChip As Global.System.Nullable(Of Short),  _
                    ByVal Original_TotalNGChip As Global.System.Nullable(Of Short),  _
                    ByVal Original_NoChip As Global.System.Nullable(Of Short),  _
                    ByVal Original_Alarm As Global.System.Nullable(Of Single),  _
                    ByVal Original_AuUnnecessary As Global.System.Nullable(Of Short),  _
                    ByVal Original_AuNormal As Global.System.Nullable(Of Short),  _
                    ByVal Original_AuAbnormal As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure0to50 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure51to100 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure101to150 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure151to200 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure201to250 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ChipZure251toOver As Global.System.Nullable(Of Short),  _
                    ByVal Original_NinshikiRetry As Global.System.Nullable(Of Short),  _
                    ByVal Original_SpanRetry As Global.System.Nullable(Of Short),  _
                    ByVal Original_NinshikiAlarmQTY As Global.System.Nullable(Of Short),  _
                    ByVal Original_SpanCounter As Global.System.Nullable(Of Short),  _
                    ByVal Original_NinshikiGood As Global.System.Nullable(Of Short),  _
                    ByVal Original_NinshikiNG As Global.System.Nullable(Of Short),  _
                    ByVal Original_PNashi As Global.System.Nullable(Of Short),  _
                    ByVal Original_CapillaryLife As Global.System.Nullable(Of Single),  _
                    ByVal Original_ComName As String,  _
                    ByVal Original_HajikiBe As String,  _
                    ByVal Original_HajikiAf As String,  _
                    ByVal Original_HajikiPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_PeelBe As String,  _
                    ByVal Original_PeelAf As String,  _
                    ByVal Original_PeelPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_DbBdBe As String,  _
                    ByVal Original_DbBdAf As String,  _
                    ByVal Original_DbBdPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_FirstJudgBe As String,  _
                    ByVal Original_FirstJudgAf As String,  _
                    ByVal Original_FirstJudgPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_FinJudgBe As String,  _
                    ByVal Original_FinJudgAf As String,  _
                    ByVal Original_FinJudgPn As Global.System.Nullable(Of Short),  _
                    ByVal Original_LotJudg As String,  _
                    ByVal Original_LotJudg_Detail As Global.System.Nullable(Of Short),  _
                    ByVal Original_OPJudgement As String,  _
                    ByVal Original_HBTemp As Global.System.Nullable(Of Short),  _
                    ByVal Original_Remark As String,  _
                    ByVal Original_AlarmEFO As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmDieEyeFail As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmLeadEyeFail As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmSmallBall As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmNSOL As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmNSOP As Global.System.Nullable(Of Short),  _
                    ByVal Original_AlarmOther As Global.System.Nullable(Of Short),  _
                    ByVal Original_TPMake As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPChange As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_HP_PPChange As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_WireSizeChange As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BMBefore As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NGScrap As Global.System.Nullable(Of Short),  _
                    ByVal Original_TPMakeStart As Global.System.Nullable(Of Date),  _
                    ByVal Original_TPMakeFinish As Global.System.Nullable(Of Date),  _
                    ByVal Original_BMMode As String,  _
                    ByVal Original_BMStart As Global.System.Nullable(Of Date),  _
                    ByVal Original_BMFinish As Global.System.Nullable(Of Date),  _
                    ByVal Original_BMRequest As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BMIncharge As String,  _
                    ByVal Original_TPMakeIncharge As String,  _
                    ByVal Original_InputQtyAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalGoodAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalNGAdjust As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoldWireID1 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GoldWireID2 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CAPID1 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CAPID2 As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Original_MCNo, Original_LotNo, Original_LotStartTime, MCType, OPNo, InputQty, TotalGood, TotalNG, OPRate, MaximumRPM, AverageRPM, MTBF, MTTR, AlarmTotal, LotEndTime, RunTime, StopTime, AlarmTime, SelfConVersion, NetVersion, GoodWire, Au, TotalGoodChip, TotalNGChip, NoChip, Alarm, AuUnnecessary, AuNormal, AuAbnormal, ChipZure0to50, ChipZure51to100, ChipZure101to150, ChipZure151to200, ChipZure201to250, ChipZure251toOver, NinshikiRetry, SpanRetry, NinshikiAlarmQTY, SpanCounter, NinshikiGood, NinshikiNG, PNashi, CapillaryLife, ComName, HajikiBe, HajikiAf, HajikiPn, PeelBe, PeelAf, PeelPn, DbBdBe, DbBdAf, DbBdPn, FirstJudgBe, FirstJudgAf, FirstJudgPn, FinJudgBe, FinJudgAf, FinJudgPn, LotJudg, LotJudg_Detail, OPJudgement, HBTemp, Remark, AlarmEFO, AlarmDieEyeFail, AlarmLeadEyeFail, AlarmSmallBall, AlarmNSOL, AlarmNSOP, AlarmOther, TPMake, CAPChange, HP_PPChange, WireSizeChange, BMBefore, NGScrap, TPMakeStart, TPMakeFinish, BMMode, BMStart, BMFinish, BMRequest, BMIncharge, TPMakeIncharge, InputQtyAdjust, TotalGoodAdjust, TotalNGAdjust, GoldWireID1, GoldWireID2, CAPID1, CAPID2, Original_MCNo, Original_LotNo, Original_LotStartTime, Original_MCType, Original_OPNo, Original_InputQty, Original_TotalGood, Original_TotalNG, Original_OPRate, Original_MaximumRPM, Original_AverageRPM, Original_MTBF, Original_MTTR, Original_AlarmTotal, Original_LotEndTime, Original_RunTime, Original_StopTime, Original_AlarmTime, Original_SelfConVersion, Original_NetVersion, Original_GoodWire, Original_Au, Original_TotalGoodChip, Original_TotalNGChip, Original_NoChip, Original_Alarm, Original_AuUnnecessary, Original_AuNormal, Original_AuAbnormal, Original_ChipZure0to50, Original_ChipZure51to100, Original_ChipZure101to150, Original_ChipZure151to200, Original_ChipZure201to250, Original_ChipZure251toOver, Original_NinshikiRetry, Original_SpanRetry, Original_NinshikiAlarmQTY, Original_SpanCounter, Original_NinshikiGood, Original_NinshikiNG, Original_PNashi, Original_CapillaryLife, Original_ComName, Original_HajikiBe, Original_HajikiAf, Original_HajikiPn, Original_PeelBe, Original_PeelAf, Original_PeelPn, Original_DbBdBe, Original_DbBdAf, Original_DbBdPn, Original_FirstJudgBe, Original_FirstJudgAf, Original_FirstJudgPn, Original_FinJudgBe, Original_FinJudgAf, Original_FinJudgPn, Original_LotJudg, Original_LotJudg_Detail, Original_OPJudgement, Original_HBTemp, Original_Remark, Original_AlarmEFO, Original_AlarmDieEyeFail, Original_AlarmLeadEyeFail, Original_AlarmSmallBall, Original_AlarmNSOL, Original_AlarmNSOP, Original_AlarmOther, Original_TPMake, Original_CAPChange, Original_HP_PPChange, Original_WireSizeChange, Original_BMBefore, Original_NGScrap, Original_TPMakeStart, Original_TPMakeFinish, Original_BMMode, Original_BMStart, Original_BMFinish, Original_BMRequest, Original_BMIncharge, Original_TPMakeIncharge, Original_InputQtyAdjust, Original_TotalGoodAdjust, Original_TotalNGAdjust, Original_GoldWireID1, Original_GoldWireID2, Original_CAPID1, Original_CAPID2)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class LotAlarmQtyTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "LotAlarmQty"
            tableMapping.ColumnMappings.Add("Process", "Process")
            tableMapping.ColumnMappings.Add("LotNo", "LotNo")
            tableMapping.ColumnMappings.Add("AlarmNo", "AlarmNo")
            tableMapping.ColumnMappings.Add("AlarmMess", "AlarmMess")
            tableMapping.ColumnMappings.Add("Qty", "Qty")
            tableMapping.ColumnMappings.Add("Remark", "Remark")
            tableMapping.ColumnMappings.Add("CreateTime", "CreateTime")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [INS].[LotAlarmQty] WHERE (([Process] = @Original_Process) AND ([LotN"& _ 
                "o] = @Original_LotNo) AND ((@IsNull_AlarmNo = 1 AND [AlarmNo] IS NULL) OR ([Alar"& _ 
                "mNo] = @Original_AlarmNo)) AND ([AlarmMess] = @Original_AlarmMess) AND ((@IsNull"& _ 
                "_Qty = 1 AND [Qty] IS NULL) OR ([Qty] = @Original_Qty)) AND ((@IsNull_Remark = 1"& _ 
                " AND [Remark] IS NULL) OR ([Remark] = @Original_Remark)) AND ((@IsNull_CreateTim"& _ 
                "e = 1 AND [CreateTime] IS NULL) OR ([CreateTime] = @Original_CreateTime)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Process", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Process", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmMess", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmMess", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Qty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Qty", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remark", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [INS].[LotAlarmQty] ([Process], [LotNo], [AlarmNo], [AlarmMess], [Qty"& _ 
                "], [Remark], [CreateTime]) VALUES (@Process, @LotNo, @AlarmNo, @AlarmMess, @Qty,"& _ 
                " @Remark, @CreateTime);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Process, LotNo, AlarmNo, AlarmMess, Qty, Remark,"& _ 
                " CreateTime FROM INS.LotAlarmQty WHERE (AlarmMess = @AlarmMess) AND (LotNo = @Lo"& _ 
                "tNo) AND (Process = @Process)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Process", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Process", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmMess", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmMess", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qty", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [INS].[LotAlarmQty] SET [Process] = @Process, [LotNo] = @LotNo, [AlarmNo] "& _ 
                "= @AlarmNo, [AlarmMess] = @AlarmMess, [Qty] = @Qty, [Remark] = @Remark, [CreateT"& _ 
                "ime] = @CreateTime WHERE (([Process] = @Original_Process) AND ([LotNo] = @Origin"& _ 
                "al_LotNo) AND ((@IsNull_AlarmNo = 1 AND [AlarmNo] IS NULL) OR ([AlarmNo] = @Orig"& _ 
                "inal_AlarmNo)) AND ([AlarmMess] = @Original_AlarmMess) AND ((@IsNull_Qty = 1 AND"& _ 
                " [Qty] IS NULL) OR ([Qty] = @Original_Qty)) AND ((@IsNull_Remark = 1 AND [Remark"& _ 
                "] IS NULL) OR ([Remark] = @Original_Remark)) AND ((@IsNull_CreateTime = 1 AND [C"& _ 
                "reateTime] IS NULL) OR ([CreateTime] = @Original_CreateTime)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Process,"& _ 
                " LotNo, AlarmNo, AlarmMess, Qty, Remark, CreateTime FROM INS.LotAlarmQty WHERE ("& _ 
                "AlarmMess = @AlarmMess) AND (LotNo = @LotNo) AND (Process = @Process)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Process", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Process", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlarmMess", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmMess", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qty", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Process", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Process", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlarmNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlarmMess", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlarmMess", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Qty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Qty", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remark", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Selfcon_DB_WB_Inspecction_Lot.My.MySettings.Default.DBxConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT                      Process, LotNo, AlarmNo, AlarmMess, Qty, Remark, Crea"& _ 
                "teTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM                         INS.LotAlarmQty"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DBxDataSet.LotAlarmQtyDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DBxDataSet.LotAlarmQtyDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DBxDataSet.LotAlarmQtyDataTable = New DBxDataSet.LotAlarmQtyDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DBxDataSet.LotAlarmQtyDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DBxDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "LotAlarmQty")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Process As String, ByVal Original_LotNo As String, ByVal Original_AlarmNo As Global.System.Nullable(Of Integer), ByVal Original_AlarmMess As String, ByVal Original_Qty As String, ByVal Original_Remark As String, ByVal Original_CreateTime As Global.System.Nullable(Of Date)) As Integer
            If (Original_Process Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Process")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Process,String)
            End If
            If (Original_LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_LotNo,String)
            End If
            If (Original_AlarmNo.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_AlarmNo.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmMess Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_AlarmMess")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_AlarmMess,String)
            End If
            If (Original_Qty Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Qty,String)
            End If
            If (Original_Remark Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Remark,String)
            End If
            If (Original_CreateTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_CreateTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Process As String, ByVal LotNo As String, ByVal AlarmNo As Global.System.Nullable(Of Integer), ByVal AlarmMess As String, ByVal Qty As String, ByVal Remark As String, ByVal CreateTime As Global.System.Nullable(Of Date)) As Integer
            If (Process Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Process")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Process,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(LotNo,String)
            End If
            If (AlarmNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(AlarmNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (AlarmMess Is Nothing) Then
                Throw New Global.System.ArgumentNullException("AlarmMess")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(AlarmMess,String)
            End If
            If (Qty Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Qty,String)
            End If
            If (Remark Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Remark,String)
            End If
            If (CreateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CreateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Process As String, ByVal LotNo As String, ByVal AlarmNo As Global.System.Nullable(Of Integer), ByVal AlarmMess As String, ByVal Qty As String, ByVal Remark As String, ByVal CreateTime As Global.System.Nullable(Of Date), ByVal Original_Process As String, ByVal Original_LotNo As String, ByVal Original_AlarmNo As Global.System.Nullable(Of Integer), ByVal Original_AlarmMess As String, ByVal Original_Qty As String, ByVal Original_Remark As String, ByVal Original_CreateTime As Global.System.Nullable(Of Date)) As Integer
            If (Process Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Process")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Process,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LotNo,String)
            End If
            If (AlarmNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(AlarmNo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (AlarmMess Is Nothing) Then
                Throw New Global.System.ArgumentNullException("AlarmMess")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(AlarmMess,String)
            End If
            If (Qty Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Qty,String)
            End If
            If (Remark Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Remark,String)
            End If
            If (CreateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CreateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_Process Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Process")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Process,String)
            End If
            If (Original_LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_LotNo,String)
            End If
            If (Original_AlarmNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_AlarmNo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_AlarmMess Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_AlarmMess")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_AlarmMess,String)
            End If
            If (Original_Qty Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Qty,String)
            End If
            If (Original_Remark Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Remark,String)
            End If
            If (Original_CreateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_CreateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal AlarmNo As Global.System.Nullable(Of Integer), ByVal Qty As String, ByVal Remark As String, ByVal CreateTime As Global.System.Nullable(Of Date), ByVal Original_Process As String, ByVal Original_LotNo As String, ByVal Original_AlarmNo As Global.System.Nullable(Of Integer), ByVal Original_AlarmMess As String, ByVal Original_Qty As String, ByVal Original_Remark As String, ByVal Original_CreateTime As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_Process, Original_LotNo, AlarmNo, Original_AlarmMess, Qty, Remark, CreateTime, Original_Process, Original_LotNo, Original_AlarmNo, Original_AlarmMess, Original_Qty, Original_Remark, Original_CreateTime)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DBWBINSDataTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DBWBINSData"
            tableMapping.ColumnMappings.Add("LotNo", "LotNo")
            tableMapping.ColumnMappings.Add("StartTime", "StartTime")
            tableMapping.ColumnMappings.Add("EndTime", "EndTime")
            tableMapping.ColumnMappings.Add("ReqDate", "ReqDate")
            tableMapping.ColumnMappings.Add("RequestMode1", "RequestMode1")
            tableMapping.ColumnMappings.Add("RequestMode2", "RequestMode2")
            tableMapping.ColumnMappings.Add("RequestMode3", "RequestMode3")
            tableMapping.ColumnMappings.Add("RequestMode4", "RequestMode4")
            tableMapping.ColumnMappings.Add("RequestMode5", "RequestMode5")
            tableMapping.ColumnMappings.Add("OPNo", "OPNo")
            tableMapping.ColumnMappings.Add("InspMagQty", "InspMagQty")
            tableMapping.ColumnMappings.Add("ResultMode1", "ResultMode1")
            tableMapping.ColumnMappings.Add("ResultQtyMode1", "ResultQtyMode1")
            tableMapping.ColumnMappings.Add("ResultMode2", "ResultMode2")
            tableMapping.ColumnMappings.Add("ResultQtyMode2", "ResultQtyMode2")
            tableMapping.ColumnMappings.Add("ResultMode3", "ResultMode3")
            tableMapping.ColumnMappings.Add("ResultQtyMode3", "ResultQtyMode3")
            tableMapping.ColumnMappings.Add("ResultMode4", "ResultMode4")
            tableMapping.ColumnMappings.Add("ResultQtyMode4", "ResultQtyMode4")
            tableMapping.ColumnMappings.Add("ResultMode5", "ResultMode5")
            tableMapping.ColumnMappings.Add("ResultQtyMode5", "ResultQtyMode5")
            tableMapping.ColumnMappings.Add("GoodQty", "GoodQty")
            tableMapping.ColumnMappings.Add("NGQty", "NGQty")
            tableMapping.ColumnMappings.Add("TotalQty", "TotalQty")
            tableMapping.ColumnMappings.Add("FinalYield", "FinalYield")
            tableMapping.ColumnMappings.Add("TotalTime", "TotalTime")
            tableMapping.ColumnMappings.Add("InspJudg", "InspJudg")
            tableMapping.ColumnMappings.Add("LotJudg", "LotJudg")
            tableMapping.ColumnMappings.Add("Remark", "Remark")
            tableMapping.ColumnMappings.Add("GLCheck", "GLCheck")
            tableMapping.ColumnMappings.Add("SelfConVersion", "SelfConVersion")
            tableMapping.ColumnMappings.Add("NetVersion", "NetVersion")
            tableMapping.ColumnMappings.Add("RequestModeName1", "RequestModeName1")
            tableMapping.ColumnMappings.Add("RequestModeName2", "RequestModeName2")
            tableMapping.ColumnMappings.Add("RequestModeName3", "RequestModeName3")
            tableMapping.ColumnMappings.Add("RequestModeName4", "RequestModeName4")
            tableMapping.ColumnMappings.Add("RequestModeName5", "RequestModeName5")
            tableMapping.ColumnMappings.Add("RequestModeRemark1", "RequestModeRemark1")
            tableMapping.ColumnMappings.Add("RequestModeRemark2", "RequestModeRemark2")
            tableMapping.ColumnMappings.Add("RequestModeRemark3", "RequestModeRemark3")
            tableMapping.ColumnMappings.Add("RequestModeRemark4", "RequestModeRemark4")
            tableMapping.ColumnMappings.Add("RequestModeRemark5", "RequestModeRemark5")
            tableMapping.ColumnMappings.Add("ObjectIns", "ObjectIns")
            tableMapping.ColumnMappings.Add("Package", "Package")
            tableMapping.ColumnMappings.Add("Process", "Process")
            tableMapping.ColumnMappings.Add("JudgeReason", "JudgeReason")
            tableMapping.ColumnMappings.Add("ResultModeName1", "ResultModeName1")
            tableMapping.ColumnMappings.Add("ResultModeName2", "ResultModeName2")
            tableMapping.ColumnMappings.Add("ResultModeName3", "ResultModeName3")
            tableMapping.ColumnMappings.Add("ResultModeName4", "ResultModeName4")
            tableMapping.ColumnMappings.Add("ResultModeName5", "ResultModeName5")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("StopTime", "StopTime")
            tableMapping.ColumnMappings.Add("InspNGQty", "InspNGQty")
            tableMapping.ColumnMappings.Add("MCNo", "MCNo")
            tableMapping.ColumnMappings.Add("ComName", "ComName")
            tableMapping.ColumnMappings.Add("InspectorNo", "InspectorNo")
            tableMapping.ColumnMappings.Add("InsName", "InsName")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [INS].[DBWBINSData] WHERE (([LotNo] = @Original_LotNo) AND ((@IsNull_"& _ 
                "StartTime = 1 AND [StartTime] IS NULL) OR ([StartTime] = @Original_StartTime)) A"& _ 
                "ND ((@IsNull_EndTime = 1 AND [EndTime] IS NULL) OR ([EndTime] = @Original_EndTim"& _ 
                "e)) AND ([ReqDate] = @Original_ReqDate) AND ((@IsNull_RequestMode2 = 1 AND [Requ"& _ 
                "estMode2] IS NULL) OR ([RequestMode2] = @Original_RequestMode2)) AND ((@IsNull_R"& _ 
                "equestMode3 = 1 AND [RequestMode3] IS NULL) OR ([RequestMode3] = @Original_Reque"& _ 
                "stMode3)) AND ((@IsNull_RequestMode4 = 1 AND [RequestMode4] IS NULL) OR ([Reques"& _ 
                "tMode4] = @Original_RequestMode4)) AND ((@IsNull_RequestMode5 = 1 AND [RequestMo"& _ 
                "de5] IS NULL) OR ([RequestMode5] = @Original_RequestMode5)) AND ((@IsNull_OPNo ="& _ 
                " 1 AND [OPNo] IS NULL) OR ([OPNo] = @Original_OPNo)) AND ((@IsNull_InspMagQty = "& _ 
                "1 AND [InspMagQty] IS NULL) OR ([InspMagQty] = @Original_InspMagQty)) AND ((@IsN"& _ 
                "ull_ResultMode1 = 1 AND [ResultMode1] IS NULL) OR ([ResultMode1] = @Original_Res"& _ 
                "ultMode1)) AND ((@IsNull_ResultQtyMode1 = 1 AND [ResultQtyMode1] IS NULL) OR ([R"& _ 
                "esultQtyMode1] = @Original_ResultQtyMode1)) AND ((@IsNull_ResultMode2 = 1 AND [R"& _ 
                "esultMode2] IS NULL) OR ([ResultMode2] = @Original_ResultMode2)) AND ((@IsNull_R"& _ 
                "esultQtyMode2 = 1 AND [ResultQtyMode2] IS NULL) OR ([ResultQtyMode2] = @Original"& _ 
                "_ResultQtyMode2)) AND ((@IsNull_ResultMode3 = 1 AND [ResultMode3] IS NULL) OR (["& _ 
                "ResultMode3] = @Original_ResultMode3)) AND ((@IsNull_ResultQtyMode3 = 1 AND [Res"& _ 
                "ultQtyMode3] IS NULL) OR ([ResultQtyMode3] = @Original_ResultQtyMode3)) AND ((@I"& _ 
                "sNull_ResultMode4 = 1 AND [ResultMode4] IS NULL) OR ([ResultMode4] = @Original_R"& _ 
                "esultMode4)) AND ((@IsNull_ResultQtyMode4 = 1 AND [ResultQtyMode4] IS NULL) OR ("& _ 
                "[ResultQtyMode4] = @Original_ResultQtyMode4)) AND ((@IsNull_ResultMode5 = 1 AND "& _ 
                "[ResultMode5] IS NULL) OR ([ResultMode5] = @Original_ResultMode5)) AND ((@IsNull"& _ 
                "_ResultQtyMode5 = 1 AND [ResultQtyMode5] IS NULL) OR ([ResultQtyMode5] = @Origin"& _ 
                "al_ResultQtyMode5)) AND ((@IsNull_GoodQty = 1 AND [GoodQty] IS NULL) OR ([GoodQt"& _ 
                "y] = @Original_GoodQty)) AND ((@IsNull_NGQty = 1 AND [NGQty] IS NULL) OR ([NGQty"& _ 
                "] = @Original_NGQty)) AND ((@IsNull_TotalQty = 1 AND [TotalQty] IS NULL) OR ([To"& _ 
                "talQty] = @Original_TotalQty)) AND ((@IsNull_FinalYield = 1 AND [FinalYield] IS "& _ 
                "NULL) OR ([FinalYield] = @Original_FinalYield)) AND ((@IsNull_TotalTime = 1 AND "& _ 
                "[TotalTime] IS NULL) OR ([TotalTime] = @Original_TotalTime)) AND ((@IsNull_InspJ"& _ 
                "udg = 1 AND [InspJudg] IS NULL) OR ([InspJudg] = @Original_InspJudg)) AND ((@IsN"& _ 
                "ull_LotJudg = 1 AND [LotJudg] IS NULL) OR ([LotJudg] = @Original_LotJudg)) AND ("& _ 
                "(@IsNull_Remark = 1 AND [Remark] IS NULL) OR ([Remark] = @Original_Remark)) AND "& _ 
                "((@IsNull_GLCheck = 1 AND [GLCheck] IS NULL) OR ([GLCheck] = @Original_GLCheck))"& _ 
                " AND ((@IsNull_SelfConVersion = 1 AND [SelfConVersion] IS NULL) OR ([SelfConVers"& _ 
                "ion] = @Original_SelfConVersion)) AND ((@IsNull_NetVersion = 1 AND [NetVersion] "& _ 
                "IS NULL) OR ([NetVersion] = @Original_NetVersion)) AND ((@IsNull_RequestModeName"& _ 
                "1 = 1 AND [RequestModeName1] IS NULL) OR ([RequestModeName1] = @Original_Request"& _ 
                "ModeName1)) AND ((@IsNull_RequestModeName2 = 1 AND [RequestModeName2] IS NULL) O"& _ 
                "R ([RequestModeName2] = @Original_RequestModeName2)) AND ((@IsNull_RequestModeNa"& _ 
                "me3 = 1 AND [RequestModeName3] IS NULL) OR ([RequestModeName3] = @Original_Reque"& _ 
                "stModeName3)) AND ((@IsNull_RequestModeName4 = 1 AND [RequestModeName4] IS NULL)"& _ 
                " OR ([RequestModeName4] = @Original_RequestModeName4)) AND ((@IsNull_RequestMode"& _ 
                "Name5 = 1 AND [RequestModeName5] IS NULL) OR ([RequestModeName5] = @Original_Req"& _ 
                "uestModeName5)) AND ((@IsNull_RequestModeRemark1 = 1 AND [RequestModeRemark1] IS"& _ 
                " NULL) OR ([RequestModeRemark1] = @Original_RequestModeRemark1)) AND ((@IsNull_R"& _ 
                "equestModeRemark2 = 1 AND [RequestModeRemark2] IS NULL) OR ([RequestModeRemark2]"& _ 
                " = @Original_RequestModeRemark2)) AND ((@IsNull_RequestModeRemark3 = 1 AND [Requ"& _ 
                "estModeRemark3] IS NULL) OR ([RequestModeRemark3] = @Original_RequestModeRemark3"& _ 
                ")) AND ((@IsNull_RequestModeRemark4 = 1 AND [RequestModeRemark4] IS NULL) OR ([R"& _ 
                "equestModeRemark4] = @Original_RequestModeRemark4)) AND ((@IsNull_RequestModeRem"& _ 
                "ark5 = 1 AND [RequestModeRemark5] IS NULL) OR ([RequestModeRemark5] = @Original_"& _ 
                "RequestModeRemark5)) AND ((@IsNull_ObjectIns = 1 AND [ObjectIns] IS NULL) OR ([O"& _ 
                "bjectIns] = @Original_ObjectIns)) AND ((@IsNull_Package = 1 AND [Package] IS NUL"& _ 
                "L) OR ([Package] = @Original_Package)) AND ((@IsNull_Process = 1 AND [Process] I"& _ 
                "S NULL) OR ([Process] = @Original_Process)) AND ((@IsNull_JudgeReason = 1 AND [J"& _ 
                "udgeReason] IS NULL) OR ([JudgeReason] = @Original_JudgeReason)) AND ((@IsNull_R"& _ 
                "esultModeName1 = 1 AND [ResultModeName1] IS NULL) OR ([ResultModeName1] = @Origi"& _ 
                "nal_ResultModeName1)) AND ((@IsNull_ResultModeName2 = 1 AND [ResultModeName2] IS"& _ 
                " NULL) OR ([ResultModeName2] = @Original_ResultModeName2)) AND ((@IsNull_ResultM"& _ 
                "odeName3 = 1 AND [ResultModeName3] IS NULL) OR ([ResultModeName3] = @Original_Re"& _ 
                "sultModeName3)) AND ((@IsNull_ResultModeName4 = 1 AND [ResultModeName4] IS NULL)"& _ 
                " OR ([ResultModeName4] = @Original_ResultModeName4)) AND ((@IsNull_ResultModeNam"& _ 
                "e5 = 1 AND [ResultModeName5] IS NULL) OR ([ResultModeName5] = @Original_ResultMo"& _ 
                "deName5)) AND ((@IsNull_Status = 1 AND [Status] IS NULL) OR ([Status] = @Origina"& _ 
                "l_Status)) AND ((@IsNull_StopTime = 1 AND [StopTime] IS NULL) OR ([StopTime] = @"& _ 
                "Original_StopTime)) AND ((@IsNull_InspNGQty = 1 AND [InspNGQty] IS NULL) OR ([In"& _ 
                "spNGQty] = @Original_InspNGQty)) AND ((@IsNull_RequestMode1 = 1 AND [RequestMode"& _ 
                "1] IS NULL) OR ([RequestMode1] = @Original_RequestMode1)) AND ((@IsNull_MCNo = 1"& _ 
                " AND [MCNo] IS NULL) OR ([MCNo] = @Original_MCNo)) AND ((@IsNull_ComName = 1 AND"& _ 
                " [ComName] IS NULL) OR ([ComName] = @Original_ComName)) AND ((@IsNull_InspectorN"& _ 
                "o = 1 AND [InspectorNo] IS NULL) OR ([InspectorNo] = @Original_InspectorNo)) AND"& _ 
                " ((@IsNull_InsName = 1 AND [InsName] IS NULL) OR ([InsName] = @Original_InsName)"& _ 
                "))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StartTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StartTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StartTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StartTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EndTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EndTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EndTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EndTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReqDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReqDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestMode2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestMode2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestMode3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestMode3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestMode4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestMode4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestMode5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestMode5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InspMagQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspMagQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InspMagQty", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspMagQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultMode1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultMode1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultQtyMode1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultQtyMode1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultMode2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultMode2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultQtyMode2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultQtyMode2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultMode3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultMode3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultQtyMode3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultQtyMode3", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultMode4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultMode4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultQtyMode4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultQtyMode4", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultMode5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultMode5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultQtyMode5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultQtyMode5", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GoodQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoodQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GoodQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoodQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NGQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NGQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinalYield", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalYield", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinalYield", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalYield", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalTime", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InspJudg", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspJudg", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InspJudg", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspJudg", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotJudg", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotJudg", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remark", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GLCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GLCheck", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GLCheck", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GLCheck", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SelfConVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SelfConVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeName1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeName1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeName2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeName2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeName3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeName3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeName4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeName4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeName5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeName5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeRemark1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeRemark1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeRemark2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeRemark2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeRemark3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeRemark3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeRemark4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeRemark4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeRemark5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeRemark5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ObjectIns", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObjectIns", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ObjectIns", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObjectIns", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Package", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Package", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Package", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Package", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Process", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Process", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Process", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Process", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_JudgeReason", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JudgeReason", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_JudgeReason", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JudgeReason", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultModeName1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultModeName1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultModeName2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultModeName2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultModeName3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultModeName3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultModeName4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultModeName4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultModeName5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultModeName5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Status", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Status", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StopTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StopTime", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InspNGQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspNGQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InspNGQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspNGQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestMode1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestMode1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MCNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ComName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ComName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ComName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ComName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InspectorNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspectorNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InspectorNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspectorNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InsName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InsName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [INS].[DBWBINSData] ([LotNo], [StartTime], [EndTime], [ReqDate], [Req"& _ 
                "uestMode2], [RequestMode3], [RequestMode4], [RequestMode5], [OPNo], [InspMagQty]"& _ 
                ", [ResultMode1], [ResultQtyMode1], [ResultMode2], [ResultQtyMode2], [ResultMode3"& _ 
                "], [ResultQtyMode3], [ResultMode4], [ResultQtyMode4], [ResultMode5], [ResultQtyM"& _ 
                "ode5], [GoodQty], [NGQty], [TotalQty], [FinalYield], [TotalTime], [InspJudg], [L"& _ 
                "otJudg], [Remark], [GLCheck], [SelfConVersion], [NetVersion], [RequestModeName1]"& _ 
                ", [RequestModeName2], [RequestModeName3], [RequestModeName4], [RequestModeName5]"& _ 
                ", [RequestModeRemark1], [RequestModeRemark2], [RequestModeRemark3], [RequestMode"& _ 
                "Remark4], [RequestModeRemark5], [ObjectIns], [Package], [Process], [JudgeReason]"& _ 
                ", [ResultModeName1], [ResultModeName2], [ResultModeName3], [ResultModeName4], [R"& _ 
                "esultModeName5], [Status], [StopTime], [InspNGQty], [RequestMode1], [MCNo], [Com"& _ 
                "Name], [InspectorNo], [InsName]) VALUES (@LotNo, @StartTime, @EndTime, @ReqDate,"& _ 
                " @RequestMode2, @RequestMode3, @RequestMode4, @RequestMode5, @OPNo, @InspMagQty,"& _ 
                " @ResultMode1, @ResultQtyMode1, @ResultMode2, @ResultQtyMode2, @ResultMode3, @Re"& _ 
                "sultQtyMode3, @ResultMode4, @ResultQtyMode4, @ResultMode5, @ResultQtyMode5, @Goo"& _ 
                "dQty, @NGQty, @TotalQty, @FinalYield, @TotalTime, @InspJudg, @LotJudg, @Remark, "& _ 
                "@GLCheck, @SelfConVersion, @NetVersion, @RequestModeName1, @RequestModeName2, @R"& _ 
                "equestModeName3, @RequestModeName4, @RequestModeName5, @RequestModeRemark1, @Req"& _ 
                "uestModeRemark2, @RequestModeRemark3, @RequestModeRemark4, @RequestModeRemark5, "& _ 
                "@ObjectIns, @Package, @Process, @JudgeReason, @ResultModeName1, @ResultModeName2"& _ 
                ", @ResultModeName3, @ResultModeName4, @ResultModeName5, @Status, @StopTime, @Ins"& _ 
                "pNGQty, @RequestMode1, @MCNo, @ComName, @InspectorNo, @InsName);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT LotNo, "& _ 
                "StartTime, EndTime, ReqDate, RequestMode2, RequestMode3, RequestMode4, RequestMo"& _ 
                "de5, OPNo, InspMagQty, ResultMode1, ResultQtyMode1, ResultMode2, ResultQtyMode2,"& _ 
                " ResultMode3, ResultQtyMode3, ResultMode4, ResultQtyMode4, ResultMode5, ResultQt"& _ 
                "yMode5, GoodQty, NGQty, TotalQty, FinalYield, TotalTime, InspJudg, LotJudg, Rema"& _ 
                "rk, GLCheck, SelfConVersion, NetVersion, RequestModeName1, RequestModeName2, Req"& _ 
                "uestModeName3, RequestModeName4, RequestModeName5, RequestModeRemark1, RequestMo"& _ 
                "deRemark2, RequestModeRemark3, RequestModeRemark4, RequestModeRemark5, ObjectIns"& _ 
                ", Package, Process, JudgeReason, ResultModeName1, ResultModeName2, ResultModeNam"& _ 
                "e3, ResultModeName4, ResultModeName5, Status, StopTime, InspNGQty, RequestMode1,"& _ 
                " MCNo, ComName, InspectorNo, InsName FROM INS.DBWBINSData WHERE (LotNo = @LotNo)"& _ 
                " AND (ReqDate = @ReqDate)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StartTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EndTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReqDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReqDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestMode2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestMode3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestMode4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestMode5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InspMagQty", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspMagQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultMode1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultQtyMode1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultMode2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultQtyMode2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultMode3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultQtyMode3", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultMode4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultQtyMode4", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultMode5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultQtyMode5", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GoodQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoodQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NGQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinalYield", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalYield", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalTime", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InspJudg", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspJudg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotJudg", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GLCheck", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GLCheck", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SelfConVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeName1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeName2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeName3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeName4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeName5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeRemark1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeRemark2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeRemark3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeRemark4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeRemark5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ObjectIns", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObjectIns", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Package", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Package", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Process", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Process", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JudgeReason", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JudgeReason", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultModeName1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultModeName2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultModeName3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultModeName4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultModeName5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StopTime", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InspNGQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspNGQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestMode1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ComName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ComName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InspectorNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspectorNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [INS].[DBWBINSData] SET [LotNo] = @LotNo, [StartTime] = @StartTime, [EndTi"& _ 
                "me] = @EndTime, [ReqDate] = @ReqDate, [RequestMode2] = @RequestMode2, [RequestMo"& _ 
                "de3] = @RequestMode3, [RequestMode4] = @RequestMode4, [RequestMode5] = @RequestM"& _ 
                "ode5, [OPNo] = @OPNo, [InspMagQty] = @InspMagQty, [ResultMode1] = @ResultMode1, "& _ 
                "[ResultQtyMode1] = @ResultQtyMode1, [ResultMode2] = @ResultMode2, [ResultQtyMode"& _ 
                "2] = @ResultQtyMode2, [ResultMode3] = @ResultMode3, [ResultQtyMode3] = @ResultQt"& _ 
                "yMode3, [ResultMode4] = @ResultMode4, [ResultQtyMode4] = @ResultQtyMode4, [Resul"& _ 
                "tMode5] = @ResultMode5, [ResultQtyMode5] = @ResultQtyMode5, [GoodQty] = @GoodQty"& _ 
                ", [NGQty] = @NGQty, [TotalQty] = @TotalQty, [FinalYield] = @FinalYield, [TotalTi"& _ 
                "me] = @TotalTime, [InspJudg] = @InspJudg, [LotJudg] = @LotJudg, [Remark] = @Rema"& _ 
                "rk, [GLCheck] = @GLCheck, [SelfConVersion] = @SelfConVersion, [NetVersion] = @Ne"& _ 
                "tVersion, [RequestModeName1] = @RequestModeName1, [RequestModeName2] = @RequestM"& _ 
                "odeName2, [RequestModeName3] = @RequestModeName3, [RequestModeName4] = @RequestM"& _ 
                "odeName4, [RequestModeName5] = @RequestModeName5, [RequestModeRemark1] = @Reques"& _ 
                "tModeRemark1, [RequestModeRemark2] = @RequestModeRemark2, [RequestModeRemark3] ="& _ 
                " @RequestModeRemark3, [RequestModeRemark4] = @RequestModeRemark4, [RequestModeRe"& _ 
                "mark5] = @RequestModeRemark5, [ObjectIns] = @ObjectIns, [Package] = @Package, [P"& _ 
                "rocess] = @Process, [JudgeReason] = @JudgeReason, [ResultModeName1] = @ResultMod"& _ 
                "eName1, [ResultModeName2] = @ResultModeName2, [ResultModeName3] = @ResultModeNam"& _ 
                "e3, [ResultModeName4] = @ResultModeName4, [ResultModeName5] = @ResultModeName5, "& _ 
                "[Status] = @Status, [StopTime] = @StopTime, [InspNGQty] = @InspNGQty, [RequestMo"& _ 
                "de1] = @RequestMode1, [MCNo] = @MCNo, [ComName] = @ComName, [InspectorNo] = @Ins"& _ 
                "pectorNo, [InsName] = @InsName WHERE (([LotNo] = @Original_LotNo) AND ((@IsNull_"& _ 
                "StartTime = 1 AND [StartTime] IS NULL) OR ([StartTime] = @Original_StartTime)) A"& _ 
                "ND ((@IsNull_EndTime = 1 AND [EndTime] IS NULL) OR ([EndTime] = @Original_EndTim"& _ 
                "e)) AND ([ReqDate] = @Original_ReqDate) AND ((@IsNull_RequestMode2 = 1 AND [Requ"& _ 
                "estMode2] IS NULL) OR ([RequestMode2] = @Original_RequestMode2)) AND ((@IsNull_R"& _ 
                "equestMode3 = 1 AND [RequestMode3] IS NULL) OR ([RequestMode3] = @Original_Reque"& _ 
                "stMode3)) AND ((@IsNull_RequestMode4 = 1 AND [RequestMode4] IS NULL) OR ([Reques"& _ 
                "tMode4] = @Original_RequestMode4)) AND ((@IsNull_RequestMode5 = 1 AND [RequestMo"& _ 
                "de5] IS NULL) OR ([RequestMode5] = @Original_RequestMode5)) AND ((@IsNull_OPNo ="& _ 
                " 1 AND [OPNo] IS NULL) OR ([OPNo] = @Original_OPNo)) AND ((@IsNull_InspMagQty = "& _ 
                "1 AND [InspMagQty] IS NULL) OR ([InspMagQty] = @Original_InspMagQty)) AND ((@IsN"& _ 
                "ull_ResultMode1 = 1 AND [ResultMode1] IS NULL) OR ([ResultMode1] = @Original_Res"& _ 
                "ultMode1)) AND ((@IsNull_ResultQtyMode1 = 1 AND [ResultQtyMode1] IS NULL) OR ([R"& _ 
                "esultQtyMode1] = @Original_ResultQtyMode1)) AND ((@IsNull_ResultMode2 = 1 AND [R"& _ 
                "esultMode2] IS NULL) OR ([ResultMode2] = @Original_ResultMode2)) AND ((@IsNull_R"& _ 
                "esultQtyMode2 = 1 AND [ResultQtyMode2] IS NULL) OR ([ResultQtyMode2] = @Original"& _ 
                "_ResultQtyMode2)) AND ((@IsNull_ResultMode3 = 1 AND [ResultMode3] IS NULL) OR (["& _ 
                "ResultMode3] = @Original_ResultMode3)) AND ((@IsNull_ResultQtyMode3 = 1 AND [Res"& _ 
                "ultQtyMode3] IS NULL) OR ([ResultQtyMode3] = @Original_ResultQtyMode3)) AND ((@I"& _ 
                "sNull_ResultMode4 = 1 AND [ResultMode4] IS NULL) OR ([ResultMode4] = @Original_R"& _ 
                "esultMode4)) AND ((@IsNull_ResultQtyMode4 = 1 AND [ResultQtyMode4] IS NULL) OR ("& _ 
                "[ResultQtyMode4] = @Original_ResultQtyMode4)) AND ((@IsNull_ResultMode5 = 1 AND "& _ 
                "[ResultMode5] IS NULL) OR ([ResultMode5] = @Original_ResultMode5)) AND ((@IsNull"& _ 
                "_ResultQtyMode5 = 1 AND [ResultQtyMode5] IS NULL) OR ([ResultQtyMode5] = @Origin"& _ 
                "al_ResultQtyMode5)) AND ((@IsNull_GoodQty = 1 AND [GoodQty] IS NULL) OR ([GoodQt"& _ 
                "y] = @Original_GoodQty)) AND ((@IsNull_NGQty = 1 AND [NGQty] IS NULL) OR ([NGQty"& _ 
                "] = @Original_NGQty)) AND ((@IsNull_TotalQty = 1 AND [TotalQty] IS NULL) OR ([To"& _ 
                "talQty] = @Original_TotalQty)) AND ((@IsNull_FinalYield = 1 AND [FinalYield] IS "& _ 
                "NULL) OR ([FinalYield] = @Original_FinalYield)) AND ((@IsNull_TotalTime = 1 AND "& _ 
                "[TotalTime] IS NULL) OR ([TotalTime] = @Original_TotalTime)) AND ((@IsNull_InspJ"& _ 
                "udg = 1 AND [InspJudg] IS NULL) OR ([InspJudg] = @Original_InspJudg)) AND ((@IsN"& _ 
                "ull_LotJudg = 1 AND [LotJudg] IS NULL) OR ([LotJudg] = @Original_LotJudg)) AND ("& _ 
                "(@IsNull_Remark = 1 AND [Remark] IS NULL) OR ([Remark] = @Original_Remark)) AND "& _ 
                "((@IsNull_GLCheck = 1 AND [GLCheck] IS NULL) OR ([GLCheck] = @Original_GLCheck))"& _ 
                " AND ((@IsNull_SelfConVersion = 1 AND [SelfConVersion] IS NULL) OR ([SelfConVers"& _ 
                "ion] = @Original_SelfConVersion)) AND ((@IsNull_NetVersion = 1 AND [NetVersion] "& _ 
                "IS NULL) OR ([NetVersion] = @Original_NetVersion)) AND ((@IsNull_RequestModeName"& _ 
                "1 = 1 AND [RequestModeName1] IS NULL) OR ([RequestModeName1] = @Original_Request"& _ 
                "ModeName1)) AND ((@IsNull_RequestModeName2 = 1 AND [RequestModeName2] IS NULL) O"& _ 
                "R ([RequestModeName2] = @Original_RequestModeName2)) AND ((@IsNull_RequestModeNa"& _ 
                "me3 = 1 AND [RequestModeName3] IS NULL) OR ([RequestModeName3] = @Original_Reque"& _ 
                "stModeName3)) AND ((@IsNull_RequestModeName4 = 1 AND [RequestModeName4] IS NULL)"& _ 
                " OR ([RequestModeName4] = @Original_RequestModeName4)) AND ((@IsNull_RequestMode"& _ 
                "Name5 = 1 AND [RequestModeName5] IS NULL) OR ([RequestModeName5] = @Original_Req"& _ 
                "uestModeName5)) AND ((@IsNull_RequestModeRemark1 = 1 AND [RequestModeRemark1] IS"& _ 
                " NULL) OR ([RequestModeRemark1] = @Original_RequestModeRemark1)) AND ((@IsNull_R"& _ 
                "equestModeRemark2 = 1 AND [RequestModeRemark2] IS NULL) OR ([RequestModeRemark2]"& _ 
                " = @Original_RequestModeRemark2)) AND ((@IsNull_RequestModeRemark3 = 1 AND [Requ"& _ 
                "estModeRemark3] IS NULL) OR ([RequestModeRemark3] = @Original_RequestModeRemark3"& _ 
                ")) AND ((@IsNull_RequestModeRemark4 = 1 AND [RequestModeRemark4] IS NULL) OR ([R"& _ 
                "equestModeRemark4] = @Original_RequestModeRemark4)) AND ((@IsNull_RequestModeRem"& _ 
                "ark5 = 1 AND [RequestModeRemark5] IS NULL) OR ([RequestModeRemark5] = @Original_"& _ 
                "RequestModeRemark5)) AND ((@IsNull_ObjectIns = 1 AND [ObjectIns] IS NULL) OR ([O"& _ 
                "bjectIns] = @Original_ObjectIns)) AND ((@IsNull_Package = 1 AND [Package] IS NUL"& _ 
                "L) OR ([Package] = @Original_Package)) AND ((@IsNull_Process = 1 AND [Process] I"& _ 
                "S NULL) OR ([Process] = @Original_Process)) AND ((@IsNull_JudgeReason = 1 AND [J"& _ 
                "udgeReason] IS NULL) OR ([JudgeReason] = @Original_JudgeReason)) AND ((@IsNull_R"& _ 
                "esultModeName1 = 1 AND [ResultModeName1] IS NULL) OR ([ResultModeName1] = @Origi"& _ 
                "nal_ResultModeName1)) AND ((@IsNull_ResultModeName2 = 1 AND [ResultModeName2] IS"& _ 
                " NULL) OR ([ResultModeName2] = @Original_ResultModeName2)) AND ((@IsNull_ResultM"& _ 
                "odeName3 = 1 AND [ResultModeName3] IS NULL) OR ([ResultModeName3] = @Original_Re"& _ 
                "sultModeName3)) AND ((@IsNull_ResultModeName4 = 1 AND [ResultModeName4] IS NULL)"& _ 
                " OR ([ResultModeName4] = @Original_ResultModeName4)) AND ((@IsNull_ResultModeNam"& _ 
                "e5 = 1 AND [ResultModeName5] IS NULL) OR ([ResultModeName5] = @Original_ResultMo"& _ 
                "deName5)) AND ((@IsNull_Status = 1 AND [Status] IS NULL) OR ([Status] = @Origina"& _ 
                "l_Status)) AND ((@IsNull_StopTime = 1 AND [StopTime] IS NULL) OR ([StopTime] = @"& _ 
                "Original_StopTime)) AND ((@IsNull_InspNGQty = 1 AND [InspNGQty] IS NULL) OR ([In"& _ 
                "spNGQty] = @Original_InspNGQty)) AND ((@IsNull_RequestMode1 = 1 AND [RequestMode"& _ 
                "1] IS NULL) OR ([RequestMode1] = @Original_RequestMode1)) AND ((@IsNull_MCNo = 1"& _ 
                " AND [MCNo] IS NULL) OR ([MCNo] = @Original_MCNo)) AND ((@IsNull_ComName = 1 AND"& _ 
                " [ComName] IS NULL) OR ([ComName] = @Original_ComName)) AND ((@IsNull_InspectorN"& _ 
                "o = 1 AND [InspectorNo] IS NULL) OR ([InspectorNo] = @Original_InspectorNo)) AND"& _ 
                " ((@IsNull_InsName = 1 AND [InsName] IS NULL) OR ([InsName] = @Original_InsName)"& _ 
                "));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT LotNo, StartTime, EndTime, ReqDate, RequestMode2, RequestMode3, Requ"& _ 
                "estMode4, RequestMode5, OPNo, InspMagQty, ResultMode1, ResultQtyMode1, ResultMod"& _ 
                "e2, ResultQtyMode2, ResultMode3, ResultQtyMode3, ResultMode4, ResultQtyMode4, Re"& _ 
                "sultMode5, ResultQtyMode5, GoodQty, NGQty, TotalQty, FinalYield, TotalTime, Insp"& _ 
                "Judg, LotJudg, Remark, GLCheck, SelfConVersion, NetVersion, RequestModeName1, Re"& _ 
                "questModeName2, RequestModeName3, RequestModeName4, RequestModeName5, RequestMod"& _ 
                "eRemark1, RequestModeRemark2, RequestModeRemark3, RequestModeRemark4, RequestMod"& _ 
                "eRemark5, ObjectIns, Package, Process, JudgeReason, ResultModeName1, ResultModeN"& _ 
                "ame2, ResultModeName3, ResultModeName4, ResultModeName5, Status, StopTime, InspN"& _ 
                "GQty, RequestMode1, MCNo, ComName, InspectorNo, InsName FROM INS.DBWBINSData WHE"& _ 
                "RE (LotNo = @LotNo) AND (ReqDate = @ReqDate)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StartTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EndTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReqDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReqDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestMode2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestMode3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestMode4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestMode5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InspMagQty", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspMagQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultMode1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultQtyMode1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultMode2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultQtyMode2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultMode3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultQtyMode3", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultMode4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultQtyMode4", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultMode5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultQtyMode5", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GoodQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoodQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NGQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinalYield", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalYield", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalTime", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InspJudg", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspJudg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotJudg", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GLCheck", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GLCheck", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SelfConVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeName1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeName2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeName3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeName4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeName5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeRemark1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeRemark2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeRemark3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeRemark4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestModeRemark5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ObjectIns", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObjectIns", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Package", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Package", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Process", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Process", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JudgeReason", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JudgeReason", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultModeName1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultModeName2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultModeName3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultModeName4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultModeName5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StopTime", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InspNGQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspNGQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestMode1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ComName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ComName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InspectorNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspectorNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StartTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StartTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StartTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StartTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EndTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EndTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EndTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EndTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReqDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReqDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestMode2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestMode2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestMode3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestMode3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestMode4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestMode4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestMode5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestMode5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InspMagQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspMagQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InspMagQty", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspMagQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultMode1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultMode1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultQtyMode1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultQtyMode1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultMode2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultMode2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultQtyMode2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultQtyMode2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultMode3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultMode3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultQtyMode3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultQtyMode3", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultMode4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultMode4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultQtyMode4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultQtyMode4", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultMode5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultMode5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultMode5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultQtyMode5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultQtyMode5", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultQtyMode5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GoodQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoodQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GoodQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GoodQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NGQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NGQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinalYield", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalYield", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinalYield", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalYield", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalTime", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InspJudg", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspJudg", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InspJudg", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspJudg", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotJudg", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotJudg", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotJudg", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remark", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remark", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GLCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GLCheck", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GLCheck", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GLCheck", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SelfConVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SelfConVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SelfConVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetVersion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeName1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeName1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeName2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeName2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeName3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeName3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeName4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeName4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeName5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeName5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeName5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeRemark1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeRemark1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeRemark2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeRemark2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeRemark3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeRemark3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeRemark4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeRemark4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestModeRemark5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestModeRemark5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestModeRemark5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ObjectIns", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObjectIns", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ObjectIns", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObjectIns", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Package", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Package", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Package", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Package", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Process", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Process", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Process", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Process", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_JudgeReason", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JudgeReason", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_JudgeReason", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JudgeReason", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultModeName1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultModeName1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultModeName2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultModeName2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultModeName3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultModeName3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultModeName4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultModeName4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResultModeName5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultModeName5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultModeName5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Status", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Status", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StopTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StopTime", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StopTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InspNGQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspNGQty", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InspNGQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspNGQty", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequestMode1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequestMode1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestMode1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MCNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ComName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ComName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ComName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ComName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InspectorNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspectorNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InspectorNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InspectorNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InsName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InsName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Selfcon_DB_WB_Inspecction_Lot.My.MySettings.Default.DBxConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        LotNo, StartTime, EndTime, ReqDate, RequestMode2, RequestMode3, Req"& _ 
                "uestMode4, RequestMode5, OPNo, InspMagQty, ResultMode1, ResultQtyMode1, ResultMo"& _ 
                "de2, ResultQtyMode2, ResultMode3, ResultQtyMode3, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Res"& _ 
                "ultMode4, ResultQtyMode4, ResultMode5, ResultQtyMode5, GoodQty, NGQty, TotalQty,"& _ 
                " FinalYield, TotalTime, InspJudg, LotJudg, Remark, GLCheck, SelfConVersion, NetV"& _ 
                "ersion, RequestModeName1, RequestModeName2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RequestMo"& _ 
                "deName3, RequestModeName4, RequestModeName5, RequestModeRemark1, RequestModeRema"& _ 
                "rk2, RequestModeRemark3, RequestModeRemark4, RequestModeRemark5, ObjectIns, Pack"& _ 
                "age, Process, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         JudgeReason, ResultModeName1, ResultMod"& _ 
                "eName2, ResultModeName3, ResultModeName4, ResultModeName5, Status, StopTime, Ins"& _ 
                "pNGQty, RequestMode1, MCNo, ComName, InspectorNo, InsName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            INS.D"& _ 
                "BWBINSData"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ComName, EndTime, FinalYield, GLCheck, GoodQty, InsName, InspJudg, InspMag"& _ 
                "Qty, InspNGQty, InspectorNo, JudgeReason, LotJudg, LotNo, MCNo, NGQty, NetVersio"& _ 
                "n, OPNo, ObjectIns, Package, Process, Remark, ReqDate, RequestMode1, RequestMode"& _ 
                "2, RequestMode3, RequestMode4, RequestMode5, RequestModeName1, RequestModeName2,"& _ 
                " RequestModeName3, RequestModeName4, RequestModeName5, RequestModeRemark1, Reque"& _ 
                "stModeRemark2, RequestModeRemark3, RequestModeRemark4, RequestModeRemark5, Resul"& _ 
                "tMode1, ResultMode2, ResultMode3, ResultMode4, ResultMode5, ResultModeName1, Res"& _ 
                "ultModeName2, ResultModeName3, ResultModeName4, ResultModeName5, ResultQtyMode1,"& _ 
                " ResultQtyMode2, ResultQtyMode3, ResultQtyMode4, ResultQtyMode5, SelfConVersion,"& _ 
                " StartTime, Status, StopTime, TotalQty, TotalTime FROM INS.DBWBINSData WHERE (En"& _ 
                "dTime IS NULL) AND (ReqDate IS NOT NULL) AND (StartTime IS NULL) ORDER BY StartT"& _ 
                "ime DESC"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT ComName, EndTime, FinalYield, GLCheck, GoodQty, InsName, InspJudg, InspMag"& _ 
                "Qty, InspNGQty, InspectorNo, JudgeReason, LotJudg, LotNo, MCNo, NGQty, NetVersio"& _ 
                "n, OPNo, ObjectIns, Package, Process, Remark, ReqDate, RequestMode1, RequestMode"& _ 
                "2, RequestMode3, RequestMode4, RequestMode5, RequestModeName1, RequestModeName2,"& _ 
                " RequestModeName3, RequestModeName4, RequestModeName5, RequestModeRemark1, Reque"& _ 
                "stModeRemark2, RequestModeRemark3, RequestModeRemark4, RequestModeRemark5, Resul"& _ 
                "tMode1, ResultMode2, ResultMode3, ResultMode4, ResultMode5, ResultModeName1, Res"& _ 
                "ultModeName2, ResultModeName3, ResultModeName4, ResultModeName5, ResultQtyMode1,"& _ 
                " ResultQtyMode2, ResultQtyMode3, ResultQtyMode4, ResultQtyMode5, SelfConVersion,"& _ 
                " StartTime, Status, StopTime, TotalQty, TotalTime FROM INS.DBWBINSData WHERE (Lo"& _ 
                "tNo = @lotno) AND (EndTime IS NULL)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@lotno", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT ComName, EndTime, FinalYield, GLCheck, GoodQty, InsName, InspJudg, InspMag"& _ 
                "Qty, InspNGQty, InspectorNo, JudgeReason, LotJudg, LotNo, MCNo, NGQty, NetVersio"& _ 
                "n, OPNo, ObjectIns, Package, Process, Remark, ReqDate, RequestMode1, RequestMode"& _ 
                "2, RequestMode3, RequestMode4, RequestMode5, RequestModeName1, RequestModeName2,"& _ 
                " RequestModeName3, RequestModeName4, RequestModeName5, RequestModeRemark1, Reque"& _ 
                "stModeRemark2, RequestModeRemark3, RequestModeRemark4, RequestModeRemark5, Resul"& _ 
                "tMode1, ResultMode2, ResultMode3, ResultMode4, ResultMode5, ResultModeName1, Res"& _ 
                "ultModeName2, ResultModeName3, ResultModeName4, ResultModeName5, ResultQtyMode1,"& _ 
                " ResultQtyMode2, ResultQtyMode3, ResultQtyMode4, ResultQtyMode5, SelfConVersion,"& _ 
                " StartTime, Status, StopTime, TotalQty, TotalTime FROM INS.DBWBINSData WHERE (Lo"& _ 
                "tNo = @lotno) AND (StartTime IS NULL) AND (EndTime IS NULL)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@lotno", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DBxDataSet.DBWBINSDataDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DBxDataSet.DBWBINSDataDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DBxDataSet.DBWBINSDataDataTable = New DBxDataSet.DBWBINSDataDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillWip(ByVal dataTable As DBxDataSet.DBWBINSDataDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetWip() As DBxDataSet.DBWBINSDataDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DBxDataSet.DBWBINSDataDataTable = New DBxDataSet.DBWBINSDataDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetTableCancleLot(ByVal lotno As String) As DBxDataSet.DBWBINSDataDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (lotno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lotno")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(lotno,String)
            End If
            Dim dataTable As DBxDataSet.DBWBINSDataDataTable = New DBxDataSet.DBWBINSDataDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetTableCheckLotEdit(ByVal lotno As String) As DBxDataSet.DBWBINSDataDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (lotno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lotno")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(lotno,String)
            End If
            Dim dataTable As DBxDataSet.DBWBINSDataDataTable = New DBxDataSet.DBWBINSDataDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DBxDataSet.DBWBINSDataDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DBxDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "DBWBINSData")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_StartTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_EndTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_ReqDate As Date,  _
                    ByVal Original_RequestMode2 As String,  _
                    ByVal Original_RequestMode3 As String,  _
                    ByVal Original_RequestMode4 As String,  _
                    ByVal Original_RequestMode5 As String,  _
                    ByVal Original_OPNo As String,  _
                    ByVal Original_InspMagQty As String,  _
                    ByVal Original_ResultMode1 As String,  _
                    ByVal Original_ResultQtyMode1 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ResultMode2 As String,  _
                    ByVal Original_ResultQtyMode2 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ResultMode3 As String,  _
                    ByVal Original_ResultQtyMode3 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ResultMode4 As String,  _
                    ByVal Original_ResultQtyMode4 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ResultMode5 As String,  _
                    ByVal Original_ResultQtyMode5 As Global.System.Nullable(Of Short),  _
                    ByVal Original_GoodQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NGQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FinalYield As Global.System.Nullable(Of Single),  _
                    ByVal Original_TotalTime As Global.System.Nullable(Of Short),  _
                    ByVal Original_InspJudg As String,  _
                    ByVal Original_LotJudg As String,  _
                    ByVal Original_Remark As String,  _
                    ByVal Original_GLCheck As String,  _
                    ByVal Original_SelfConVersion As String,  _
                    ByVal Original_NetVersion As String,  _
                    ByVal Original_RequestModeName1 As String,  _
                    ByVal Original_RequestModeName2 As String,  _
                    ByVal Original_RequestModeName3 As String,  _
                    ByVal Original_RequestModeName4 As String,  _
                    ByVal Original_RequestModeName5 As String,  _
                    ByVal Original_RequestModeRemark1 As String,  _
                    ByVal Original_RequestModeRemark2 As String,  _
                    ByVal Original_RequestModeRemark3 As String,  _
                    ByVal Original_RequestModeRemark4 As String,  _
                    ByVal Original_RequestModeRemark5 As String,  _
                    ByVal Original_ObjectIns As String,  _
                    ByVal Original_Package As String,  _
                    ByVal Original_Process As String,  _
                    ByVal Original_JudgeReason As String,  _
                    ByVal Original_ResultModeName1 As String,  _
                    ByVal Original_ResultModeName2 As String,  _
                    ByVal Original_ResultModeName3 As String,  _
                    ByVal Original_ResultModeName4 As String,  _
                    ByVal Original_ResultModeName5 As String,  _
                    ByVal Original_Status As String,  _
                    ByVal Original_StopTime As Global.System.Nullable(Of Short),  _
                    ByVal Original_InspNGQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RequestMode1 As String,  _
                    ByVal Original_MCNo As String,  _
                    ByVal Original_ComName As String,  _
                    ByVal Original_InspectorNo As String,  _
                    ByVal Original_InsName As String) As Integer
            If (Original_LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_LotNo,String)
            End If
            If (Original_StartTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_StartTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_EndTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_EndTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ReqDate,Date)
            If (Original_RequestMode2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_RequestMode2,String)
            End If
            If (Original_RequestMode3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_RequestMode3,String)
            End If
            If (Original_RequestMode4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_RequestMode4,String)
            End If
            If (Original_RequestMode5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_RequestMode5,String)
            End If
            If (Original_OPNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_OPNo,String)
            End If
            If (Original_InspMagQty Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_InspMagQty,String)
            End If
            If (Original_ResultMode1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ResultMode1,String)
            End If
            If (Original_ResultQtyMode1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_ResultQtyMode1.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_ResultMode2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_ResultMode2,String)
            End If
            If (Original_ResultQtyMode2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_ResultQtyMode2.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_ResultMode3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_ResultMode3,String)
            End If
            If (Original_ResultQtyMode3.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_ResultQtyMode3.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_ResultMode4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_ResultMode4,String)
            End If
            If (Original_ResultQtyMode4.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_ResultQtyMode4.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_ResultMode5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_ResultMode5,String)
            End If
            If (Original_ResultQtyMode5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_ResultQtyMode5.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_GoodQty.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_GoodQty.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_NGQty.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_NGQty.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalQty.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_TotalQty.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_FinalYield.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_FinalYield.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_TotalTime.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_InspJudg Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_InspJudg,String)
            End If
            If (Original_LotJudg Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_LotJudg,String)
            End If
            If (Original_Remark Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_Remark,String)
            End If
            If (Original_GLCheck Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_GLCheck,String)
            End If
            If (Original_SelfConVersion Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_SelfConVersion,String)
            End If
            If (Original_NetVersion Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_NetVersion,String)
            End If
            If (Original_RequestModeName1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_RequestModeName1,String)
            End If
            If (Original_RequestModeName2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_RequestModeName2,String)
            End If
            If (Original_RequestModeName3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_RequestModeName3,String)
            End If
            If (Original_RequestModeName4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_RequestModeName4,String)
            End If
            If (Original_RequestModeName5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_RequestModeName5,String)
            End If
            If (Original_RequestModeRemark1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_RequestModeRemark1,String)
            End If
            If (Original_RequestModeRemark2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_RequestModeRemark2,String)
            End If
            If (Original_RequestModeRemark3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_RequestModeRemark3,String)
            End If
            If (Original_RequestModeRemark4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_RequestModeRemark4,String)
            End If
            If (Original_RequestModeRemark5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_RequestModeRemark5,String)
            End If
            If (Original_ObjectIns Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_ObjectIns,String)
            End If
            If (Original_Package Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_Package,String)
            End If
            If (Original_Process Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_Process,String)
            End If
            If (Original_JudgeReason Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_JudgeReason,String)
            End If
            If (Original_ResultModeName1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_ResultModeName1,String)
            End If
            If (Original_ResultModeName2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_ResultModeName2,String)
            End If
            If (Original_ResultModeName3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_ResultModeName3,String)
            End If
            If (Original_ResultModeName4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_ResultModeName4,String)
            End If
            If (Original_ResultModeName5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_ResultModeName5,String)
            End If
            If (Original_Status Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(Original_Status,String)
            End If
            If (Original_StopTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(Original_StopTime.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Original_InspNGQty.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(Original_InspNGQty.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (Original_RequestMode1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(Original_RequestMode1,String)
            End If
            If (Original_MCNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(Original_MCNo,String)
            End If
            If (Original_ComName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(Original_ComName,String)
            End If
            If (Original_InspectorNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(Original_InspectorNo,String)
            End If
            If (Original_InsName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(Original_InsName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal LotNo As String,  _
                    ByVal StartTime As Global.System.Nullable(Of Date),  _
                    ByVal EndTime As Global.System.Nullable(Of Date),  _
                    ByVal ReqDate As Date,  _
                    ByVal RequestMode2 As String,  _
                    ByVal RequestMode3 As String,  _
                    ByVal RequestMode4 As String,  _
                    ByVal RequestMode5 As String,  _
                    ByVal OPNo As String,  _
                    ByVal InspMagQty As String,  _
                    ByVal ResultMode1 As String,  _
                    ByVal ResultQtyMode1 As Global.System.Nullable(Of Short),  _
                    ByVal ResultMode2 As String,  _
                    ByVal ResultQtyMode2 As Global.System.Nullable(Of Short),  _
                    ByVal ResultMode3 As String,  _
                    ByVal ResultQtyMode3 As Global.System.Nullable(Of Short),  _
                    ByVal ResultMode4 As String,  _
                    ByVal ResultQtyMode4 As Global.System.Nullable(Of Short),  _
                    ByVal ResultMode5 As String,  _
                    ByVal ResultQtyMode5 As Global.System.Nullable(Of Short),  _
                    ByVal GoodQty As Global.System.Nullable(Of Integer),  _
                    ByVal NGQty As Global.System.Nullable(Of Integer),  _
                    ByVal TotalQty As Global.System.Nullable(Of Integer),  _
                    ByVal FinalYield As Global.System.Nullable(Of Single),  _
                    ByVal TotalTime As Global.System.Nullable(Of Short),  _
                    ByVal InspJudg As String,  _
                    ByVal LotJudg As String,  _
                    ByVal Remark As String,  _
                    ByVal GLCheck As String,  _
                    ByVal SelfConVersion As String,  _
                    ByVal NetVersion As String,  _
                    ByVal RequestModeName1 As String,  _
                    ByVal RequestModeName2 As String,  _
                    ByVal RequestModeName3 As String,  _
                    ByVal RequestModeName4 As String,  _
                    ByVal RequestModeName5 As String,  _
                    ByVal RequestModeRemark1 As String,  _
                    ByVal RequestModeRemark2 As String,  _
                    ByVal RequestModeRemark3 As String,  _
                    ByVal RequestModeRemark4 As String,  _
                    ByVal RequestModeRemark5 As String,  _
                    ByVal ObjectIns As String,  _
                    ByVal Package As String,  _
                    ByVal Process As String,  _
                    ByVal JudgeReason As String,  _
                    ByVal ResultModeName1 As String,  _
                    ByVal ResultModeName2 As String,  _
                    ByVal ResultModeName3 As String,  _
                    ByVal ResultModeName4 As String,  _
                    ByVal ResultModeName5 As String,  _
                    ByVal Status As String,  _
                    ByVal StopTime As Global.System.Nullable(Of Short),  _
                    ByVal InspNGQty As Global.System.Nullable(Of Integer),  _
                    ByVal RequestMode1 As String,  _
                    ByVal MCNo As String,  _
                    ByVal ComName As String,  _
                    ByVal InspectorNo As String,  _
                    ByVal InsName As String) As Integer
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(LotNo,String)
            End If
            If (StartTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(StartTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (EndTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(EndTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ReqDate,Date)
            If (RequestMode2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(RequestMode2,String)
            End If
            If (RequestMode3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(RequestMode3,String)
            End If
            If (RequestMode4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(RequestMode4,String)
            End If
            If (RequestMode5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(RequestMode5,String)
            End If
            If (OPNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(OPNo,String)
            End If
            If (InspMagQty Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(InspMagQty,String)
            End If
            If (ResultMode1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ResultMode1,String)
            End If
            If (ResultQtyMode1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ResultQtyMode1.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ResultMode2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(ResultMode2,String)
            End If
            If (ResultQtyMode2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(ResultQtyMode2.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ResultMode3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(ResultMode3,String)
            End If
            If (ResultQtyMode3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(ResultQtyMode3.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (ResultMode4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(ResultMode4,String)
            End If
            If (ResultQtyMode4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(ResultQtyMode4.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (ResultMode5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(ResultMode5,String)
            End If
            If (ResultQtyMode5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ResultQtyMode5.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (GoodQty.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(GoodQty.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (NGQty.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(NGQty.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (TotalQty.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(TotalQty.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (FinalYield.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(FinalYield.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (TotalTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(TotalTime.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (InspJudg Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(InspJudg,String)
            End If
            If (LotJudg Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(LotJudg,String)
            End If
            If (Remark Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Remark,String)
            End If
            If (GLCheck Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(GLCheck,String)
            End If
            If (SelfConVersion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(SelfConVersion,String)
            End If
            If (NetVersion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(NetVersion,String)
            End If
            If (RequestModeName1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(RequestModeName1,String)
            End If
            If (RequestModeName2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(RequestModeName2,String)
            End If
            If (RequestModeName3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(RequestModeName3,String)
            End If
            If (RequestModeName4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(RequestModeName4,String)
            End If
            If (RequestModeName5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(RequestModeName5,String)
            End If
            If (RequestModeRemark1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(RequestModeRemark1,String)
            End If
            If (RequestModeRemark2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(RequestModeRemark2,String)
            End If
            If (RequestModeRemark3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(RequestModeRemark3,String)
            End If
            If (RequestModeRemark4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(RequestModeRemark4,String)
            End If
            If (RequestModeRemark5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(RequestModeRemark5,String)
            End If
            If (ObjectIns Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(ObjectIns,String)
            End If
            If (Package Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Package,String)
            End If
            If (Process Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(Process,String)
            End If
            If (JudgeReason Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(JudgeReason,String)
            End If
            If (ResultModeName1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(ResultModeName1,String)
            End If
            If (ResultModeName2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(ResultModeName2,String)
            End If
            If (ResultModeName3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(ResultModeName3,String)
            End If
            If (ResultModeName4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(ResultModeName4,String)
            End If
            If (ResultModeName5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(ResultModeName5,String)
            End If
            If (Status Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(Status,String)
            End If
            If (StopTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(StopTime.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (InspNGQty.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(InspNGQty.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (RequestMode1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(RequestMode1,String)
            End If
            If (MCNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(MCNo,String)
            End If
            If (ComName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(ComName,String)
            End If
            If (InspectorNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(InspectorNo,String)
            End If
            If (InsName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(InsName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal LotNo As String,  _
                    ByVal StartTime As Global.System.Nullable(Of Date),  _
                    ByVal EndTime As Global.System.Nullable(Of Date),  _
                    ByVal ReqDate As Date,  _
                    ByVal RequestMode2 As String,  _
                    ByVal RequestMode3 As String,  _
                    ByVal RequestMode4 As String,  _
                    ByVal RequestMode5 As String,  _
                    ByVal OPNo As String,  _
                    ByVal InspMagQty As String,  _
                    ByVal ResultMode1 As String,  _
                    ByVal ResultQtyMode1 As Global.System.Nullable(Of Short),  _
                    ByVal ResultMode2 As String,  _
                    ByVal ResultQtyMode2 As Global.System.Nullable(Of Short),  _
                    ByVal ResultMode3 As String,  _
                    ByVal ResultQtyMode3 As Global.System.Nullable(Of Short),  _
                    ByVal ResultMode4 As String,  _
                    ByVal ResultQtyMode4 As Global.System.Nullable(Of Short),  _
                    ByVal ResultMode5 As String,  _
                    ByVal ResultQtyMode5 As Global.System.Nullable(Of Short),  _
                    ByVal GoodQty As Global.System.Nullable(Of Integer),  _
                    ByVal NGQty As Global.System.Nullable(Of Integer),  _
                    ByVal TotalQty As Global.System.Nullable(Of Integer),  _
                    ByVal FinalYield As Global.System.Nullable(Of Single),  _
                    ByVal TotalTime As Global.System.Nullable(Of Short),  _
                    ByVal InspJudg As String,  _
                    ByVal LotJudg As String,  _
                    ByVal Remark As String,  _
                    ByVal GLCheck As String,  _
                    ByVal SelfConVersion As String,  _
                    ByVal NetVersion As String,  _
                    ByVal RequestModeName1 As String,  _
                    ByVal RequestModeName2 As String,  _
                    ByVal RequestModeName3 As String,  _
                    ByVal RequestModeName4 As String,  _
                    ByVal RequestModeName5 As String,  _
                    ByVal RequestModeRemark1 As String,  _
                    ByVal RequestModeRemark2 As String,  _
                    ByVal RequestModeRemark3 As String,  _
                    ByVal RequestModeRemark4 As String,  _
                    ByVal RequestModeRemark5 As String,  _
                    ByVal ObjectIns As String,  _
                    ByVal Package As String,  _
                    ByVal Process As String,  _
                    ByVal JudgeReason As String,  _
                    ByVal ResultModeName1 As String,  _
                    ByVal ResultModeName2 As String,  _
                    ByVal ResultModeName3 As String,  _
                    ByVal ResultModeName4 As String,  _
                    ByVal ResultModeName5 As String,  _
                    ByVal Status As String,  _
                    ByVal StopTime As Global.System.Nullable(Of Short),  _
                    ByVal InspNGQty As Global.System.Nullable(Of Integer),  _
                    ByVal RequestMode1 As String,  _
                    ByVal MCNo As String,  _
                    ByVal ComName As String,  _
                    ByVal InspectorNo As String,  _
                    ByVal InsName As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_StartTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_EndTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_ReqDate As Date,  _
                    ByVal Original_RequestMode2 As String,  _
                    ByVal Original_RequestMode3 As String,  _
                    ByVal Original_RequestMode4 As String,  _
                    ByVal Original_RequestMode5 As String,  _
                    ByVal Original_OPNo As String,  _
                    ByVal Original_InspMagQty As String,  _
                    ByVal Original_ResultMode1 As String,  _
                    ByVal Original_ResultQtyMode1 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ResultMode2 As String,  _
                    ByVal Original_ResultQtyMode2 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ResultMode3 As String,  _
                    ByVal Original_ResultQtyMode3 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ResultMode4 As String,  _
                    ByVal Original_ResultQtyMode4 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ResultMode5 As String,  _
                    ByVal Original_ResultQtyMode5 As Global.System.Nullable(Of Short),  _
                    ByVal Original_GoodQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NGQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FinalYield As Global.System.Nullable(Of Single),  _
                    ByVal Original_TotalTime As Global.System.Nullable(Of Short),  _
                    ByVal Original_InspJudg As String,  _
                    ByVal Original_LotJudg As String,  _
                    ByVal Original_Remark As String,  _
                    ByVal Original_GLCheck As String,  _
                    ByVal Original_SelfConVersion As String,  _
                    ByVal Original_NetVersion As String,  _
                    ByVal Original_RequestModeName1 As String,  _
                    ByVal Original_RequestModeName2 As String,  _
                    ByVal Original_RequestModeName3 As String,  _
                    ByVal Original_RequestModeName4 As String,  _
                    ByVal Original_RequestModeName5 As String,  _
                    ByVal Original_RequestModeRemark1 As String,  _
                    ByVal Original_RequestModeRemark2 As String,  _
                    ByVal Original_RequestModeRemark3 As String,  _
                    ByVal Original_RequestModeRemark4 As String,  _
                    ByVal Original_RequestModeRemark5 As String,  _
                    ByVal Original_ObjectIns As String,  _
                    ByVal Original_Package As String,  _
                    ByVal Original_Process As String,  _
                    ByVal Original_JudgeReason As String,  _
                    ByVal Original_ResultModeName1 As String,  _
                    ByVal Original_ResultModeName2 As String,  _
                    ByVal Original_ResultModeName3 As String,  _
                    ByVal Original_ResultModeName4 As String,  _
                    ByVal Original_ResultModeName5 As String,  _
                    ByVal Original_Status As String,  _
                    ByVal Original_StopTime As Global.System.Nullable(Of Short),  _
                    ByVal Original_InspNGQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RequestMode1 As String,  _
                    ByVal Original_MCNo As String,  _
                    ByVal Original_ComName As String,  _
                    ByVal Original_InspectorNo As String,  _
                    ByVal Original_InsName As String) As Integer
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LotNo,String)
            End If
            If (StartTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(StartTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (EndTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(EndTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ReqDate,Date)
            If (RequestMode2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(RequestMode2,String)
            End If
            If (RequestMode3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(RequestMode3,String)
            End If
            If (RequestMode4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(RequestMode4,String)
            End If
            If (RequestMode5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(RequestMode5,String)
            End If
            If (OPNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(OPNo,String)
            End If
            If (InspMagQty Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(InspMagQty,String)
            End If
            If (ResultMode1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ResultMode1,String)
            End If
            If (ResultQtyMode1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ResultQtyMode1.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ResultMode2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ResultMode2,String)
            End If
            If (ResultQtyMode2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ResultQtyMode2.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ResultMode3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(ResultMode3,String)
            End If
            If (ResultQtyMode3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(ResultQtyMode3.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (ResultMode4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(ResultMode4,String)
            End If
            If (ResultQtyMode4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(ResultQtyMode4.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (ResultMode5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(ResultMode5,String)
            End If
            If (ResultQtyMode5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ResultQtyMode5.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (GoodQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(GoodQty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (NGQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(NGQty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (TotalQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(TotalQty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (FinalYield.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(FinalYield.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (TotalTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(TotalTime.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (InspJudg Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(InspJudg,String)
            End If
            If (LotJudg Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(LotJudg,String)
            End If
            If (Remark Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Remark,String)
            End If
            If (GLCheck Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(GLCheck,String)
            End If
            If (SelfConVersion Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(SelfConVersion,String)
            End If
            If (NetVersion Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(NetVersion,String)
            End If
            If (RequestModeName1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(RequestModeName1,String)
            End If
            If (RequestModeName2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(RequestModeName2,String)
            End If
            If (RequestModeName3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(RequestModeName3,String)
            End If
            If (RequestModeName4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(RequestModeName4,String)
            End If
            If (RequestModeName5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(RequestModeName5,String)
            End If
            If (RequestModeRemark1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(RequestModeRemark1,String)
            End If
            If (RequestModeRemark2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(RequestModeRemark2,String)
            End If
            If (RequestModeRemark3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(RequestModeRemark3,String)
            End If
            If (RequestModeRemark4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(RequestModeRemark4,String)
            End If
            If (RequestModeRemark5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(RequestModeRemark5,String)
            End If
            If (ObjectIns Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(ObjectIns,String)
            End If
            If (Package Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Package,String)
            End If
            If (Process Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Process,String)
            End If
            If (JudgeReason Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(JudgeReason,String)
            End If
            If (ResultModeName1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(ResultModeName1,String)
            End If
            If (ResultModeName2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(ResultModeName2,String)
            End If
            If (ResultModeName3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(ResultModeName3,String)
            End If
            If (ResultModeName4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(ResultModeName4,String)
            End If
            If (ResultModeName5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(ResultModeName5,String)
            End If
            If (Status Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Status,String)
            End If
            If (StopTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(StopTime.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (InspNGQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(InspNGQty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (RequestMode1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(RequestMode1,String)
            End If
            If (MCNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(MCNo,String)
            End If
            If (ComName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(ComName,String)
            End If
            If (InspectorNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(InspectorNo,String)
            End If
            If (InsName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(InsName,String)
            End If
            If (Original_LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_LotNo,String)
            End If
            If (Original_StartTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_StartTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_EndTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_EndTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_ReqDate,Date)
            If (Original_RequestMode2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_RequestMode2,String)
            End If
            If (Original_RequestMode3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_RequestMode3,String)
            End If
            If (Original_RequestMode4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_RequestMode4,String)
            End If
            If (Original_RequestMode5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_RequestMode5,String)
            End If
            If (Original_OPNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_OPNo,String)
            End If
            If (Original_InspMagQty Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_InspMagQty,String)
            End If
            If (Original_ResultMode1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_ResultMode1,String)
            End If
            If (Original_ResultQtyMode1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_ResultQtyMode1.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_ResultMode2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_ResultMode2,String)
            End If
            If (Original_ResultQtyMode2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_ResultQtyMode2.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_ResultMode3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_ResultMode3,String)
            End If
            If (Original_ResultQtyMode3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_ResultQtyMode3.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_ResultMode4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_ResultMode4,String)
            End If
            If (Original_ResultQtyMode4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_ResultQtyMode4.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_ResultMode5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_ResultMode5,String)
            End If
            If (Original_ResultQtyMode5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_ResultQtyMode5.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_GoodQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_GoodQty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_NGQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_NGQty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_TotalQty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Original_FinalYield.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_FinalYield.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_TotalTime.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Original_InspJudg Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_InspJudg,String)
            End If
            If (Original_LotJudg Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_LotJudg,String)
            End If
            If (Original_Remark Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_Remark,String)
            End If
            If (Original_GLCheck Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_GLCheck,String)
            End If
            If (Original_SelfConVersion Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_SelfConVersion,String)
            End If
            If (Original_NetVersion Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_NetVersion,String)
            End If
            If (Original_RequestModeName1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_RequestModeName1,String)
            End If
            If (Original_RequestModeName2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_RequestModeName2,String)
            End If
            If (Original_RequestModeName3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_RequestModeName3,String)
            End If
            If (Original_RequestModeName4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_RequestModeName4,String)
            End If
            If (Original_RequestModeName5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_RequestModeName5,String)
            End If
            If (Original_RequestModeRemark1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Original_RequestModeRemark1,String)
            End If
            If (Original_RequestModeRemark2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_RequestModeRemark2,String)
            End If
            If (Original_RequestModeRemark3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_RequestModeRemark3,String)
            End If
            If (Original_RequestModeRemark4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_RequestModeRemark4,String)
            End If
            If (Original_RequestModeRemark5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Original_RequestModeRemark5,String)
            End If
            If (Original_ObjectIns Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Original_ObjectIns,String)
            End If
            If (Original_Package Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Original_Package,String)
            End If
            If (Original_Process Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Original_Process,String)
            End If
            If (Original_JudgeReason Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Original_JudgeReason,String)
            End If
            If (Original_ResultModeName1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_ResultModeName1,String)
            End If
            If (Original_ResultModeName2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_ResultModeName2,String)
            End If
            If (Original_ResultModeName3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_ResultModeName3,String)
            End If
            If (Original_ResultModeName4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(Original_ResultModeName4,String)
            End If
            If (Original_ResultModeName5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(Original_ResultModeName5,String)
            End If
            If (Original_Status Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(Original_Status,String)
            End If
            If (Original_StopTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(Original_StopTime.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = Global.System.DBNull.Value
            End If
            If (Original_InspNGQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(Original_InspNGQty.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = Global.System.DBNull.Value
            End If
            If (Original_RequestMode1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(Original_RequestMode1,String)
            End If
            If (Original_MCNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(Original_MCNo,String)
            End If
            If (Original_ComName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(Original_ComName,String)
            End If
            If (Original_InspectorNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(Original_InspectorNo,String)
            End If
            If (Original_InsName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(Original_InsName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal StartTime As Global.System.Nullable(Of Date),  _
                    ByVal EndTime As Global.System.Nullable(Of Date),  _
                    ByVal RequestMode2 As String,  _
                    ByVal RequestMode3 As String,  _
                    ByVal RequestMode4 As String,  _
                    ByVal RequestMode5 As String,  _
                    ByVal OPNo As String,  _
                    ByVal InspMagQty As String,  _
                    ByVal ResultMode1 As String,  _
                    ByVal ResultQtyMode1 As Global.System.Nullable(Of Short),  _
                    ByVal ResultMode2 As String,  _
                    ByVal ResultQtyMode2 As Global.System.Nullable(Of Short),  _
                    ByVal ResultMode3 As String,  _
                    ByVal ResultQtyMode3 As Global.System.Nullable(Of Short),  _
                    ByVal ResultMode4 As String,  _
                    ByVal ResultQtyMode4 As Global.System.Nullable(Of Short),  _
                    ByVal ResultMode5 As String,  _
                    ByVal ResultQtyMode5 As Global.System.Nullable(Of Short),  _
                    ByVal GoodQty As Global.System.Nullable(Of Integer),  _
                    ByVal NGQty As Global.System.Nullable(Of Integer),  _
                    ByVal TotalQty As Global.System.Nullable(Of Integer),  _
                    ByVal FinalYield As Global.System.Nullable(Of Single),  _
                    ByVal TotalTime As Global.System.Nullable(Of Short),  _
                    ByVal InspJudg As String,  _
                    ByVal LotJudg As String,  _
                    ByVal Remark As String,  _
                    ByVal GLCheck As String,  _
                    ByVal SelfConVersion As String,  _
                    ByVal NetVersion As String,  _
                    ByVal RequestModeName1 As String,  _
                    ByVal RequestModeName2 As String,  _
                    ByVal RequestModeName3 As String,  _
                    ByVal RequestModeName4 As String,  _
                    ByVal RequestModeName5 As String,  _
                    ByVal RequestModeRemark1 As String,  _
                    ByVal RequestModeRemark2 As String,  _
                    ByVal RequestModeRemark3 As String,  _
                    ByVal RequestModeRemark4 As String,  _
                    ByVal RequestModeRemark5 As String,  _
                    ByVal ObjectIns As String,  _
                    ByVal Package As String,  _
                    ByVal Process As String,  _
                    ByVal JudgeReason As String,  _
                    ByVal ResultModeName1 As String,  _
                    ByVal ResultModeName2 As String,  _
                    ByVal ResultModeName3 As String,  _
                    ByVal ResultModeName4 As String,  _
                    ByVal ResultModeName5 As String,  _
                    ByVal Status As String,  _
                    ByVal StopTime As Global.System.Nullable(Of Short),  _
                    ByVal InspNGQty As Global.System.Nullable(Of Integer),  _
                    ByVal RequestMode1 As String,  _
                    ByVal MCNo As String,  _
                    ByVal ComName As String,  _
                    ByVal InspectorNo As String,  _
                    ByVal InsName As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_StartTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_EndTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_ReqDate As Date,  _
                    ByVal Original_RequestMode2 As String,  _
                    ByVal Original_RequestMode3 As String,  _
                    ByVal Original_RequestMode4 As String,  _
                    ByVal Original_RequestMode5 As String,  _
                    ByVal Original_OPNo As String,  _
                    ByVal Original_InspMagQty As String,  _
                    ByVal Original_ResultMode1 As String,  _
                    ByVal Original_ResultQtyMode1 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ResultMode2 As String,  _
                    ByVal Original_ResultQtyMode2 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ResultMode3 As String,  _
                    ByVal Original_ResultQtyMode3 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ResultMode4 As String,  _
                    ByVal Original_ResultQtyMode4 As Global.System.Nullable(Of Short),  _
                    ByVal Original_ResultMode5 As String,  _
                    ByVal Original_ResultQtyMode5 As Global.System.Nullable(Of Short),  _
                    ByVal Original_GoodQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NGQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TotalQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FinalYield As Global.System.Nullable(Of Single),  _
                    ByVal Original_TotalTime As Global.System.Nullable(Of Short),  _
                    ByVal Original_InspJudg As String,  _
                    ByVal Original_LotJudg As String,  _
                    ByVal Original_Remark As String,  _
                    ByVal Original_GLCheck As String,  _
                    ByVal Original_SelfConVersion As String,  _
                    ByVal Original_NetVersion As String,  _
                    ByVal Original_RequestModeName1 As String,  _
                    ByVal Original_RequestModeName2 As String,  _
                    ByVal Original_RequestModeName3 As String,  _
                    ByVal Original_RequestModeName4 As String,  _
                    ByVal Original_RequestModeName5 As String,  _
                    ByVal Original_RequestModeRemark1 As String,  _
                    ByVal Original_RequestModeRemark2 As String,  _
                    ByVal Original_RequestModeRemark3 As String,  _
                    ByVal Original_RequestModeRemark4 As String,  _
                    ByVal Original_RequestModeRemark5 As String,  _
                    ByVal Original_ObjectIns As String,  _
                    ByVal Original_Package As String,  _
                    ByVal Original_Process As String,  _
                    ByVal Original_JudgeReason As String,  _
                    ByVal Original_ResultModeName1 As String,  _
                    ByVal Original_ResultModeName2 As String,  _
                    ByVal Original_ResultModeName3 As String,  _
                    ByVal Original_ResultModeName4 As String,  _
                    ByVal Original_ResultModeName5 As String,  _
                    ByVal Original_Status As String,  _
                    ByVal Original_StopTime As Global.System.Nullable(Of Short),  _
                    ByVal Original_InspNGQty As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RequestMode1 As String,  _
                    ByVal Original_MCNo As String,  _
                    ByVal Original_ComName As String,  _
                    ByVal Original_InspectorNo As String,  _
                    ByVal Original_InsName As String) As Integer
            Return Me.Update(Original_LotNo, StartTime, EndTime, Original_ReqDate, RequestMode2, RequestMode3, RequestMode4, RequestMode5, OPNo, InspMagQty, ResultMode1, ResultQtyMode1, ResultMode2, ResultQtyMode2, ResultMode3, ResultQtyMode3, ResultMode4, ResultQtyMode4, ResultMode5, ResultQtyMode5, GoodQty, NGQty, TotalQty, FinalYield, TotalTime, InspJudg, LotJudg, Remark, GLCheck, SelfConVersion, NetVersion, RequestModeName1, RequestModeName2, RequestModeName3, RequestModeName4, RequestModeName5, RequestModeRemark1, RequestModeRemark2, RequestModeRemark3, RequestModeRemark4, RequestModeRemark5, ObjectIns, Package, Process, JudgeReason, ResultModeName1, ResultModeName2, ResultModeName3, ResultModeName4, ResultModeName5, Status, StopTime, InspNGQty, RequestMode1, MCNo, ComName, InspectorNo, InsName, Original_LotNo, Original_StartTime, Original_EndTime, Original_ReqDate, Original_RequestMode2, Original_RequestMode3, Original_RequestMode4, Original_RequestMode5, Original_OPNo, Original_InspMagQty, Original_ResultMode1, Original_ResultQtyMode1, Original_ResultMode2, Original_ResultQtyMode2, Original_ResultMode3, Original_ResultQtyMode3, Original_ResultMode4, Original_ResultQtyMode4, Original_ResultMode5, Original_ResultQtyMode5, Original_GoodQty, Original_NGQty, Original_TotalQty, Original_FinalYield, Original_TotalTime, Original_InspJudg, Original_LotJudg, Original_Remark, Original_GLCheck, Original_SelfConVersion, Original_NetVersion, Original_RequestModeName1, Original_RequestModeName2, Original_RequestModeName3, Original_RequestModeName4, Original_RequestModeName5, Original_RequestModeRemark1, Original_RequestModeRemark2, Original_RequestModeRemark3, Original_RequestModeRemark4, Original_RequestModeRemark5, Original_ObjectIns, Original_Package, Original_Process, Original_JudgeReason, Original_ResultModeName1, Original_ResultModeName2, Original_ResultModeName3, Original_ResultModeName4, Original_ResultModeName5, Original_Status, Original_StopTime, Original_InspNGQty, Original_RequestMode1, Original_MCNo, Original_ComName, Original_InspectorNo, Original_InsName)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class QueriesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private _commandCollection() As Global.System.Data.IDbCommand
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.IDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.IDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Selfcon_DB_WB_Inspecction_Lot.My.MySettings.Default.DBxConnectionString)
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).CommandText = "SELECT                      COUNT(*) AS Expr1, Process"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM                     "& _ 
                "    INS.DBWBINSData"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE                       (LotNo = @Lotno)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY     "& _ 
                "         Process"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"HAVING                  (Process = @Process)"
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.Text
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lotno", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Process", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Process", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CheckLotNo(ByVal Lotno As String, ByVal Process As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(0),Global.System.Data.SqlClient.SqlCommand)
            If (Lotno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Lotno")
            Else
                command.Parameters(0).Value = CType(Lotno,String)
            End If
            If (Process Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Process,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _dBDataTableAdapter As DBDataTableAdapter
        
        Private _wBDataTableAdapter As WBDataTableAdapter
        
        Private _lotAlarmQtyTableAdapter As LotAlarmQtyTableAdapter
        
        Private _dBWBINSDataTableAdapter As DBWBINSDataTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property DBDataTableAdapter() As DBDataTableAdapter
            Get
                Return Me._dBDataTableAdapter
            End Get
            Set
                Me._dBDataTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property WBDataTableAdapter() As WBDataTableAdapter
            Get
                Return Me._wBDataTableAdapter
            End Get
            Set
                Me._wBDataTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property LotAlarmQtyTableAdapter() As LotAlarmQtyTableAdapter
            Get
                Return Me._lotAlarmQtyTableAdapter
            End Get
            Set
                Me._lotAlarmQtyTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property DBWBINSDataTableAdapter() As DBWBINSDataTableAdapter
            Get
                Return Me._dBWBINSDataTableAdapter
            End Get
            Set
                Me._dBWBINSDataTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._dBDataTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dBDataTableAdapter.Connection) Is Nothing)) Then
                    Return Me._dBDataTableAdapter.Connection
                End If
                If ((Not (Me._wBDataTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._wBDataTableAdapter.Connection) Is Nothing)) Then
                    Return Me._wBDataTableAdapter.Connection
                End If
                If ((Not (Me._lotAlarmQtyTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._lotAlarmQtyTableAdapter.Connection) Is Nothing)) Then
                    Return Me._lotAlarmQtyTableAdapter.Connection
                End If
                If ((Not (Me._dBWBINSDataTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dBWBINSDataTableAdapter.Connection) Is Nothing)) Then
                    Return Me._dBWBINSDataTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._dBDataTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._wBDataTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._lotAlarmQtyTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._dBWBINSDataTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DBxDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._dBDataTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.DBData.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dBDataTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._wBDataTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.WBData.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._wBDataTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._lotAlarmQtyTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.LotAlarmQty.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._lotAlarmQtyTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._dBWBINSDataTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.DBWBINSData.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dBWBINSDataTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DBxDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._dBDataTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.DBData.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dBDataTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._wBDataTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.WBData.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._wBDataTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._lotAlarmQtyTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.LotAlarmQty.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._lotAlarmQtyTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._dBWBINSDataTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.DBWBINSData.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dBWBINSDataTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DBxDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._dBWBINSDataTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.DBWBINSData.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dBWBINSDataTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._lotAlarmQtyTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.LotAlarmQty.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._lotAlarmQtyTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._wBDataTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.WBData.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._wBDataTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._dBDataTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.DBData.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dBDataTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DBxDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._dBDataTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._dBDataTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._wBDataTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._wBDataTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._lotAlarmQtyTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._lotAlarmQtyTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._dBWBINSDataTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._dBWBINSDataTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._dBDataTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dBDataTableAdapter, Me._dBDataTableAdapter.Connection)
                    Me._dBDataTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._dBDataTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._dBDataTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dBDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dBDataTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._wBDataTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._wBDataTableAdapter, Me._wBDataTableAdapter.Connection)
                    Me._wBDataTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._wBDataTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._wBDataTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._wBDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._wBDataTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._lotAlarmQtyTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._lotAlarmQtyTableAdapter, Me._lotAlarmQtyTableAdapter.Connection)
                    Me._lotAlarmQtyTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._lotAlarmQtyTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._lotAlarmQtyTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._lotAlarmQtyTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._lotAlarmQtyTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._dBWBINSDataTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dBWBINSDataTableAdapter, Me._dBWBINSDataTableAdapter.Connection)
                    Me._dBWBINSDataTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._dBWBINSDataTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._dBWBINSDataTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dBWBINSDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dBWBINSDataTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._dBDataTableAdapter) Is Nothing) Then
                    Me._dBDataTableAdapter.Connection = CType(revertConnections(Me._dBDataTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._dBDataTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._wBDataTableAdapter) Is Nothing) Then
                    Me._wBDataTableAdapter.Connection = CType(revertConnections(Me._wBDataTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._wBDataTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._lotAlarmQtyTableAdapter) Is Nothing) Then
                    Me._lotAlarmQtyTableAdapter.Connection = CType(revertConnections(Me._lotAlarmQtyTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._lotAlarmQtyTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._dBWBINSDataTableAdapter) Is Nothing) Then
                    Me._dBWBINSDataTableAdapter.Connection = CType(revertConnections(Me._dBWBINSDataTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._dBWBINSDataTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
